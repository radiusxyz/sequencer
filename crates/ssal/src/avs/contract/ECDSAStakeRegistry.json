{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_delegationManager",
                    "type": "address",
                    "internalType": "contract IDelegationManager"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "deregisterOperator",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getLastCheckpointOperatorWeight",
            "inputs": [
                {
                    "name": "_operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getLastCheckpointThresholdWeight",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getLastCheckpointThresholdWeightAtBlock",
            "inputs": [
                {
                    "name": "_blockNumber",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getLastCheckpointTotalWeight",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getLastCheckpointTotalWeightAtBlock",
            "inputs": [
                {
                    "name": "_blockNumber",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getOperatorWeight",
            "inputs": [
                {
                    "name": "_operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getOperatorWeightAtBlock",
            "inputs": [
                {
                    "name": "_operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_blockNumber",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "initialize",
            "inputs": [
                {
                    "name": "_serviceManager",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_thresholdWeight",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_quorum",
                    "type": "tuple",
                    "internalType": "struct Quorum",
                    "components": [
                        {
                            "name": "strategies",
                            "type": "tuple[]",
                            "internalType": "struct StrategyParams[]",
                            "components": [
                                {
                                    "name": "strategy",
                                    "type": "address",
                                    "internalType": "contract IStrategy"
                                },
                                {
                                    "name": "multiplier",
                                    "type": "uint96",
                                    "internalType": "uint96"
                                }
                            ]
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isValidSignature",
            "inputs": [
                {
                    "name": "_dataHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_signatureData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "minimumWeight",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "operatorRegistered",
            "inputs": [
                {
                    "name": "_operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "owner",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "quorum",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct Quorum",
                    "components": [
                        {
                            "name": "strategies",
                            "type": "tuple[]",
                            "internalType": "struct StrategyParams[]",
                            "components": [
                                {
                                    "name": "strategy",
                                    "type": "address",
                                    "internalType": "contract IStrategy"
                                },
                                {
                                    "name": "multiplier",
                                    "type": "uint96",
                                    "internalType": "uint96"
                                }
                            ]
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "registerOperatorWithSignature",
            "inputs": [
                {
                    "name": "_operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_operatorSignature",
                    "type": "tuple",
                    "internalType": "struct ISignatureUtils.SignatureWithSaltAndExpiry",
                    "components": [
                        {
                            "name": "signature",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "expiry",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "renounceOwnership",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferOwnership",
            "inputs": [
                {
                    "name": "newOwner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "updateMinimumWeight",
            "inputs": [
                {
                    "name": "_newMinimumWeight",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_operators",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "updateOperators",
            "inputs": [
                {
                    "name": "_operators",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "updateOperatorsForQuorum",
            "inputs": [
                {
                    "name": "operatorsPerQuorum",
                    "type": "address[][]",
                    "internalType": "address[][]"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "updateQuorumConfig",
            "inputs": [
                {
                    "name": "_quorum",
                    "type": "tuple",
                    "internalType": "struct Quorum",
                    "components": [
                        {
                            "name": "strategies",
                            "type": "tuple[]",
                            "internalType": "struct StrategyParams[]",
                            "components": [
                                {
                                    "name": "strategy",
                                    "type": "address",
                                    "internalType": "contract IStrategy"
                                },
                                {
                                    "name": "multiplier",
                                    "type": "uint96",
                                    "internalType": "uint96"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "_operators",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "updateStakeThreshold",
            "inputs": [
                {
                    "name": "_thresholdWeight",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Initialized",
            "inputs": [
                {
                    "name": "version",
                    "type": "uint8",
                    "indexed": false,
                    "internalType": "uint8"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MinimumWeightUpdated",
            "inputs": [
                {
                    "name": "_old",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "_new",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OperatorDeregistered",
            "inputs": [
                {
                    "name": "_operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "_avs",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OperatorRegistered",
            "inputs": [
                {
                    "name": "_operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "_avs",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OperatorWeightUpdated",
            "inputs": [
                {
                    "name": "_operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "oldWeight",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newWeight",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OwnershipTransferred",
            "inputs": [
                {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "QuorumUpdated",
            "inputs": [
                {
                    "name": "_old",
                    "type": "tuple",
                    "indexed": false,
                    "internalType": "struct Quorum",
                    "components": [
                        {
                            "name": "strategies",
                            "type": "tuple[]",
                            "internalType": "struct StrategyParams[]",
                            "components": [
                                {
                                    "name": "strategy",
                                    "type": "address",
                                    "internalType": "contract IStrategy"
                                },
                                {
                                    "name": "multiplier",
                                    "type": "uint96",
                                    "internalType": "uint96"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "_new",
                    "type": "tuple",
                    "indexed": false,
                    "internalType": "struct Quorum",
                    "components": [
                        {
                            "name": "strategies",
                            "type": "tuple[]",
                            "internalType": "struct StrategyParams[]",
                            "components": [
                                {
                                    "name": "strategy",
                                    "type": "address",
                                    "internalType": "contract IStrategy"
                                },
                                {
                                    "name": "multiplier",
                                    "type": "uint96",
                                    "internalType": "uint96"
                                }
                            ]
                        }
                    ]
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ThresholdWeightUpdated",
            "inputs": [
                {
                    "name": "_thresholdWeight",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TotalWeightUpdated",
            "inputs": [
                {
                    "name": "oldTotalWeight",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newTotalWeight",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "UpdateMinimumWeight",
            "inputs": [
                {
                    "name": "oldMinimumWeight",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newMinimumWeight",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "InsufficientSignedStake",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientWeight",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidLength",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidQuorum",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidSignature",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidSignedWeight",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidThreshold",
            "inputs": []
        },
        {
            "type": "error",
            "name": "LengthMismatch",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MustUpdateAllOperators",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotSorted",
            "inputs": []
        },
        {
            "type": "error",
            "name": "OperatorAlreadyRegistered",
            "inputs": []
        },
        {
            "type": "error",
            "name": "OperatorNotRegistered",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x60a0604052348015600f57600080fd5b506040516126e83803806126e8833981016040819052602c91603c565b6001600160a01b0316608052606a565b600060208284031215604d57600080fd5b81516001600160a01b0381168114606357600080fd5b9392505050565b608051612663610085600039600061063a01526126636000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c8063696255be116100b857806398ec1ac91161007c57806398ec1ac914610282578063ab11899514610295578063b933fa74146102a8578063dec5d1f6146102b0578063ec7fbb31146102c3578063f2fde38b146102ff57600080fd5b8063696255be14610231578063715018a614610244578063857dc1901461024c5780638da5cb5b14610254578063955f2d901461026f57600080fd5b80631e4cd85e1161010a5780631e4cd85e146101d5578063314f3a49146101e85780633b242e4a146101f057806340bf2fb7146102035780635140a5481461020b5780635ef533291461021e57600080fd5b8062cf2ab5146101465780630a601a121461015b5780630dba33941461016e5780631626ba7e146101945780631703a018146101c0575b600080fd5b610159610154366004611bac565b610312565b005b610159610169366004611c60565b61031e565b61018161017c366004611d29565b61032c565b6040519081526020015b60405180910390f35b6101a76101a2366004611d46565b610348565b6040516001600160e01b0319909116815260200161018b565b6101c8610386565b60405161018b9190611dea565b6101816101e3366004611d29565b610419565b61018161042f565b6101816101fe366004611dfd565b610440565b606754610181565b610159610219366004611e1a565b610461565b61015961022c366004611ee4565b610484565b61015961023f366004611efd565b610495565b6101596104af565b6101596104c3565b6033546040516001600160a01b03909116815260200161018b565b61018161027d366004611f39565b6104cc565b610181610290366004611dfd565b6104fe565b6101596102a336600461205b565b610751565b61018161086d565b6101596102be3660046120b3565b610879565b6102ef6102d1366004611dfd565b6001600160a01b03166000908152606d602052604090205460ff1690565b604051901515815260200161018b565b61015961030d366004611dfd565b61088a565b61031b81610900565b50565b610328828261094d565b5050565b6000610342606a63ffffffff80851690610a7a16565b92915050565b6000806000808480602001905181019061036291906121ef565b92509250925061037486848484610b89565b50630b135d3f60e11b95945050505050565b6040805160208101909152606081526040805160668054602081810284018501855283018181529293919284929091849160009085015b8282101561040c57600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b0316818301528252600190920191016103bd565b5050505081525050905090565b6000610342606b63ffffffff80851690610a7a16565b600061043b606a610c2f565b905090565b6001600160a01b0381166000908152606c6020526040812061034290610c2f565b61032882600081518110610477576104776122ca565b6020026020010151610c8b565b61048c610cae565b61031b81610d08565b61049d610cae565b6104a682610d4b565b61032881610900565b6104b7610cae565b6104c16000610d91565b565b6104c133610de3565b6001600160a01b0382166000908152606c602052604081206104f79063ffffffff80851690610a7a16565b9392505050565b6000806066600001805480602002602001604051908101604052809291908181526020016000905b8282101561057557600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b031681830152825260019092019101610526565b50505050905060008082516001600160401b0381111561059757610597611a6e565b6040519080825280602002602001820160405280156105c0578160200160208202803683370190505b50905060005b835181101561061f578381815181106105e1576105e16122ca565b6020026020010151600001518282815181106105ff576105ff6122ca565b6001600160a01b03909216602092830291909101909101526001016105c6565b50604051639004134760e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063900413479061067190899086906004016122e0565b600060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106b6919081019061233f565b905060005b8451811015610723578481815181106106d6576106d66122ca565b6020026020010151602001516001600160601b03168282815181106106fd576106fd6122ca565b602002602001015161070f91906123ea565b6107199085612401565b93506001016106bb565b5061073061271084612414565b92506067548310610745575090949350505050565b50600095945050505050565b600054610100900460ff16158080156107715750600054600160ff909116105b8061078b5750303b15801561078b575060005460ff166001145b6107f35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610816576000805461ff0019166101001790555b610821848484610f06565b8015610867576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b600061043b606b610c2f565b610881610cae565b6104a682610f67565b610892610cae565b6001600160a01b0381166108f75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107ea565b61031b81610d91565b6000805b82518110156109435761092f838281518110610922576109226122ca565b60200260200101516110be565b6109399083612436565b9150600101610904565b50610867816111e7565b6001600160a01b0382166000908152606d602052604090205460ff1615610987576040516342ee68b560e01b815260040160405180910390fd5b606580549060006109978361245e565b90915550506001600160a01b0382166000908152606d60205260408120805460ff191660011790556109c8836110be565b90506109d3816111e7565b5050606854604051639926ee7d60e01b81526001600160a01b0390911690639926ee7d90610a0790869086906004016124a3565b600060405180830381600087803b158015610a2157600080fd5b505af1158015610a35573d6000803e3d6000fd5b50506068546040516001600160a01b03918216935090861691507fa453db612af59e5521d6ab9284dc3e2d06af286eb1b1b7b771fce4716c19f2c190600090a3505050565b6000438210610acb5760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e656460448201526064016107ea565b825460005b81811015610b30576000610ae48284611253565b905084866000018281548110610afc57610afc6122ca565b60009182526020909120015463ffffffff161115610b1c57809250610b2a565b610b27816001612401565b91505b50610ad0565b8115610b745784610b426001846124ee565b81548110610b5257610b526122ca565b60009182526020909120015464010000000090046001600160e01b0316610b77565b60005b6001600160e01b031695945050505050565b600083519050600080610b9d83865161126e565b60005b83811015610c1b576000878281518110610bbc57610bbc6122ca565b60200260200101519050610bd084826112b2565b610bf4818a898581518110610be757610be76122ca565b60200260200101516112e4565b8093506000610c038288611315565b9050610c0f8185612401565b93505050600101610ba0565b50610c26818561137c565b50505050505050565b80546000908015610c785782610c466001836124ee565b81548110610c5657610c566122ca565b60009182526020909120015464010000000090046001600160e01b0316610c7b565b60005b6001600160e01b03169392505050565b6065548151146103125760405163169efb5b60e11b815260040160405180910390fd5b6033546001600160a01b031633146104c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107ea565b610d13606b826113d8565b50506040518181527f9324f7e5a7c0288808a634ccde44b8e979676474b22e29ee9dd569b55e791a4b9060200160405180910390a150565b606780549082905560408051828152602081018490527f713ca53b88d6eb63f5b1854cb8cbdd736ec51eda225e46791aa9298b0160648f91015b60405180910390a15050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381166000908152606d602052604090205460ff16610e1c576040516325ec6c1f60e01b815260040160405180910390fd5b60658054906000610e2c83612501565b90915550506001600160a01b0381166000908152606d60205260408120805460ff19169055610e5a826110be565b9050610e65816111e7565b50506068546040516351b27a6d60e11b81526001600160a01b0384811660048301529091169063a364f4da90602401600060405180830381600087803b158015610eae57600080fd5b505af1158015610ec2573d6000803e3d6000fd5b50506068546040516001600160a01b03918216935090851691507f31e0adfec71bccee37b6e83a90c2fedb17d8f1693fee863c4771e7bfe2aed58090600090a35050565b600054610100900460ff16610f2d5760405162461bcd60e51b81526004016107ea90612518565b606880546001600160a01b0319166001600160a01b038516179055610f5182610d08565b610f5a81610f67565b610f62611503565b505050565b610f7081611532565b610f8d5760405163d173577960e01b815260040160405180910390fd5b60408051606680546020818102840185018552830181815260009484928491879085015b8282101561100057600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b031681830152825260019092019101610fb1565b5050509152509091506066905060006110198282611a40565b505060005b82515181101561108c57825180516066919083908110611040576110406122ca565b602090810291909101810151825460018181018555600094855293839020825192909301516001600160601b0316600160a01b026001600160a01b03909216919091179101550161101e565b507f23aad4e61744ece164130aa415c1616e80136b0f0770e56589438b90b269265e8183604051610d85929190612563565b6001600160a01b0381166000908152606c602052604081208190819081906110e590610c2f565b6001600160a01b0386166000908152606d602052604090205490915060ff1661114d576111128184612591565b9250826000036111255750909392505050565b6001600160a01b0385166000908152606c60205260408120611146916113d8565b505061119a565b611156856104fe565b91506111628183612591565b9250826000036111755750909392505050565b6001600160a01b0385166000908152606c6020526040902061119790836113d8565b50505b60408051828152602081018490526001600160a01b038716917f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe594910160405180910390a250909392505050565b6000806111f4606a610c2f565b915060006112028484612436565b9150819050611212606a826113d8565b505060408051848152602081018490527f86dcf86b12dfeedea74ae9300dbdaa193bcce5809369c8177ea2f4eaaa65729b910160405180910390a150915091565b60006112626002848418612414565b6104f790848416612401565b808214611291576040516001621398b960e31b0319815260040160405180910390fd5b816000036103285760405163251f56a160e21b815260040160405180910390fd5b806001600160a01b0316826001600160a01b0316106103285760405163ba50f91160e01b815260040160405180910390fd5b6112f86001600160a01b03841683836115f8565b610f6257604051638baa579f60e01b815260040160405180910390fd5b600063fffffffe1963ffffffff831601611351576001600160a01b0383166000908152606c6020526040902061134a90610c2f565b9050610342565b6001600160a01b0383166000908152606c6020526040902061134a9063ffffffff80851690610a7a16565b600061138782611744565b9050808311156113aa57604051634b05a0f760e11b815260040160405180910390fd5b60006113b58361177b565b9050838111156108675760405163e121632f60e01b815260040160405180910390fd5b81546000908190816113e986610c2f565b9050600082118015611427575043866114036001856124ee565b81548110611413576114136122ca565b60009182526020909120015463ffffffff16145b1561148757611435856117ad565b866114416001856124ee565b81548110611451576114516122ca565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506114f5565b85600001604051806040016040528061149f4361181a565b63ffffffff1681526020016114b3886117ad565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b9250839150505b9250929050565b600054610100900460ff1661152a5760405162461bcd60e51b81526004016107ea90612518565b6104c161187f565b8051600090818080805b84518110156115d657848181518110611557576115576122ca565b6020026020010151600001519250826001600160a01b0316846001600160a01b0316106115975760405163ba50f91160e01b815260040160405180910390fd5b8293508481815181106115ac576115ac6122ca565b6020026020010151602001516001600160601b0316826115cc9190612401565b915060010161153c565b5061271081146115ec5750600095945050505050565b50600195945050505050565b600080600061160785856118af565b90925090506000816004811115611620576116206125b8565b14801561163e5750856001600160a01b0316826001600160a01b0316145b1561164e576001925050506104f7565b600080876001600160a01b0316631626ba7e60e01b88886040516024016116769291906125ce565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516116b491906125e7565b600060405180830381855afa9150503d80600081146116ef576040519150601f19603f3d011682016040523d82523d6000602084013e6116f4565b606091505b5091509150818015611707575080516020145b801561173857508051630b135d3f60e11b9061172c9083016020908101908401612603565b6001600160e01b031916145b98975050505050505050565b600063fffffffe1963ffffffff83160161176257610342606a610c2f565b610342606a63ffffffff80851690610a7a16565b919050565b600063fffffffe1963ffffffff83160161179957610342606b610c2f565b610342606b63ffffffff80851690610a7a16565b60006001600160e01b038211156118165760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016107ea565b5090565b600063ffffffff8211156118165760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016107ea565b600054610100900460ff166118a65760405162461bcd60e51b81526004016107ea90612518565b6104c133610d91565b60008082516041036118e55760208301516040840151606085015160001a6118d98782858561191a565b945094505050506114fc565b825160400361190e5760208301516040840151611903868383611a07565b9350935050506114fc565b506000905060026114fc565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561195157506000905060036119fe565b8460ff16601b1415801561196957508460ff16601c14155b1561197a57506000905060046119fe565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156119ce573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119f7576000600192509250506119fe565b9150600090505b94509492505050565b6000806001600160ff1b03831681611a2460ff86901c601b612401565b9050611a328782888561191a565b935093505050935093915050565b508054600082559060005260206000209081019061031b91905b808211156118165760008155600101611a5a565b634e487b7160e01b600052604160045260246000fd5b604051602081016001600160401b0381118282101715611aa657611aa6611a6e565b60405290565b604080519081016001600160401b0381118282101715611aa657611aa6611a6e565b604051601f8201601f191681016001600160401b0381118282101715611af657611af6611a6e565b604052919050565b60006001600160401b03821115611b1757611b17611a6e565b5060051b60200190565b6001600160a01b038116811461031b57600080fd5b600082601f830112611b4757600080fd5b8135611b5a611b5582611afe565b611ace565b8082825260208201915060208360051b860101925085831115611b7c57600080fd5b602085015b83811015611ba2578035611b9481611b21565b835260209283019201611b81565b5095945050505050565b600060208284031215611bbe57600080fd5b81356001600160401b03811115611bd457600080fd5b611be084828501611b36565b949350505050565b60006001600160401b03821115611c0157611c01611a6e565b50601f01601f191660200190565b600082601f830112611c2057600080fd5b8135611c2e611b5582611be8565b818152846020838601011115611c4357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611c7357600080fd5b8235611c7e81611b21565b915060208301356001600160401b03811115611c9957600080fd5b830160608186031215611cab57600080fd5b604051606081016001600160401b0381118282101715611ccd57611ccd611a6e565b60405281356001600160401b03811115611ce657600080fd5b611cf287828501611c0f565b8252506020828101359082015260409182013591810191909152919491935090915050565b63ffffffff8116811461031b57600080fd5b600060208284031215611d3b57600080fd5b81356104f781611d17565b60008060408385031215611d5957600080fd5b8235915060208301356001600160401b03811115611d7657600080fd5b611d8285828601611c0f565b9150509250929050565b80516020808452815184820181905260009290910190829060408601905b80831015611ba257835180516001600160a01b031683526020908101516001600160601b0316818401529093019260019290920191604090910190611daa565b6020815260006104f76020830184611d8c565b600060208284031215611e0f57600080fd5b81356104f781611b21565b60008060408385031215611e2d57600080fd5b82356001600160401b03811115611e4357600080fd5b8301601f81018513611e5457600080fd5b8035611e62611b5582611afe565b8082825260208201915060208360051b850101925087831115611e8457600080fd5b602084015b83811015611ec55780356001600160401b03811115611ea757600080fd5b611eb68a602083890101611b36565b84525060209283019201611e89565b50945050505060208301356001600160401b03811115611d7657600080fd5b600060208284031215611ef657600080fd5b5035919050565b60008060408385031215611f1057600080fd5b8235915060208301356001600160401b03811115611f2d57600080fd5b611d8285828601611b36565b60008060408385031215611f4c57600080fd5b8235611f5781611b21565b91506020830135611f6781611d17565b809150509250929050565b600060208284031215611f8457600080fd5b611f8c611a84565b905081356001600160401b03811115611fa457600080fd5b8201601f81018413611fb557600080fd5b8035611fc3611b5582611afe565b8082825260208201915060208360061b850101925086831115611fe557600080fd5b6020840193505b8284101561204f576040848803121561200457600080fd5b61200c611aac565b843561201781611b21565b815260208501356001600160601b038116811461203357600080fd5b8060208301525080835250602082019150604084019350611fec565b84525091949350505050565b60008060006060848603121561207057600080fd5b833561207b81611b21565b92506020840135915060408401356001600160401b0381111561209d57600080fd5b6120a986828701611f72565b9150509250925092565b600080604083850312156120c657600080fd5b82356001600160401b038111156120dc57600080fd5b6120e885828601611f72565b92505060208301356001600160401b03811115611f2d57600080fd5b60005b8381101561211f578181015183820152602001612107565b50506000910152565b600082601f83011261213957600080fd5b8151612147611b5582611afe565b8082825260208201915060208360051b86010192508583111561216957600080fd5b602085015b83811015611ba25780516001600160401b0381111561218c57600080fd5b8601603f8101881361219d57600080fd5b60208101516121ae611b5582611be8565b8181526040838301018a10156121c357600080fd5b6121d4826020830160408601612104565b855250506020928301920161216e565b805161177681611d17565b60008060006060848603121561220457600080fd5b83516001600160401b0381111561221a57600080fd5b8401601f8101861361222b57600080fd5b8051612239611b5582611afe565b8082825260208201915060208360051b85010192508883111561225b57600080fd5b6020840193505b8284101561228657835161227581611b21565b825260209384019390910190612262565b8096505050505060208401516001600160401b038111156122a657600080fd5b6122b286828701612128565b9250506122c1604085016121e4565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0383168152604060208083018290528351918301829052600091908401906060840190835b818110156123335783516001600160a01b031683526020938401939092019160010161230c565b50909695505050505050565b60006020828403121561235157600080fd5b81516001600160401b0381111561236757600080fd5b8201601f8101841361237857600080fd5b8051612386611b5582611afe565b8082825260208201915060208360051b8501019250868311156123a857600080fd5b6020840193505b828410156123ca5783518252602093840193909101906123af565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610342576103426123d4565b80820180821115610342576103426123d4565b60008261243157634e487b7160e01b600052601260045260246000fd5b500490565b8082018281126000831280158216821582161715612456576124566123d4565b505092915050565b600060018201612470576124706123d4565b5060010190565b6000815180845261248f816020860160208601612104565b601f01601f19169290920160200192915050565b60018060a01b03831681526040602082015260008251606060408401526124cd60a0840182612477565b90506020840151606084015260408401516080840152809150509392505050565b81810381811115610342576103426123d4565b600081612510576125106123d4565b506000190190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6040815260006125766040830185611d8c565b82810360208401526125888185611d8c565b95945050505050565b81810360008312801583831316838312821617156125b1576125b16123d4565b5092915050565b634e487b7160e01b600052602160045260246000fd5b828152604060208201526000611be06040830184612477565b600082516125f9818460208701612104565b9190910192915050565b60006020828403121561261557600080fd5b81516001600160e01b0319811681146104f757600080fdfea264697066735822122089e2c7fe85d358a2d1094ebed64991611d354d8e90a0b0ee1217e224762d767b64736f6c634300081a0033",
        "sourceMap": "1122:21878:67:-:0;;;1525:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1959:39:68;;;1122:21878:67;;14:317:102;111:6;164:2;152:9;143:7;139:23;135:32;132:52;;;180:1;177;170:12;132:52;206:16;;-1:-1:-1;;;;;251:31:102;;241:42;;231:70;;297:1;294;287:12;231:70;320:5;14:317;-1:-1:-1;;;14:317:102:o;:::-;1122:21878:67;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561001057600080fd5b50600436106101415760003560e01c8063696255be116100b857806398ec1ac91161007c57806398ec1ac914610282578063ab11899514610295578063b933fa74146102a8578063dec5d1f6146102b0578063ec7fbb31146102c3578063f2fde38b146102ff57600080fd5b8063696255be14610231578063715018a614610244578063857dc1901461024c5780638da5cb5b14610254578063955f2d901461026f57600080fd5b80631e4cd85e1161010a5780631e4cd85e146101d5578063314f3a49146101e85780633b242e4a146101f057806340bf2fb7146102035780635140a5481461020b5780635ef533291461021e57600080fd5b8062cf2ab5146101465780630a601a121461015b5780630dba33941461016e5780631626ba7e146101945780631703a018146101c0575b600080fd5b610159610154366004611bac565b610312565b005b610159610169366004611c60565b61031e565b61018161017c366004611d29565b61032c565b6040519081526020015b60405180910390f35b6101a76101a2366004611d46565b610348565b6040516001600160e01b0319909116815260200161018b565b6101c8610386565b60405161018b9190611dea565b6101816101e3366004611d29565b610419565b61018161042f565b6101816101fe366004611dfd565b610440565b606754610181565b610159610219366004611e1a565b610461565b61015961022c366004611ee4565b610484565b61015961023f366004611efd565b610495565b6101596104af565b6101596104c3565b6033546040516001600160a01b03909116815260200161018b565b61018161027d366004611f39565b6104cc565b610181610290366004611dfd565b6104fe565b6101596102a336600461205b565b610751565b61018161086d565b6101596102be3660046120b3565b610879565b6102ef6102d1366004611dfd565b6001600160a01b03166000908152606d602052604090205460ff1690565b604051901515815260200161018b565b61015961030d366004611dfd565b61088a565b61031b81610900565b50565b610328828261094d565b5050565b6000610342606a63ffffffff80851690610a7a16565b92915050565b6000806000808480602001905181019061036291906121ef565b92509250925061037486848484610b89565b50630b135d3f60e11b95945050505050565b6040805160208101909152606081526040805160668054602081810284018501855283018181529293919284929091849160009085015b8282101561040c57600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b0316818301528252600190920191016103bd565b5050505081525050905090565b6000610342606b63ffffffff80851690610a7a16565b600061043b606a610c2f565b905090565b6001600160a01b0381166000908152606c6020526040812061034290610c2f565b61032882600081518110610477576104776122ca565b6020026020010151610c8b565b61048c610cae565b61031b81610d08565b61049d610cae565b6104a682610d4b565b61032881610900565b6104b7610cae565b6104c16000610d91565b565b6104c133610de3565b6001600160a01b0382166000908152606c602052604081206104f79063ffffffff80851690610a7a16565b9392505050565b6000806066600001805480602002602001604051908101604052809291908181526020016000905b8282101561057557600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b031681830152825260019092019101610526565b50505050905060008082516001600160401b0381111561059757610597611a6e565b6040519080825280602002602001820160405280156105c0578160200160208202803683370190505b50905060005b835181101561061f578381815181106105e1576105e16122ca565b6020026020010151600001518282815181106105ff576105ff6122ca565b6001600160a01b03909216602092830291909101909101526001016105c6565b50604051639004134760e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063900413479061067190899086906004016122e0565b600060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106b6919081019061233f565b905060005b8451811015610723578481815181106106d6576106d66122ca565b6020026020010151602001516001600160601b03168282815181106106fd576106fd6122ca565b602002602001015161070f91906123ea565b6107199085612401565b93506001016106bb565b5061073061271084612414565b92506067548310610745575090949350505050565b50600095945050505050565b600054610100900460ff16158080156107715750600054600160ff909116105b8061078b5750303b15801561078b575060005460ff166001145b6107f35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610816576000805461ff0019166101001790555b610821848484610f06565b8015610867576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b600061043b606b610c2f565b610881610cae565b6104a682610f67565b610892610cae565b6001600160a01b0381166108f75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107ea565b61031b81610d91565b6000805b82518110156109435761092f838281518110610922576109226122ca565b60200260200101516110be565b6109399083612436565b9150600101610904565b50610867816111e7565b6001600160a01b0382166000908152606d602052604090205460ff1615610987576040516342ee68b560e01b815260040160405180910390fd5b606580549060006109978361245e565b90915550506001600160a01b0382166000908152606d60205260408120805460ff191660011790556109c8836110be565b90506109d3816111e7565b5050606854604051639926ee7d60e01b81526001600160a01b0390911690639926ee7d90610a0790869086906004016124a3565b600060405180830381600087803b158015610a2157600080fd5b505af1158015610a35573d6000803e3d6000fd5b50506068546040516001600160a01b03918216935090861691507fa453db612af59e5521d6ab9284dc3e2d06af286eb1b1b7b771fce4716c19f2c190600090a3505050565b6000438210610acb5760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e656460448201526064016107ea565b825460005b81811015610b30576000610ae48284611253565b905084866000018281548110610afc57610afc6122ca565b60009182526020909120015463ffffffff161115610b1c57809250610b2a565b610b27816001612401565b91505b50610ad0565b8115610b745784610b426001846124ee565b81548110610b5257610b526122ca565b60009182526020909120015464010000000090046001600160e01b0316610b77565b60005b6001600160e01b031695945050505050565b600083519050600080610b9d83865161126e565b60005b83811015610c1b576000878281518110610bbc57610bbc6122ca565b60200260200101519050610bd084826112b2565b610bf4818a898581518110610be757610be76122ca565b60200260200101516112e4565b8093506000610c038288611315565b9050610c0f8185612401565b93505050600101610ba0565b50610c26818561137c565b50505050505050565b80546000908015610c785782610c466001836124ee565b81548110610c5657610c566122ca565b60009182526020909120015464010000000090046001600160e01b0316610c7b565b60005b6001600160e01b03169392505050565b6065548151146103125760405163169efb5b60e11b815260040160405180910390fd5b6033546001600160a01b031633146104c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107ea565b610d13606b826113d8565b50506040518181527f9324f7e5a7c0288808a634ccde44b8e979676474b22e29ee9dd569b55e791a4b9060200160405180910390a150565b606780549082905560408051828152602081018490527f713ca53b88d6eb63f5b1854cb8cbdd736ec51eda225e46791aa9298b0160648f91015b60405180910390a15050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381166000908152606d602052604090205460ff16610e1c576040516325ec6c1f60e01b815260040160405180910390fd5b60658054906000610e2c83612501565b90915550506001600160a01b0381166000908152606d60205260408120805460ff19169055610e5a826110be565b9050610e65816111e7565b50506068546040516351b27a6d60e11b81526001600160a01b0384811660048301529091169063a364f4da90602401600060405180830381600087803b158015610eae57600080fd5b505af1158015610ec2573d6000803e3d6000fd5b50506068546040516001600160a01b03918216935090851691507f31e0adfec71bccee37b6e83a90c2fedb17d8f1693fee863c4771e7bfe2aed58090600090a35050565b600054610100900460ff16610f2d5760405162461bcd60e51b81526004016107ea90612518565b606880546001600160a01b0319166001600160a01b038516179055610f5182610d08565b610f5a81610f67565b610f62611503565b505050565b610f7081611532565b610f8d5760405163d173577960e01b815260040160405180910390fd5b60408051606680546020818102840185018552830181815260009484928491879085015b8282101561100057600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b031681830152825260019092019101610fb1565b5050509152509091506066905060006110198282611a40565b505060005b82515181101561108c57825180516066919083908110611040576110406122ca565b602090810291909101810151825460018181018555600094855293839020825192909301516001600160601b0316600160a01b026001600160a01b03909216919091179101550161101e565b507f23aad4e61744ece164130aa415c1616e80136b0f0770e56589438b90b269265e8183604051610d85929190612563565b6001600160a01b0381166000908152606c602052604081208190819081906110e590610c2f565b6001600160a01b0386166000908152606d602052604090205490915060ff1661114d576111128184612591565b9250826000036111255750909392505050565b6001600160a01b0385166000908152606c60205260408120611146916113d8565b505061119a565b611156856104fe565b91506111628183612591565b9250826000036111755750909392505050565b6001600160a01b0385166000908152606c6020526040902061119790836113d8565b50505b60408051828152602081018490526001600160a01b038716917f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe594910160405180910390a250909392505050565b6000806111f4606a610c2f565b915060006112028484612436565b9150819050611212606a826113d8565b505060408051848152602081018490527f86dcf86b12dfeedea74ae9300dbdaa193bcce5809369c8177ea2f4eaaa65729b910160405180910390a150915091565b60006112626002848418612414565b6104f790848416612401565b808214611291576040516001621398b960e31b0319815260040160405180910390fd5b816000036103285760405163251f56a160e21b815260040160405180910390fd5b806001600160a01b0316826001600160a01b0316106103285760405163ba50f91160e01b815260040160405180910390fd5b6112f86001600160a01b03841683836115f8565b610f6257604051638baa579f60e01b815260040160405180910390fd5b600063fffffffe1963ffffffff831601611351576001600160a01b0383166000908152606c6020526040902061134a90610c2f565b9050610342565b6001600160a01b0383166000908152606c6020526040902061134a9063ffffffff80851690610a7a16565b600061138782611744565b9050808311156113aa57604051634b05a0f760e11b815260040160405180910390fd5b60006113b58361177b565b9050838111156108675760405163e121632f60e01b815260040160405180910390fd5b81546000908190816113e986610c2f565b9050600082118015611427575043866114036001856124ee565b81548110611413576114136122ca565b60009182526020909120015463ffffffff16145b1561148757611435856117ad565b866114416001856124ee565b81548110611451576114516122ca565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506114f5565b85600001604051806040016040528061149f4361181a565b63ffffffff1681526020016114b3886117ad565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b9250839150505b9250929050565b600054610100900460ff1661152a5760405162461bcd60e51b81526004016107ea90612518565b6104c161187f565b8051600090818080805b84518110156115d657848181518110611557576115576122ca565b6020026020010151600001519250826001600160a01b0316846001600160a01b0316106115975760405163ba50f91160e01b815260040160405180910390fd5b8293508481815181106115ac576115ac6122ca565b6020026020010151602001516001600160601b0316826115cc9190612401565b915060010161153c565b5061271081146115ec5750600095945050505050565b50600195945050505050565b600080600061160785856118af565b90925090506000816004811115611620576116206125b8565b14801561163e5750856001600160a01b0316826001600160a01b0316145b1561164e576001925050506104f7565b600080876001600160a01b0316631626ba7e60e01b88886040516024016116769291906125ce565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516116b491906125e7565b600060405180830381855afa9150503d80600081146116ef576040519150601f19603f3d011682016040523d82523d6000602084013e6116f4565b606091505b5091509150818015611707575080516020145b801561173857508051630b135d3f60e11b9061172c9083016020908101908401612603565b6001600160e01b031916145b98975050505050505050565b600063fffffffe1963ffffffff83160161176257610342606a610c2f565b610342606a63ffffffff80851690610a7a16565b919050565b600063fffffffe1963ffffffff83160161179957610342606b610c2f565b610342606b63ffffffff80851690610a7a16565b60006001600160e01b038211156118165760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016107ea565b5090565b600063ffffffff8211156118165760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016107ea565b600054610100900460ff166118a65760405162461bcd60e51b81526004016107ea90612518565b6104c133610d91565b60008082516041036118e55760208301516040840151606085015160001a6118d98782858561191a565b945094505050506114fc565b825160400361190e5760208301516040840151611903868383611a07565b9350935050506114fc565b506000905060026114fc565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561195157506000905060036119fe565b8460ff16601b1415801561196957508460ff16601c14155b1561197a57506000905060046119fe565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156119ce573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119f7576000600192509250506119fe565b9150600090505b94509492505050565b6000806001600160ff1b03831681611a2460ff86901c601b612401565b9050611a328782888561191a565b935093505050935093915050565b508054600082559060005260206000209081019061031b91905b808211156118165760008155600101611a5a565b634e487b7160e01b600052604160045260246000fd5b604051602081016001600160401b0381118282101715611aa657611aa6611a6e565b60405290565b604080519081016001600160401b0381118282101715611aa657611aa6611a6e565b604051601f8201601f191681016001600160401b0381118282101715611af657611af6611a6e565b604052919050565b60006001600160401b03821115611b1757611b17611a6e565b5060051b60200190565b6001600160a01b038116811461031b57600080fd5b600082601f830112611b4757600080fd5b8135611b5a611b5582611afe565b611ace565b8082825260208201915060208360051b860101925085831115611b7c57600080fd5b602085015b83811015611ba2578035611b9481611b21565b835260209283019201611b81565b5095945050505050565b600060208284031215611bbe57600080fd5b81356001600160401b03811115611bd457600080fd5b611be084828501611b36565b949350505050565b60006001600160401b03821115611c0157611c01611a6e565b50601f01601f191660200190565b600082601f830112611c2057600080fd5b8135611c2e611b5582611be8565b818152846020838601011115611c4357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611c7357600080fd5b8235611c7e81611b21565b915060208301356001600160401b03811115611c9957600080fd5b830160608186031215611cab57600080fd5b604051606081016001600160401b0381118282101715611ccd57611ccd611a6e565b60405281356001600160401b03811115611ce657600080fd5b611cf287828501611c0f565b8252506020828101359082015260409182013591810191909152919491935090915050565b63ffffffff8116811461031b57600080fd5b600060208284031215611d3b57600080fd5b81356104f781611d17565b60008060408385031215611d5957600080fd5b8235915060208301356001600160401b03811115611d7657600080fd5b611d8285828601611c0f565b9150509250929050565b80516020808452815184820181905260009290910190829060408601905b80831015611ba257835180516001600160a01b031683526020908101516001600160601b0316818401529093019260019290920191604090910190611daa565b6020815260006104f76020830184611d8c565b600060208284031215611e0f57600080fd5b81356104f781611b21565b60008060408385031215611e2d57600080fd5b82356001600160401b03811115611e4357600080fd5b8301601f81018513611e5457600080fd5b8035611e62611b5582611afe565b8082825260208201915060208360051b850101925087831115611e8457600080fd5b602084015b83811015611ec55780356001600160401b03811115611ea757600080fd5b611eb68a602083890101611b36565b84525060209283019201611e89565b50945050505060208301356001600160401b03811115611d7657600080fd5b600060208284031215611ef657600080fd5b5035919050565b60008060408385031215611f1057600080fd5b8235915060208301356001600160401b03811115611f2d57600080fd5b611d8285828601611b36565b60008060408385031215611f4c57600080fd5b8235611f5781611b21565b91506020830135611f6781611d17565b809150509250929050565b600060208284031215611f8457600080fd5b611f8c611a84565b905081356001600160401b03811115611fa457600080fd5b8201601f81018413611fb557600080fd5b8035611fc3611b5582611afe565b8082825260208201915060208360061b850101925086831115611fe557600080fd5b6020840193505b8284101561204f576040848803121561200457600080fd5b61200c611aac565b843561201781611b21565b815260208501356001600160601b038116811461203357600080fd5b8060208301525080835250602082019150604084019350611fec565b84525091949350505050565b60008060006060848603121561207057600080fd5b833561207b81611b21565b92506020840135915060408401356001600160401b0381111561209d57600080fd5b6120a986828701611f72565b9150509250925092565b600080604083850312156120c657600080fd5b82356001600160401b038111156120dc57600080fd5b6120e885828601611f72565b92505060208301356001600160401b03811115611f2d57600080fd5b60005b8381101561211f578181015183820152602001612107565b50506000910152565b600082601f83011261213957600080fd5b8151612147611b5582611afe565b8082825260208201915060208360051b86010192508583111561216957600080fd5b602085015b83811015611ba25780516001600160401b0381111561218c57600080fd5b8601603f8101881361219d57600080fd5b60208101516121ae611b5582611be8565b8181526040838301018a10156121c357600080fd5b6121d4826020830160408601612104565b855250506020928301920161216e565b805161177681611d17565b60008060006060848603121561220457600080fd5b83516001600160401b0381111561221a57600080fd5b8401601f8101861361222b57600080fd5b8051612239611b5582611afe565b8082825260208201915060208360051b85010192508883111561225b57600080fd5b6020840193505b8284101561228657835161227581611b21565b825260209384019390910190612262565b8096505050505060208401516001600160401b038111156122a657600080fd5b6122b286828701612128565b9250506122c1604085016121e4565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0383168152604060208083018290528351918301829052600091908401906060840190835b818110156123335783516001600160a01b031683526020938401939092019160010161230c565b50909695505050505050565b60006020828403121561235157600080fd5b81516001600160401b0381111561236757600080fd5b8201601f8101841361237857600080fd5b8051612386611b5582611afe565b8082825260208201915060208360051b8501019250868311156123a857600080fd5b6020840193505b828410156123ca5783518252602093840193909101906123af565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610342576103426123d4565b80820180821115610342576103426123d4565b60008261243157634e487b7160e01b600052601260045260246000fd5b500490565b8082018281126000831280158216821582161715612456576124566123d4565b505092915050565b600060018201612470576124706123d4565b5060010190565b6000815180845261248f816020860160208601612104565b601f01601f19169290920160200192915050565b60018060a01b03831681526040602082015260008251606060408401526124cd60a0840182612477565b90506020840151606084015260408401516080840152809150509392505050565b81810381811115610342576103426123d4565b600081612510576125106123d4565b506000190190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6040815260006125766040830185611d8c565b82810360208401526125888185611d8c565b95945050505050565b81810360008312801583831316838312821617156125b1576125b16123d4565b5092915050565b634e487b7160e01b600052602160045260246000fd5b828152604060208201526000611be06040830184612477565b600082516125f9818460208701612104565b9190910192915050565b60006020828403121561261557600080fd5b81516001600160e01b0319811681146104f757600080fdfea264697066735822122089e2c7fe85d358a2d1094ebed64991611d354d8e90a0b0ee1217e224762d767b64736f6c634300081a0033",
        "sourceMap": "1122:21878:67:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:108;;;;;;:::i;:::-;;:::i;:::-;;2370:231;;;;;;:::i;:::-;;:::i;7607:180::-;;;;;;:::i;:::-;;:::i;:::-;;;4743:25:102;;;4731:2;4716:18;7607:180:67;;;;;;;;5285:461;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;5380:33:102;;;5362:52;;5350:2;5335:18;5285:461:67;5218:202:102;5882:87:67;;;:::i;:::-;;;;;;;:::i;8020:188::-;;;;;;:::i;:::-;;:::i;6471:124::-;;;:::i;6163:172::-;;;;;;:::i;:::-;;:::i;8456:95::-;8530:14;;8456:95;;10419:177;;;;;;:::i;:::-;;:::i;4746:131::-;;;;;;:::i;:::-;;:::i;4000:220::-;;;;;;:::i;:::-;;:::i;2071:101:0:-;;;:::i;2656:87:67:-;;;:::i;1441:85:0:-;1513:6;;1441:85;;-1:-1:-1;;;;;1513:6:0;;;8815:51:102;;8803:2;8788:18;1441:85:0;8669:203:102;7173:210:67;;;;;;:::i;:::-;;:::i;8842:803::-;;;;;;:::i;:::-;;:::i;1979:231::-;;;;;;:::i;:::-;;:::i;6717:160::-;;;:::i;3560:204::-;;;;;;:::i;:::-;;:::i;8214:144::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8321:30:67;8298:4;8321:30;;;:19;:30;;;;;;;;;8214:144;;;;11955:14:102;;11948:22;11930:41;;11918:2;11903:18;8214:144:67;11790:187:102;2321:198:0;;;;;;:::i;:::-;;:::i;3047:108:67:-;3120:28;3137:10;3120:16;:28::i;:::-;3047:108;:::o;2370:231::-;2539:55;2564:9;2575:18;2539:24;:55::i;:::-;2370:231;;:::o;7607:180::-;7710:7;7736:44;:19;:44;;;;;:30;:44;:::i;:::-;7729:51;7607:180;-1:-1:-1;;7607:180:67:o;5285:461::-;5404:6;5436:24;5474:25;5513:21;5558:14;5547:56;;;;;;;;;;;;:::i;:::-;5422:181;;;;;;5613:64;5630:9;5641:7;5650:10;5662:14;5613:16;:64::i;:::-;-1:-1:-1;;;;5694:45:67;5285:461;-1:-1:-1;;;;;5285:461:67:o;5882:87::-;-1:-1:-1;;;;;;;;;;;;5948:14:67;;;5955:7;5948:14;;;;;;;;;;;;;;;;;;;5955:7;;5948:14;;;;5955:7;;-1:-1:-1;;5948:14:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5948:14:67;;;;-1:-1:-1;;;5948:14:67;;-1:-1:-1;;;;;5948:14:67;;;;;;;;;;;;;;;;;;;;;;;;;;5882:87;:::o;8020:188::-;8127:7;8153:48;:23;:48;;;;;:34;:48;:::i;6471:124::-;6534:7;6560:28;:19;:26;:28::i;:::-;6553:35;;6471:124;:::o;6163:172::-;-1:-1:-1;;;;;6286:33:67;;6260:7;6286:33;;;:22;:33;;;;;:42;;:40;:42::i;10419:177::-;10547:42;10567:18;10586:1;10567:21;;;;;;;;:::i;:::-;;;;;;;10547:19;:42::i;4746:131::-;1334:13:0;:11;:13::i;:::-;4831:39:67::1;4853:16;4831:21;:39::i;4000:220::-:0;1334:13:0;:11;:13::i;:::-;4136:39:67::1;4157:17;4136:20;:39::i;:::-;4185:28;4202:10;4185:16;:28::i;2071:101:0:-:0;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;2656:87:67:-;2705:31;2725:10;2705:19;:31::i;7173:210::-;-1:-1:-1;;;;;7318:33:67;;7292:7;7318:33;;;:22;:33;;;;;:58;;;;;;;:44;:58;:::i;:::-;7311:65;7173:210;-1:-1:-1;;;7173:210:67:o;8842:803::-;8923:7;8942:38;8983:7;:18;;8942:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8942:59:67;;;;-1:-1:-1;;;8942:59:67;;-1:-1:-1;;;;;8942:59:67;;;;;;;;;;;;;;;;;;;;;;9011:14;9035:29;9083:14;:21;-1:-1:-1;;;;;9067:38:67;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9067:38:67;;9035:70;;9120:9;9115:115;9135:14;:21;9131:1;:25;9115:115;;;9193:14;9208:1;9193:17;;;;;;;;:::i;:::-;;;;;;;:26;;;9177:10;9188:1;9177:13;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9177:42:67;;;:13;;;;;;;;;;;:42;9158:3;;9115:115;;;-1:-1:-1;9265:93:67;;-1:-1:-1;;;9265:93:67;;9239:23;;-1:-1:-1;;;;;9265:18:67;:36;;;;:93;;9315:9;;9338:10;;9265:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9265:93:67;;;;;;;;;;;;:::i;:::-;9239:119;;9373:9;9368:123;9388:14;:21;9384:1;:25;9368:123;;;9452:14;9467:1;9452:17;;;;;;;;:::i;:::-;;;;;;;:28;;;-1:-1:-1;;;;;9440:40:67;:6;9447:1;9440:9;;;;;;;;:::i;:::-;;;;;;;:40;;;;:::i;:::-;9430:50;;;;:::i;:::-;;-1:-1:-1;9411:3:67;;9368:123;;;-1:-1:-1;9509:12:67;725:6:68;9509::67;:12;:::i;:::-;9500:21;;9546:14;;9536:6;:24;9532:107;;-1:-1:-1;9583:6:67;;8842:803;-1:-1:-1;;;;8842:803:67:o;9532:107::-;-1:-1:-1;9627:1:67;;8842:803;-1:-1:-1;;;;;8842:803:67:o;1979:231::-;3111:19:2;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:2;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:2;1476:19:4;:23;;;3219:66:2;;-1:-1:-1;3268:12:2;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:2;;17537:2:102;3157:201:2;;;17519:21:102;17576:2;17556:18;;;17549:30;17615:34;17595:18;;;17588:62;-1:-1:-1;;;17666:18:102;;;17659:44;17720:19;;3157:201:2;;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:2;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:2;;;;;3394:65;2134:69:67::1;2160:15;2177:16;2195:7;2134:25;:69::i;:::-;3483:14:2::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:2;;;3553:14;;-1:-1:-1;17902:36:102;;3553:14:2;;17890:2:102;17875:18;3553:14:2;;;;;;;3479:99;3101:483;1979:231:67;;;:::o;6717:160::-;6808:7;6838:32;:23;:30;:32::i;3560:204::-;1334:13:0;:11;:13::i;:::-;3691:28:67::1;3711:7;3691:19;:28::i;2321:198:0:-:0;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;18151:2:102;2401:73:0::1;::::0;::::1;18133:21:102::0;18190:2;18170:18;;;18163:30;18229:34;18209:18;;;18202:62;-1:-1:-1;;;18280:18:102;;;18273:36;18326:19;;2401:73:0::1;17949:402:102::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;11343:251:67:-:0;11417:12;11444:9;11439:114;11459:10;:17;11455:1;:21;11439:114;;;11506:36;11528:10;11539:1;11528:13;;;;;;;;:::i;:::-;;;;;;;11506:21;:36::i;:::-;11497:45;;;;:::i;:::-;;-1:-1:-1;11478:3:67;;11439:114;;;;11562:25;11581:5;11562:18;:25::i;13911:629::-;-1:-1:-1;;;;;14087:30:67;;;;;;:19;:30;;;;;;;;14083:95;;;14140:27;;-1:-1:-1;;;14140:27:67;;;;;;;;;;;14083:95;14187:15;:17;;;:15;:17;;;:::i;:::-;;;;-1:-1:-1;;;;;;;14214:30:67;;;;;;:19;:30;;;;;:37;;-1:-1:-1;;14214:37:67;14247:4;14214:37;;;14276:32;14234:9;14276:21;:32::i;:::-;14261:47;;14318:25;14337:5;14318:18;:25::i;:::-;-1:-1:-1;;14369:15:67;;14353:119;;-1:-1:-1;;;14353:119:67;;-1:-1:-1;;;;;14369:15:67;;;;14353:54;;:119;;14421:9;;14444:18;;14353:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14517:15:67;;14487:46;;-1:-1:-1;;;;;14517:15:67;;;;-1:-1:-1;14487:46:67;;;;-1:-1:-1;14487:46:67;;14517:15;;14487:46;14073:467;13911:629;;:::o;1314:589:5:-;1400:7;1441:12;1427:11;:26;1419:71;;;;-1:-1:-1;;;1419:71:5;;19825:2:102;1419:71:5;;;19807:21:102;;;19844:18;;;19837:30;19903:34;19883:18;;;19876:62;19955:18;;1419:71:5;19623:356:102;1419:71:5;1516:24;;1501:12;1575:255;1588:4;1582:3;:10;1575:255;;;1608:11;1622:34;1646:3;1651:4;1622:23;:34::i;:::-;1608:48;;1712:11;1674:4;:17;;1692:3;1674:22;;;;;;;;:::i;:::-;;;;;;;;;;:35;;;:49;1670:150;;;1750:3;1743:10;;1670:150;;;1798:7;:3;1804:1;1798:7;:::i;:::-;1792:13;;1670:150;1594:236;1575:255;;;1846:9;;:50;;1862:4;1880:8;1887:1;1880:4;:8;:::i;:::-;1862:27;;;;;;;;:::i;:::-;;;;;;;;;;:34;;;;-1:-1:-1;;;;;1862:34:5;1846:50;;;1858:1;1846:50;-1:-1:-1;;;;;1839:57:5;;1314:589;-1:-1:-1;;;;;1314:589:5:o;17808:893:67:-;17994:21;18018:8;:15;17994:39;;18043:18;18071:20;18102:60;18128:13;18143:11;:18;18102:25;:60::i;:::-;18177:9;18172:458;18192:13;18188:1;:17;18172:458;;;18226:21;18250:8;18259:1;18250:11;;;;;;;;:::i;:::-;;;;;;;18226:35;;18276:49;18299:10;18311:13;18276:22;:49::i;:::-;18339:60;18358:13;18373:9;18384:11;18396:1;18384:14;;;;;;;;:::i;:::-;;;;;;;18339:18;:60::i;:::-;18427:13;18414:26;;18454:22;18479:96;18515:13;18546:15;18479:18;:96::i;:::-;18454:121;-1:-1:-1;18589:30:67;18454:121;18589:30;;:::i;:::-;;-1:-1:-1;;;18207:3:67;;18172:458;;;;18640:54;18664:12;18678:15;18640:23;:54::i;:::-;17984:717;;;17808:893;;;;:::o;934:190:5:-;1028:24;;995:7;;1069:8;;:48;;1084:4;1102:7;1108:1;1102:3;:7;:::i;:::-;1084:26;;;;;;;;:::i;:::-;;;;;;;;;;:33;;;;-1:-1:-1;;;;;1084:33:5;1069:48;;;1080:1;1069:48;-1:-1:-1;;;;;1062:55:5;;934:190;-1:-1:-1;;;934:190:5:o;10875:219:67:-;10977:15;;10956:10;:17;:36;10952:98;;11015:24;;-1:-1:-1;;;11015:24:67;;;;;;;;;;;1599:130:0;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:6;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;20319:2:102;1654:68:0;;;20301:21:102;;;20338:18;;;20331:30;20397:34;20377:18;;;20370:62;20449:18;;1654:68:0;20117:356:102;11764:184:67;11840:46;:23;11869:16;11840:28;:46::i;:::-;-1:-1:-1;;11901:40:67;;4743:25:102;;;11901:40:67;;4731:2:102;4716:18;11901:40:67;;;;;;;11764:184;:::o;12128:240::-;12231:14;;;12255:34;;;;12304:57;;;20652:25:102;;;20708:2;20693:18;;20686:34;;;12304:57:67;;20625:18:102;12304:57:67;;;;;;;;12194:174;12128:240;:::o;2673:187:0:-;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;13273:482:67:-;-1:-1:-1;;;;;13345:30:67;;;;;;:19;:30;;;;;;;;13340:92;;13398:23;;-1:-1:-1;;;13398:23:67;;;;;;;;;;;13340:92;13441:15;:17;;;:15;:17;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13475:30:67;;;;;;:19;:30;;;;;13468:37;;-1:-1:-1;;13468:37:67;;;13530:32;13495:9;13530:21;:32::i;:::-;13515:47;;13572:25;13591:5;13572:18;:25::i;:::-;-1:-1:-1;;13623:15:67;;13607:69;;-1:-1:-1;;;13607:69:67;;-1:-1:-1;;;;;8833:32:102;;;13607:69:67;;;8815:51:102;13623:15:67;;;;13607:58;;8788:18:102;;13607:69:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13731:15:67;;13691:57;;-1:-1:-1;;;;;13731:15:67;;;;-1:-1:-1;13691:57:67;;;;-1:-1:-1;13691:57:67;;13731:15;;13691:57;13330:425;13273:482;:::o;9785:336::-;4910:13:2;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:2;;;;;;;:::i;:::-;9964:15:67::1;:37:::0;;-1:-1:-1;;;;;;9964:37:67::1;-1:-1:-1::0;;;;;9964:37:67;::::1;;::::0;;10011:39:::1;10033:16:::0;10011:21:::1;:39::i;:::-;10060:28;10080:7;10060:19;:28::i;:::-;10098:16;:14;:16::i;:::-;9785:336:::0;;;:::o;12732:416::-;12811:26;12826:10;12811:14;:26::i;:::-;12806:80;;12860:15;;-1:-1:-1;;;12860:15:67;;;;;;;;;;;12806:80;12895:33;;;12921:7;12895:33;;;;;;;;;;;;;;;;;:23;;:33;;12921:7;;12895:23;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12895:33:67;;;;-1:-1:-1;;;12895:33:67;;-1:-1:-1;;;;;12895:33:67;;;;;;;;;;;;;;;;-1:-1:-1;;;12895:33:67;;-1:-1:-1;12895:33:67;;-1:-1:-1;12945:7:67;;-1:-1:-1;12945:7:67;12938:14;12945:7;;12938:14;:::i;:::-;;;12967:9;12962:129;12982:21;;:28;12978:32;;12962:129;;;13055:21;;:24;;13031:7;;13055:21;13077:1;;13055:24;;;;;;:::i;:::-;;;;;;;;;;;;13031:49;;;;;;;;-1:-1:-1;13031:49:67;;;;;;;;;;;;;;-1:-1:-1;;;;;13031:49:67;-1:-1:-1;;;13031:49:67;-1:-1:-1;;;;;13031:49:67;;;;;;;;;;13012:3;12962:129;;;;13105:36;13119:9;13130:10;13105:36;;;;;;;:::i;14720:807::-;-1:-1:-1;;;;;14897:33:67;;14810:6;14897:33;;;:22;:33;;;;;14810:6;;;;;;14897:42;;:40;:42::i;:::-;-1:-1:-1;;;;;14954:30:67;;;;;;:19;:30;;;;;;14877:62;;-1:-1:-1;14954:30:67;;14949:481;;15000:23;15013:9;15000:23;;:::i;:::-;;;15041:5;15050:1;15041:10;15037:61;;-1:-1:-1;15078:5:67;;14720:807;-1:-1:-1;;;14720:807:67:o;15037:61::-;-1:-1:-1;;;;;15111:33:67;;15150:1;15111:33;;;:22;:33;;;;;:41;;:38;:41::i;:::-;;;14949:481;;;15195:28;15213:9;15195:17;:28::i;:::-;15183:40;-1:-1:-1;15245:37:67;15272:9;15183:40;15245:37;:::i;:::-;15237:45;;15300:5;15309:1;15300:10;15296:61;;-1:-1:-1;15337:5:67;;14720:807;-1:-1:-1;;;14720:807:67:o;15296:61::-;-1:-1:-1;;;;;15370:33:67;;;;;;:22;:33;;;;;:49;;15409:9;15370:38;:49::i;:::-;;;14949:481;15444:54;;;20652:25:102;;;20708:2;20693:18;;20686:34;;;-1:-1:-1;;;;;15444:54:67;;;;;20625:18:102;15444:54:67;;;;;;;-1:-1:-1;15515:5:67;;14720:807;-1:-1:-1;;;14720:807:67:o;15806:403::-;15880:22;15904;15955:28;:19;:26;:28::i;:::-;15938:45;-1:-1:-1;15993:16:67;16012:30;16037:5;15938:45;16012:30;:::i;:::-;15993:49;-1:-1:-1;15993:49:67;;-1:-1:-1;16097:40:67;:19;15993:49;16097:24;:40::i;:::-;-1:-1:-1;;16152:50:67;;;20652:25:102;;;20708:2;20693:18;;20686:34;;;16152:50:67;;20625:18:102;16152:50:67;;;;;;;15928:281;15806:403;;;:::o;817:153:10:-;879:7;952:11;962:1;953:5;;;952:11;:::i;:::-;942:21;;943:5;;;942:21;:::i;18926:308:67:-;19080:17;19062:14;:35;19058:89;;19120:16;;-1:-1:-1;;;;;;19120:16:67;;;;;;;;;;;19058:89;19160:14;19178:1;19160:19;19156:72;;19202:15;;-1:-1:-1;;;19202:15:67;;;;;;;;;;;19443:207;19585:14;-1:-1:-1;;;;;19570:29:67;:11;-1:-1:-1;;;;;19570:29:67;;19566:78;;19622:11;;-1:-1:-1;;;19622:11:67;;;;;;;;;;;19921:256;20069:50;-1:-1:-1;;;;;20069:27:67;;20097:9;20108:10;20069:27;:50::i;:::-;20064:107;;20142:18;;-1:-1:-1;;;20142:18:67;;;;;;;;;;;20550:349;20664:7;-1:-1:-1;;20706:16:67;20687:35;;;20683:210;;-1:-1:-1;;;;;20745:31:67;;;;;;:22;:31;;;;;:40;;:38;:40::i;:::-;20738:47;;;;20683:210;-1:-1:-1;;;;;20823:31:67;;;;;;:22;:31;;;;;:59;;;;;;;:42;:59;:::i;22544:454::-;22670:19;22692:32;22708:15;22692;:32::i;:::-;22670:54;;22754:11;22738:13;:27;22734:86;;;22788:21;;-1:-1:-1;;;22788:21:67;;;;;;;;;;;22734:86;22829:22;22854:35;22873:15;22854:18;:35::i;:::-;22829:60;;22920:13;22903:14;:30;22899:93;;;22956:25;;-1:-1:-1;;;22956:25:67;;;;;;;;;;;2081:586:5;2192:24;;2150:7;;;;;2240:12;2192:4;2240:6;:12::i;:::-;2226:26;;2272:1;2266:3;:7;:66;;;;-1:-1:-1;2320:12:5;2277:4;2295:7;2301:1;2295:3;:7;:::i;:::-;2277:26;;;;;;;;:::i;:::-;;;;;;;;;;:39;;;:55;2266:66;2262:370;;;2384:36;2414:5;2384:29;:36::i;:::-;2348:4;2366:7;2372:1;2366:3;:7;:::i;:::-;2348:26;;;;;;;;:::i;:::-;;;;;;;;:33;;;:72;;;;;-1:-1:-1;;;;;2348:72:5;;;;;-1:-1:-1;;;;;2348:72:5;;;;;;2262:370;;;2451:4;:17;;2491:116;;;;;;;;2517:42;2546:12;2517:28;:42::i;:::-;2491:116;;;;;;2569:36;2599:5;2569:29;:36::i;:::-;-1:-1:-1;;;;;2491:116:5;;;;;;2451:170;;;;;;;-1:-1:-1;2451:170:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2262:370;2649:3;-1:-1:-1;2654:5:5;;-1:-1:-1;;2081:586:5;;;;;;:::o;1003:95:0:-;4910:13:2;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:2;;;;;;;:::i;:::-;1065:26:0::1;:24;:26::i;16648:671:67:-:0;16785:18;;16732:4;;;;;;16909:288;16929:10;:17;16925:1;:21;16909:288;;;16993:10;17004:1;16993:13;;;;;;;;:::i;:::-;;;;;;;:22;;;16967:49;;17050:15;-1:-1:-1;;;;;17034:31:67;:12;-1:-1:-1;;;;;17034:31:67;;17030:55;;17074:11;;-1:-1:-1;;;17074:11:67;;;;;;;;;;;17030:55;17114:15;17099:30;;17162:10;17173:1;17162:13;;;;;;;;:::i;:::-;;;;;;;:24;;;-1:-1:-1;;;;;17143:43:67;;;;;;:::i;:::-;;-1:-1:-1;16948:3:67;;16909:288;;;;725:6:68;17210:15:67;:22;17206:107;;-1:-1:-1;17255:5:67;;16648:671;-1:-1:-1;;;;;16648:671:67:o;17206:107::-;-1:-1:-1;17298:4:67;;16648:671;-1:-1:-1;;;;;16648:671:67:o;1083:688:9:-;1219:4;1236:17;1255:35;1294:44;1322:4;1328:9;1294:27;:44::i;:::-;1235:103;;-1:-1:-1;1235:103:9;-1:-1:-1;1361:37:9;1352:5;:46;;;;;;;;:::i;:::-;;:69;;;;;1415:6;-1:-1:-1;;;;;1402:19:9;:9;-1:-1:-1;;;;;1402:19:9;;1352:69;1348:111;;;1444:4;1437:11;;;;;;1348:111;1470:12;1484:19;1507:6;-1:-1:-1;;;;;1507:17:9;1561:45;;;1608:4;1614:9;1538:86;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1538:86:9;;;;;;;;;;;;;;-1:-1:-1;;;;;1538:86:9;-1:-1:-1;;;;;;1538:86:9;;;;;;;;;;1507:127;;;;1538:86;1507:127;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1469:165;;;;1652:7;:30;;;;;1663:6;:13;1680:2;1663:19;1652:30;:111;;;;-1:-1:-1;1686:28:9;;-1:-1:-1;;;1718:45:9;1686:28;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1686:77:9;;1652:111;1644:120;1083:688;-1:-1:-1;;;;;;;;1083:688:9:o;21318:297:67:-;21404:7;-1:-1:-1;;21446:16:67;21427:35;;;21423:186;;21485:28;:19;:26;:28::i;21423:186::-;21551:47;:19;:47;;;;;:30;:47;:::i;21423:186::-;21318:297;;;:::o;21940:308::-;22029:7;-1:-1:-1;;22071:16:67;22052:35;;;22048:194;;22110:32;:23;:30;:32::i;22048:194::-;22180:51;:23;:51;;;;;:34;:51;:::i;2762:192:11:-;2819:7;-1:-1:-1;;;;;2846:26:11;;;2838:78;;;;-1:-1:-1;;;2838:78:11;;23165:2:102;2838:78:11;;;23147:21:102;23204:2;23184:18;;;23177:30;23243:34;23223:18;;;23216:62;-1:-1:-1;;;23294:18:102;;;23287:37;23341:19;;2838:78:11;22963:403:102;2838:78:11;-1:-1:-1;2941:5:11;2762:192::o;15190:187::-;15246:6;15281:16;15272:25;;;15264:76;;;;-1:-1:-1;;;15264:76:11;;23573:2:102;15264:76:11;;;23555:21:102;23612:2;23592:18;;;23585:30;23651:34;23631:18;;;23624:62;-1:-1:-1;;;23702:18:102;;;23695:36;23748:19;;15264:76:11;23371:402:102;1104:111:0;4910:13:2;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:2;;;;;;;:::i;:::-;1176:32:0::1;929:10:6::0;1176:18:0::1;:32::i;2265:1373:8:-:0;2346:7;2355:12;2576:9;:16;2596:2;2576:22;2572:1060;;2912:4;2897:20;;2891:27;2961:4;2946:20;;2940:27;3018:4;3003:20;;2997:27;2614:9;2989:36;3059:25;3070:4;2989:36;2891:27;2940;3059:10;:25::i;:::-;3052:32;;;;;;;;;2572:1060;3105:9;:16;3125:2;3105:22;3101:531;;3421:4;3406:20;;3400:27;3471:4;3456:20;;3450:27;3511:23;3522:4;3400:27;3450;3511:10;:23::i;:::-;3504:30;;;;;;;;3101:531;-1:-1:-1;3581:1:8;;-1:-1:-1;3585:35:8;3565:56;;5832:1603;5958:7;;6882:66;6869:79;;6865:161;;;-1:-1:-1;6980:1:8;;-1:-1:-1;6984:30:8;6964:51;;6865:161;7039:1;:7;;7044:2;7039:7;;:18;;;;;7050:1;:7;;7055:2;7050:7;;7039:18;7035:100;;;-1:-1:-1;7089:1:8;;-1:-1:-1;7093:30:8;7073:51;;7035:100;7246:24;;;7229:14;7246:24;;;;;;;;;24005:25:102;;;24078:4;24066:17;;24046:18;;;24039:45;;;;24100:18;;;24093:34;;;24143:18;;;24136:34;;;7246:24:8;;23977:19:102;;7246:24:8;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7246:24:8;;-1:-1:-1;;7246:24:8;;;-1:-1:-1;;;;;;;7284:20:8;;7280:101;;7336:1;7340:29;7320:50;;;;;;;7280:101;7399:6;-1:-1:-1;7407:20:8;;-1:-1:-1;5832:1603:8;;;;;;;;:::o;4905:336::-;5015:7;;-1:-1:-1;;;;;5060:80:8;;5015:7;5166:25;5182:3;5167:18;;;5189:2;5166:25;:::i;:::-;5150:42;;5209:25;5220:4;5226:1;5229;5232;5209:10;:25::i;:::-;5202:32;;;;;;4905:336;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:127:102;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;-1:-1:-1;;;;;280:34:102;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:257::-;476:4;470:11;;;508:17;;-1:-1:-1;;;;;540:34:102;;576:22;;;537:62;534:88;;;602:18;;:::i;666:275::-;737:2;731:9;802:2;783:13;;-1:-1:-1;;779:27:102;767:40;;-1:-1:-1;;;;;822:34:102;;858:22;;;819:62;816:88;;;884:18;;:::i;:::-;920:2;913:22;666:275;;-1:-1:-1;666:275:102:o;946:183::-;1006:4;-1:-1:-1;;;;;1031:6:102;1028:30;1025:56;;;1061:18;;:::i;:::-;-1:-1:-1;1106:1:102;1102:14;1118:4;1098:25;;946:183::o;1134:131::-;-1:-1:-1;;;;;1209:31:102;;1199:42;;1189:70;;1255:1;1252;1245:12;1270:744;1324:5;1377:3;1370:4;1362:6;1358:17;1354:27;1344:55;;1395:1;1392;1385:12;1344:55;1435:6;1422:20;1462:64;1478:47;1518:6;1478:47;:::i;:::-;1462:64;:::i;:::-;1550:3;1574:6;1569:3;1562:19;1606:4;1601:3;1597:14;1590:21;;1667:4;1657:6;1654:1;1650:14;1642:6;1638:27;1634:38;1620:52;;1695:3;1687:6;1684:15;1681:35;;;1712:1;1709;1702:12;1681:35;1748:4;1740:6;1736:17;1762:221;1778:6;1773:3;1770:15;1762:221;;;1860:3;1847:17;1877:31;1902:5;1877:31;:::i;:::-;1921:18;;1968:4;1959:14;;;;1795;1762:221;;;-1:-1:-1;2001:7:102;1270:744;-1:-1:-1;;;;;1270:744:102:o;2019:348::-;2103:6;2156:2;2144:9;2135:7;2131:23;2127:32;2124:52;;;2172:1;2169;2162:12;2124:52;2212:9;2199:23;-1:-1:-1;;;;;2237:6:102;2234:30;2231:50;;;2277:1;2274;2267:12;2231:50;2300:61;2353:7;2344:6;2333:9;2329:22;2300:61;:::i;:::-;2290:71;2019:348;-1:-1:-1;;;;2019:348:102:o;2372:186::-;2420:4;-1:-1:-1;;;;;2445:6:102;2442:30;2439:56;;;2475:18;;:::i;:::-;-1:-1:-1;2541:2:102;2520:15;-1:-1:-1;;2516:29:102;2547:4;2512:40;;2372:186::o;2563:486::-;2605:5;2658:3;2651:4;2643:6;2639:17;2635:27;2625:55;;2676:1;2673;2666:12;2625:55;2716:6;2703:20;2747:52;2763:35;2791:6;2763:35;:::i;2747:52::-;2824:6;2815:7;2808:23;2878:3;2871:4;2862:6;2854;2850:19;2846:30;2843:39;2840:59;;;2895:1;2892;2885:12;2840:59;2960:6;2953:4;2945:6;2941:17;2934:4;2925:7;2921:18;2908:59;3016:1;2987:20;;;3009:4;2983:31;2976:42;;;;2991:7;2563:486;-1:-1:-1;;;2563:486:102:o;3054:1162::-;3167:6;3175;3228:2;3216:9;3207:7;3203:23;3199:32;3196:52;;;3244:1;3241;3234:12;3196:52;3283:9;3270:23;3302:31;3327:5;3302:31;:::i;:::-;3352:5;-1:-1:-1;3408:2:102;3393:18;;3380:32;-1:-1:-1;;;;;3424:30:102;;3421:50;;;3467:1;3464;3457:12;3421:50;3490:22;;3546:4;3528:16;;;3524:27;3521:47;;;3564:1;3561;3554:12;3521:47;3617:2;3611:9;3659:4;3647:17;;-1:-1:-1;;;;;3679:34:102;;3715:22;;;3676:62;3673:88;;;3741:18;;:::i;:::-;3777:2;3770:22;3817:16;;-1:-1:-1;;;;;3845:32:102;;3842:52;;;3890:1;3887;3880:12;3842:52;3918:44;3954:7;3943:8;3939:2;3935:17;3918:44;:::i;:::-;3903:60;;-1:-1:-1;4029:2:102;4021:11;;;4008:25;4049:15;;;4042:32;4140:2;4132:11;;;4119:25;4160:15;;;4153:32;;;;3054:1162;;3910:6;;-1:-1:-1;3054:1162:102;;-1:-1:-1;;3054:1162:102:o;4221:121::-;4306:10;4299:5;4295:22;4288:5;4285:33;4275:61;;4332:1;4329;4322:12;4347:245;4405:6;4458:2;4446:9;4437:7;4433:23;4429:32;4426:52;;;4474:1;4471;4464:12;4426:52;4513:9;4500:23;4532:30;4556:5;4532:30;:::i;4779:434::-;4856:6;4864;4917:2;4905:9;4896:7;4892:23;4888:32;4885:52;;;4933:1;4930;4923:12;4885:52;4978:23;;;-1:-1:-1;5076:2:102;5061:18;;5048:32;-1:-1:-1;;;;;5092:30:102;;5089:50;;;5135:1;5132;5125:12;5089:50;5158:49;5199:7;5190:6;5179:9;5175:22;5158:49;:::i;:::-;5148:59;;;4779:434;;;;;:::o;5425:715::-;5547:12;;5513:4;5568:17;;;5634:19;;5504:14;;;5662:20;;;5474:3;;5735:23;;;;5474:3;;5709:2;5700:12;;;5786:327;5800:6;5797:1;5794:13;5786:327;;;5859:13;;5903:9;;-1:-1:-1;;;;;5899:35:102;5885:50;;5991:4;5983:13;;;5977:20;-1:-1:-1;;;;;5973:53:102;5955:16;;;5948:79;6086:17;;;;5931:1;5815:9;;;;;6060:2;6049:14;;;;5786:327;;6145:257;6324:2;6313:9;6306:21;6287:4;6344:52;6392:2;6381:9;6377:18;6369:6;6344:52;:::i;6407:247::-;6466:6;6519:2;6507:9;6498:7;6494:23;6490:32;6487:52;;;6535:1;6532;6525:12;6487:52;6574:9;6561:23;6593:31;6618:5;6593:31;:::i;6659:1307::-;6786:6;6794;6847:2;6835:9;6826:7;6822:23;6818:32;6815:52;;;6863:1;6860;6853:12;6815:52;6903:9;6890:23;-1:-1:-1;;;;;6928:6:102;6925:30;6922:50;;;6968:1;6965;6958:12;6922:50;6991:22;;7044:4;7036:13;;7032:27;-1:-1:-1;7022:55:102;;7073:1;7070;7063:12;7022:55;7113:2;7100:16;7136:64;7152:47;7192:6;7152:47;:::i;7136:64::-;7222:3;7246:6;7241:3;7234:19;7278:4;7273:3;7269:14;7262:21;;7335:4;7325:6;7322:1;7318:14;7314:2;7310:23;7306:34;7292:48;;7363:7;7355:6;7352:19;7349:39;;;7384:1;7381;7374:12;7349:39;7416:4;7412:2;7408:13;7430:316;7446:6;7441:3;7438:15;7430:316;;;7534:3;7521:17;-1:-1:-1;;;;;7557:11:102;7554:35;7551:55;;;7602:1;7599;7592:12;7551:55;7631:70;7693:7;7686:4;7672:11;7668:2;7664:20;7660:31;7631:70;:::i;:::-;7619:83;;-1:-1:-1;7731:4:102;7722:14;;;;7463;7430:316;;;-1:-1:-1;7765:5:102;-1:-1:-1;;;;7823:4:102;7808:20;;7795:34;-1:-1:-1;;;;;7841:32:102;;7838:52;;;7886:1;7883;7876:12;7971:226;8030:6;8083:2;8071:9;8062:7;8058:23;8054:32;8051:52;;;8099:1;8096;8089:12;8051:52;-1:-1:-1;8144:23:102;;7971:226;-1:-1:-1;7971:226:102:o;8202:462::-;8295:6;8303;8356:2;8344:9;8335:7;8331:23;8327:32;8324:52;;;8372:1;8369;8362:12;8324:52;8417:23;;;-1:-1:-1;8515:2:102;8500:18;;8487:32;-1:-1:-1;;;;;8531:30:102;;8528:50;;;8574:1;8571;8564:12;8528:50;8597:61;8650:7;8641:6;8630:9;8626:22;8597:61;:::i;8877:386::-;8944:6;8952;9005:2;8993:9;8984:7;8980:23;8976:32;8973:52;;;9021:1;9018;9011:12;8973:52;9060:9;9047:23;9079:31;9104:5;9079:31;:::i;:::-;9129:5;-1:-1:-1;9186:2:102;9171:18;;9158:32;9199;9158;9199;:::i;:::-;9250:7;9240:17;;;8877:386;;;;;:::o;9268:1322::-;9321:5;9369:4;9357:9;9352:3;9348:19;9344:30;9341:50;;;9387:1;9384;9377:12;9341:50;9409:22;;:::i;:::-;9400:31;;9467:9;9454:23;-1:-1:-1;;;;;9492:6:102;9489:30;9486:50;;;9532:1;9529;9522:12;9486:50;9555:22;;9608:4;9600:13;;9596:23;-1:-1:-1;9586:51:102;;9633:1;9630;9623:12;9586:51;9673:2;9660:16;9696:64;9712:47;9752:6;9712:47;:::i;9696:64::-;9782:3;9806:6;9801:3;9794:19;9838:4;9833:3;9829:14;9822:21;;9895:4;9885:6;9882:1;9878:14;9874:2;9870:23;9866:34;9852:48;;9923:3;9915:6;9912:15;9909:35;;;9940:1;9937;9930:12;9909:35;9972:4;9968:2;9964:13;9953:24;;9986:569;10002:6;9997:3;9994:15;9986:569;;;10080:4;10074:3;10069;10065:13;10061:24;10058:44;;;10098:1;10095;10088:12;10058:44;10130:22;;:::i;:::-;10193:3;10180:17;10210:33;10235:7;10210:33;:::i;:::-;10256:24;;10330:4;10321:14;;10308:28;-1:-1:-1;;;;;10371:40:102;;10359:53;;10349:81;;10426:1;10423;10416:12;10349:81;10470:7;10463:4;10454:7;10450:18;10443:35;;10503:7;10498:3;10491:20;;10540:4;10535:3;10531:14;10524:21;;10028:4;10023:3;10019:14;10012:21;;9986:569;;;10564:20;;-1:-1:-1;10571:5:102;;9268:1322;-1:-1:-1;;;;9268:1322:102:o;10595:599::-;10697:6;10705;10713;10766:2;10754:9;10745:7;10741:23;10737:32;10734:52;;;10782:1;10779;10772:12;10734:52;10821:9;10808:23;10840:31;10865:5;10840:31;:::i;:::-;10890:5;-1:-1:-1;10968:2:102;10953:18;;10940:32;;-1:-1:-1;11049:2:102;11034:18;;11021:32;-1:-1:-1;;;;;11065:30:102;;11062:50;;;11108:1;11105;11098:12;11062:50;11131:57;11180:7;11171:6;11160:9;11156:22;11131:57;:::i;:::-;11121:67;;;10595:599;;;;;:::o;11199:586::-;11317:6;11325;11378:2;11366:9;11357:7;11353:23;11349:32;11346:52;;;11394:1;11391;11384:12;11346:52;11434:9;11421:23;-1:-1:-1;;;;;11459:6:102;11456:30;11453:50;;;11499:1;11496;11489:12;11453:50;11522:57;11571:7;11562:6;11551:9;11547:22;11522:57;:::i;:::-;11512:67;;;11632:2;11621:9;11617:18;11604:32;-1:-1:-1;;;;;11651:8:102;11648:32;11645:52;;;11693:1;11690;11683:12;11982:250;12067:1;12077:113;12091:6;12088:1;12085:13;12077:113;;;12167:11;;;12161:18;12148:11;;;12141:39;12113:2;12106:10;12077:113;;;-1:-1:-1;;12224:1:102;12206:16;;12199:27;11982:250::o;12237:1220::-;12300:5;12353:3;12346:4;12338:6;12334:17;12330:27;12320:55;;12371:1;12368;12361:12;12320:55;12404:6;12398:13;12431:64;12447:47;12487:6;12447:47;:::i;12431:64::-;12519:3;12543:6;12538:3;12531:19;12575:4;12570:3;12566:14;12559:21;;12636:4;12626:6;12623:1;12619:14;12611:6;12607:27;12603:38;12589:52;;12664:3;12656:6;12653:15;12650:35;;;12681:1;12678;12671:12;12650:35;12717:4;12709:6;12705:17;12731:695;12747:6;12742:3;12739:15;12731:695;;;12828:3;12822:10;-1:-1:-1;;;;;12851:11:102;12848:35;12845:55;;;12896:1;12893;12886:12;12845:55;12923:24;;12982:2;12974:11;;12970:21;-1:-1:-1;12960:49:102;;13005:1;13002;12995:12;12960:49;13052:4;13048:2;13044:13;13038:20;13086:54;13102:37;13130:8;13102:37;:::i;13086:54::-;13153:25;;;13197:39;13205:17;;;13197:39;13194:48;-1:-1:-1;13191:68:102;;;13255:1;13252;13245:12;13191:68;13272:77;13340:8;13333:4;13324:7;13320:18;13315:2;13311;13307:11;13272:77;:::i;:::-;13362:20;;-1:-1:-1;;13411:4:102;13402:14;;;;12764;12731:695;;13462:136;13540:13;;13562:30;13540:13;13562:30;:::i;13603:1299::-;13749:6;13757;13765;13818:2;13806:9;13797:7;13793:23;13789:32;13786:52;;;13834:1;13831;13824:12;13786:52;13867:9;13861:16;-1:-1:-1;;;;;13892:6:102;13889:30;13886:50;;;13932:1;13929;13922:12;13886:50;13955:22;;14008:4;14000:13;;13996:27;-1:-1:-1;13986:55:102;;14037:1;14034;14027:12;13986:55;14070:2;14064:9;14093:64;14109:47;14149:6;14109:47;:::i;14093:64::-;14179:3;14203:6;14198:3;14191:19;14235:4;14230:3;14226:14;14219:21;;14292:4;14282:6;14279:1;14275:14;14271:2;14267:23;14263:34;14249:48;;14320:7;14312:6;14309:19;14306:39;;;14341:1;14338;14331:12;14306:39;14373:4;14369:2;14365:13;14354:24;;14387:214;14403:6;14398:3;14395:15;14387:214;;;14478:3;14472:10;14495:31;14520:5;14495:31;:::i;:::-;14539:18;;14586:4;14420:14;;;;14577;;;;14387:214;;;14620:5;14610:15;;;;;;14671:4;14660:9;14656:20;14650:27;-1:-1:-1;;;;;14692:8:102;14689:32;14686:52;;;14734:1;14731;14724:12;14686:52;14757:72;14821:7;14810:8;14799:9;14795:24;14757:72;:::i;:::-;14747:82;;;14848:48;14892:2;14881:9;14877:18;14848:48;:::i;:::-;14838:58;;13603:1299;;;;;:::o;14907:127::-;14968:10;14963:3;14959:20;14956:1;14949:31;14999:4;14996:1;14989:15;15023:4;15020:1;15013:15;15039:753;-1:-1:-1;;;;;15306:32:102;;15288:51;;15276:2;15370;15355:18;;;15348:30;;;15427:13;;15261:18;;;15449:22;;;15228:4;;15528:15;;;;15502:2;15487:18;;;15228:4;15571:195;15585:6;15582:1;15579:13;15571:195;;;15650:13;;-1:-1:-1;;;;;15646:39:102;15634:52;;15715:2;15741:15;;;;15706:12;;;;15682:1;15600:9;15571:195;;;-1:-1:-1;15783:3:102;;15039:753;-1:-1:-1;;;;;;15039:753:102:o;15797:876::-;15892:6;15945:2;15933:9;15924:7;15920:23;15916:32;15913:52;;;15961:1;15958;15951:12;15913:52;15994:9;15988:16;-1:-1:-1;;;;;16019:6:102;16016:30;16013:50;;;16059:1;16056;16049:12;16013:50;16082:22;;16135:4;16127:13;;16123:27;-1:-1:-1;16113:55:102;;16164:1;16161;16154:12;16113:55;16197:2;16191:9;16220:64;16236:47;16276:6;16236:47;:::i;16220:64::-;16306:3;16330:6;16325:3;16318:19;16362:2;16357:3;16353:12;16346:19;;16417:2;16407:6;16404:1;16400:14;16396:2;16392:23;16388:32;16374:46;;16443:7;16435:6;16432:19;16429:39;;;16464:1;16461;16454:12;16429:39;16496:2;16492;16488:11;16477:22;;16508:135;16524:6;16519:3;16516:15;16508:135;;;16590:10;;16578:23;;16630:2;16541:12;;;;16621;;;;16508:135;;;16662:5;15797:876;-1:-1:-1;;;;;;15797:876:102:o;16678:127::-;16739:10;16734:3;16730:20;16727:1;16720:31;16770:4;16767:1;16760:15;16794:4;16791:1;16784:15;16810:168;16883:9;;;16914;;16931:15;;;16925:22;;16911:37;16901:71;;16952:18;;:::i;16983:125::-;17048:9;;;17069:10;;;17066:36;;;17082:18;;:::i;17113:217::-;17153:1;17179;17169:132;;17223:10;17218:3;17214:20;17211:1;17204:31;17258:4;17255:1;17248:15;17286:4;17283:1;17276:15;17169:132;-1:-1:-1;17315:9:102;;17113:217::o;18356:216::-;18420:9;;;18448:11;;;18395:3;18478:9;;18506:10;;18502:19;;18531:10;;18523:19;;18499:44;18496:70;;;18546:18;;:::i;:::-;18496:70;;18356:216;;;;:::o;18577:135::-;18616:3;18637:17;;;18634:43;;18657:18;;:::i;:::-;-1:-1:-1;18704:1:102;18693:13;;18577:135::o;18717:270::-;18758:3;18796:5;18790:12;18823:6;18818:3;18811:19;18839:76;18908:6;18901:4;18896:3;18892:14;18885:4;18878:5;18874:16;18839:76;:::i;:::-;18969:2;18948:15;-1:-1:-1;;18944:29:102;18935:39;;;;18976:4;18931:50;;18717:270;-1:-1:-1;;18717:270:102:o;18992:626::-;19268:1;19264;19259:3;19255:11;19251:19;19243:6;19239:32;19228:9;19221:51;19308:2;19303;19292:9;19288:18;19281:30;19202:4;19346:6;19340:13;19389:4;19384:2;19373:9;19369:18;19362:32;19417:51;19463:3;19452:9;19448:19;19434:12;19417:51;:::i;:::-;19403:65;;19524:2;19516:6;19512:15;19506:22;19499:4;19488:9;19484:20;19477:52;19584:2;19576:6;19572:15;19566:22;19560:3;19549:9;19545:19;19538:51;19606:6;19598:14;;;18992:626;;;;;:::o;19984:128::-;20051:9;;;20072:11;;;20069:37;;;20086:18;;:::i;20731:136::-;20770:3;20798:5;20788:39;;20807:18;;:::i;:::-;-1:-1:-1;;;20843:18:102;;20731:136::o;20872:407::-;21074:2;21056:21;;;21113:2;21093:18;;;21086:30;21152:34;21147:2;21132:18;;21125:62;-1:-1:-1;;;21218:2:102;21203:18;;21196:41;21269:3;21254:19;;20872:407::o;21284:457::-;21541:2;21530:9;21523:21;21504:4;21567:52;21615:2;21604:9;21600:18;21592:6;21567:52;:::i;:::-;21667:9;21659:6;21655:22;21650:2;21639:9;21635:18;21628:50;21695:40;21728:6;21720;21695:40;:::i;:::-;21687:48;21284:457;-1:-1:-1;;;;;21284:457:102:o;21746:200::-;21812:9;;;21785:4;21840:9;;21868:10;;21880:12;;;21864:29;21903:12;;;21895:21;;21861:56;21858:82;;;21920:18;;:::i;:::-;21858:82;21746:200;;;;:::o;21951:127::-;22012:10;22007:3;22003:20;22000:1;21993:31;22043:4;22040:1;22033:15;22067:4;22064:1;22057:15;22083:288;22258:6;22247:9;22240:25;22301:2;22296;22285:9;22281:18;22274:30;22221:4;22321:44;22361:2;22350:9;22346:18;22338:6;22321:44;:::i;22376:287::-;22505:3;22543:6;22537:13;22559:66;22618:6;22613:3;22606:4;22598:6;22594:17;22559:66;:::i;:::-;22641:16;;;;;22376:287;-1:-1:-1;;22376:287:102:o;22668:290::-;22737:6;22790:2;22778:9;22769:7;22765:23;22761:32;22758:52;;;22806:1;22803;22796:12;22758:52;22832:16;;-1:-1:-1;;;;;;22877:32:102;;22867:43;;22857:71;;22924:1;22921;22914:12",
        "linkReferences": {},
        "immutableReferences": {
            "18051": [
                {
                    "start": 1594,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "deregisterOperator()": "857dc190",
        "getLastCheckpointOperatorWeight(address)": "3b242e4a",
        "getLastCheckpointThresholdWeight()": "b933fa74",
        "getLastCheckpointThresholdWeightAtBlock(uint32)": "1e4cd85e",
        "getLastCheckpointTotalWeight()": "314f3a49",
        "getLastCheckpointTotalWeightAtBlock(uint32)": "0dba3394",
        "getOperatorWeight(address)": "98ec1ac9",
        "getOperatorWeightAtBlock(address,uint32)": "955f2d90",
        "initialize(address,uint256,((address,uint96)[]))": "ab118995",
        "isValidSignature(bytes32,bytes)": "1626ba7e",
        "minimumWeight()": "40bf2fb7",
        "operatorRegistered(address)": "ec7fbb31",
        "owner()": "8da5cb5b",
        "quorum()": "1703a018",
        "registerOperatorWithSignature(address,(bytes,bytes32,uint256))": "0a601a12",
        "renounceOwnership()": "715018a6",
        "transferOwnership(address)": "f2fde38b",
        "updateMinimumWeight(uint256,address[])": "696255be",
        "updateOperators(address[])": "00cf2ab5",
        "updateOperatorsForQuorum(address[][],bytes)": "5140a548",
        "updateQuorumConfig(((address,uint96)[]),address[])": "dec5d1f6",
        "updateStakeThreshold(uint256)": "5ef53329"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegationManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientSignedStake\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientWeight\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuorum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignedWeight\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustUpdateAllOperators\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSorted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotRegistered\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_old\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_new\",\"type\":\"uint256\"}],\"name\":\"MinimumWeightUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_avs\",\"type\":\"address\"}],\"name\":\"OperatorDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_avs\",\"type\":\"address\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWeight\",\"type\":\"uint256\"}],\"name\":\"OperatorWeightUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct Quorum\",\"name\":\"_old\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct Quorum\",\"name\":\"_new\",\"type\":\"tuple\"}],\"name\":\"QuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_thresholdWeight\",\"type\":\"uint256\"}],\"name\":\"ThresholdWeightUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTotalWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalWeight\",\"type\":\"uint256\"}],\"name\":\"TotalWeightUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMinimumWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinimumWeight\",\"type\":\"uint256\"}],\"name\":\"UpdateMinimumWeight\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"getLastCheckpointOperatorWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastCheckpointThresholdWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_blockNumber\",\"type\":\"uint32\"}],\"name\":\"getLastCheckpointThresholdWeightAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastCheckpointTotalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_blockNumber\",\"type\":\"uint32\"}],\"name\":\"getLastCheckpointTotalWeightAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"getOperatorWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_blockNumber\",\"type\":\"uint32\"}],\"name\":\"getOperatorWeightAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_serviceManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_thresholdWeight\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Quorum\",\"name\":\"_quorum\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatureData\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"operatorRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Quorum\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithSaltAndExpiry\",\"name\":\"_operatorSignature\",\"type\":\"tuple\"}],\"name\":\"registerOperatorWithSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMinimumWeight\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_operators\",\"type\":\"address[]\"}],\"name\":\"updateMinimumWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_operators\",\"type\":\"address[]\"}],\"name\":\"updateOperators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"operatorsPerQuorum\",\"type\":\"address[][]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"updateOperatorsForQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Quorum\",\"name\":\"_quorum\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_operators\",\"type\":\"address[]\"}],\"name\":\"updateQuorumConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_thresholdWeight\",\"type\":\"uint256\"}],\"name\":\"updateStakeThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"THIS CONTRACT IS NOT AUDITED\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MinimumWeightUpdated(uint256,uint256)\":{\"params\":{\"_new\":\"The new minimumWeight\",\"_old\":\"The previous minimum weight\"}},\"OperatorDeregistered(address,address)\":{\"params\":{\"_avs\":\"The address of the associated AVS\",\"_operator\":\"The address of the deregistered operator\"}},\"OperatorRegistered(address,address)\":{\"params\":{\"_avs\":\"The address of the associated AVS\",\"_operator\":\"The address of the registered operator\"}},\"OperatorWeightUpdated(address,uint256,uint256)\":{\"params\":{\"_operator\":\"The address of the operator updated\",\"newWeight\":\"The operator's weight after the update\",\"oldWeight\":\"The operator's weight before the update\"}},\"QuorumUpdated(((address,uint96)[]),((address,uint96)[]))\":{\"params\":{\"_new\":\"The new quorum configuration\",\"_old\":\"The previous quorum configuration\"}},\"TotalWeightUpdated(uint256,uint256)\":{\"params\":{\"newTotalWeight\":\"The total weight after the update\",\"oldTotalWeight\":\"The total weight before the update\"}},\"UpdateMinimumWeight(uint256,uint256)\":{\"params\":{\"newMinimumWeight\":\"The updated weight\",\"oldMinimumWeight\":\"The previous weight\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to create ECDSAStakeRegistry.\",\"params\":{\"_delegationManager\":\"Address of the DelegationManager contract that this registry interacts with.\"}},\"getLastCheckpointOperatorWeight(address)\":{\"params\":{\"_operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"uint256 - The latest weight of the operator.\"}},\"getLastCheckpointThresholdWeight()\":{\"returns\":{\"_0\":\"uint256 - The latest threshold weight.\"}},\"getLastCheckpointThresholdWeightAtBlock(uint32)\":{\"params\":{\"_blockNumber\":\"The block number to get the threshold weight for the quorum\"},\"returns\":{\"_0\":\"uint256 - The threshold weight the given block.\"}},\"getLastCheckpointTotalWeight()\":{\"returns\":{\"_0\":\"uint256 - The latest total weight.\"}},\"getLastCheckpointTotalWeightAtBlock(uint32)\":{\"params\":{\"_blockNumber\":\"The block number to get the total weight for the quorum\"},\"returns\":{\"_0\":\"uint256 - The total weight at the given block.\"}},\"getOperatorWeight(address)\":{\"params\":{\"_operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"uint256 - The current weight of the operator; returns 0 if below the threshold.\"}},\"getOperatorWeightAtBlock(address,uint32)\":{\"params\":{\"_blockNumber\":\"The block number to get the operator weight for the quorum\",\"_operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"uint256 - The weight of the operator at the given block.\"}},\"initialize(address,uint256,((address,uint96)[]))\":{\"params\":{\"_quorum\":\"The quorum struct containing the details of the quorum thresholds.\",\"_serviceManager\":\"The address of the service manager.\",\"_thresholdWeight\":\"The threshold weight in basis points.\"}},\"isValidSignature(bytes32,bytes)\":{\"params\":{\"_dataHash\":\"The hash of the data that was signed.\",\"_signatureData\":\"Encoded signature data consisting of an array of signers, an array of signatures, and a reference block number.\"},\"returns\":{\"_0\":\"The function selector that indicates the signature is valid according to ERC1271 standard.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"quorum()\":{\"returns\":{\"_0\":\"Quorum - The current quorum of strategies and weights\"}},\"registerOperatorWithSignature(address,(bytes,bytes32,uint256))\":{\"params\":{\"_operatorSignature\":\"Contains the operator's signature, salt, and expiry\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateMinimumWeight(uint256,address[])\":{\"details\":\"Access controlled to the contract owner\",\"params\":{\"_newMinimumWeight\":\"The new weight an operator must have to join the operator set\"}},\"updateOperators(address[])\":{\"details\":\"Queries stakes from the Eigenlayer core DelegationManager contract\",\"params\":{\"_operators\":\"A list of operator addresses to update\"}},\"updateOperatorsForQuorum(address[][],bytes)\":{\"details\":\"This interface maintains compatibility with avs-sync which handles multiquorums while this registry has a single quorum\",\"params\":{\"operatorsPerQuorum\":\"An array of operator address arrays, one for each quorum.\"}},\"updateQuorumConfig(((address,uint96)[]),address[])\":{\"details\":\"Only callable by the contract owner. It first updates the quorum configuration and then updates the list of operators.\",\"params\":{\"_operators\":\"The list of operator addresses to update stakes for\",\"_quorum\":\"The new quorum configuration, including strategies and their new weights\"}},\"updateStakeThreshold(uint256)\":{\"details\":\"This function can only be invoked by the owner of the contract. It delegates the update to an internal function `_updateStakeThreshold`.\",\"params\":{\"_thresholdWeight\":\"The updated threshold weight required to validate a message. This is the cumulative weight that must be met or exceeded by the sum of the stakes of the signatories for a message to be deemed valid.\"}}},\"title\":\"ECDSA Stake Registry\",\"version\":1},\"userdoc\":{\"errors\":{\"InsufficientSignedStake()\":[{\"notice\":\"Indicates the total signed stake fails to meet the required threshold.\"}],\"InsufficientWeight()\":[{\"notice\":\"Indicates an individual signer's weight fails to meet the required threshold.\"}],\"InvalidLength()\":[{\"notice\":\"Indicates encountering an invalid length for the signers or signatures array.\"}],\"InvalidQuorum()\":[{\"notice\":\"Indicates the quorum is invalid\"}],\"InvalidSignature()\":[{\"notice\":\"Indicates encountering an invalid signature.\"}],\"InvalidSignedWeight()\":[{\"notice\":\"Indicates operator weights were out of sync and the signed weight exceed the total\"}],\"InvalidThreshold()\":[{\"notice\":\"Thrown when the threshold update is greater than BPS\"}],\"LengthMismatch()\":[{\"notice\":\"Indicates when the lengths of the signers array and signatures array do not match.\"}],\"MustUpdateAllOperators()\":[{\"notice\":\"Thrown when missing operators in an update \"}],\"NotSorted()\":[{\"notice\":\"Indicates the system finds a list of items unsorted\"}],\"OperatorAlreadyRegistered()\":[{\"notice\":\"Thrown when registering an already registered operator\"}],\"OperatorNotRegistered()\":[{\"notice\":\"Thrown when de-registering or updating the stake for an unregisted operator\"}]},\"events\":{\"MinimumWeightUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the weight to join the operator set updates\"},\"OperatorDeregistered(address,address)\":{\"notice\":\"Emitted when the system deregisters an operator\"},\"OperatorRegistered(address,address)\":{\"notice\":\"Emitted when the system registers an operator\"},\"OperatorWeightUpdated(address,uint256,uint256)\":{\"notice\":\"Emitted when the system updates an operator's weight\"},\"QuorumUpdated(((address,uint96)[]),((address,uint96)[]))\":{\"notice\":\"Emitted when the system updates the quorum\"},\"ThresholdWeightUpdated(uint256)\":{\"notice\":\"Emits when setting a new threshold weight.\"},\"TotalWeightUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the system updates the total weight\"},\"UpdateMinimumWeight(uint256,uint256)\":{\"notice\":\"Emitted when the weight required to be an operator changes\"}},\"kind\":\"user\",\"methods\":{\"deregisterOperator()\":{\"notice\":\"Deregisters an existing operator\"},\"getLastCheckpointOperatorWeight(address)\":{\"notice\":\"Retrieves the last recorded weight for a given operator.\"},\"getLastCheckpointThresholdWeight()\":{\"notice\":\"Retrieves the last recorded threshold weight\"},\"getLastCheckpointThresholdWeightAtBlock(uint32)\":{\"notice\":\"Retrieves the threshold weight at a specific block number.\"},\"getLastCheckpointTotalWeight()\":{\"notice\":\"Retrieves the last recorded total weight across all operators.\"},\"getLastCheckpointTotalWeightAtBlock(uint32)\":{\"notice\":\"Retrieves the total weight at a specific block number.\"},\"getOperatorWeight(address)\":{\"notice\":\"Calculates the current weight of an operator based on their delegated stake in the strategies considered in the quorum\"},\"getOperatorWeightAtBlock(address,uint32)\":{\"notice\":\"Retrieves the operator's weight at a specific block number.\"},\"initialize(address,uint256,((address,uint96)[]))\":{\"notice\":\"Initializes the contract with the given parameters.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies if the provided signature data is valid for the given data hash.\"},\"minimumWeight()\":{\"notice\":\"Returns the weight an operator must have to contribute to validating an AVS\"},\"quorum()\":{\"notice\":\"Retrieves the current stake quorum details.\"},\"registerOperatorWithSignature(address,(bytes,bytes32,uint256))\":{\"notice\":\"Registers a new operator using a provided signature\"},\"updateMinimumWeight(uint256,address[])\":{\"notice\":\"Updates the weight an operator must have to join the operator set\"},\"updateOperators(address[])\":{\"notice\":\"Updates the StakeRegistry's view of one or more operators' stakes adding a new entry in their history of stake checkpoints,\"},\"updateOperatorsForQuorum(address[][],bytes)\":{\"notice\":\"Updates the set of operators for the first quorum.\"},\"updateQuorumConfig(((address,uint96)[]),address[])\":{\"notice\":\"Updates the quorum configuration and the set of operators\"},\"updateStakeThreshold(uint256)\":{\"notice\":\"Sets a new cumulative threshold weight for message validation by operator set signatures.\"}},\"notice\":\"Manages operator registration and quorum updates for an AVS using ECDSA signatures.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistry.sol\":\"ECDSAStakeRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/\"]},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1271Upgradeable.sol\":{\"keccak256\":\"0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d\",\"dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/CheckpointsUpgradeable.sol\":{\"keccak256\":\"0x7fb4716864bc9693785f07ce15f325a44413ad5d2d5685852a9e6112927abd60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2abe805bc615c15daea179f3ff3e3b890f9c0d5ec18d0bb8fad03ab128157ee3\",\"dweb:/ipfs/Qma4UizH7DhTeDfGfkhFFKLnU6p8U9cmodTbgTdRzeFoXX\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xe8c62ca00ed2d0a4d9b7e3c4bf7d62c821618b2cdb3c844da91a1193986851bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a459d8907c5fe73d70b4c522e48127b13b9aaa29a223670e928a2a5e5e4c8f8\",\"dweb:/ipfs/QmcwBnMVrajEBgj2i1saNXnQ6ytHQdnpQF978E86EuhvtX\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol\":{\"keccak256\":\"0xb19a57535ad6c6d773f61c1e8f8cc190fa35e12bfadf3743092537c7695fd96a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79811c8c7aabd4fae5ff3021ae67688fc6f6a820f784676bf4b8e41c0c71577d\",\"dweb:/ipfs/QmSo7DdJSzx4U5xvLPnCLNn2SFBPin8dHxYnJrrwxEYQje\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70\",\"dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b\",\"dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe1626408822f552043f945d9aea18c5cbf878ef160da55e6f98706ed3a2acc07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://426f6dddc040f2040f48dd4236c4201a3c978b4417ec3b4bd1004f8a48b29aaa\",\"dweb:/ipfs/QmWgY46nZiw1KQYNYMrJDTz7S9Y4KhyUoM9zVD92Mkf51S\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xd8a64dbed03d3a5cdbefe1af75968f2dde07f973749c2ef5197bf7187c3e448c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://27ccc7c1fd9352e9f9b357c9063d255dc0ed9583f43db09f786ac7497d7846b8\",\"dweb:/ipfs/QmeJzuJkE9m2NUNwZSp4tGZEZmih1LeucePup8hzMVDRbG\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPaymentCoordinator.sol\":{\"keccak256\":\"0x399d4d6a99f8d9ca0a1f422e11d5c2c1784bd1c4118859c17cdb1fabfc0367e5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://abfa22018a78703c39c082b929ebf7b73484f8ef86c2e0264c212004f5fac8a0\",\"dweb:/ipfs/QmVqAexXLD7zbAmbrRHkmQaVjgSahnoY2XpzNvKrLLsyet\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xccd308b0996295c92058b70c3b83563c009c074cb6815329c5f35e1b1a0571f4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cd1050445ff7aeb588b3b037aab53e2d92c3abd4620e94dfc95aca870e71b821\",\"dweb:/ipfs/QmUC96Ctwn3KQr6VSqHPpAVJ5qEUSVnugaxiZ8gfXygW92\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x70d89b05c1c5f47b74a07fbb5a2c05e606fed494e749ea98a9915b7be73df377\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://db1d3bfaee69aef53c8b12b492a17584e6d1ac94610cb8b38aad33e1cdd81af7\",\"dweb:/ipfs/QmfVsMTj1hcf9fMEm5RzvtcBN4dMcAKFBgUUDsNDr5XFpq\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x9095fc29b96d102b10c02d44b3a6fbfa25593ef6ae4a810363ab885b9e6b0f71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0945132d482d56278edddb1d32209903c4d3839c87ba4317aadd97dc23610d0f\",\"dweb:/ipfs/QmVuM2aLRHxitx4rPx3GTYTBCVNcjYn6sHBRr1biUjLBP5\"]},\"lib/eigenlayer-middleware/src/interfaces/IECDSAStakeRegistryEventsAndErrors.sol\":{\"keccak256\":\"0x1efbf9f8c85ac67710ed47b1952cebea79226b93846f02a7e939b4d6f45ec883\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be810995472d5c3694dd83d3ce81f75d2719b1efd3df2c893a82c788ff6998cd\",\"dweb:/ipfs/QmXkKu9v5sDsRQWv7uR6o3XAH8PR76CgAfstPdFb6BVrKK\"]},\"lib/eigenlayer-middleware/src/interfaces/IServiceManager.sol\":{\"keccak256\":\"0xde4d88891f393ef6f3fefabd71a5b3d1305c7373f9e33a13ad30683c1d8c63a5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fbab45eee5148f1764396a76a427cbec1dff1854ee4a2ecf7e47acf129f4797d\",\"dweb:/ipfs/Qmc2yBePJYJMwmXPryAodK2MmBjJx2xYa3Na4pWNUwc3rJ\"]},\"lib/eigenlayer-middleware/src/interfaces/IServiceManagerUI.sol\":{\"keccak256\":\"0x365761699b4a5b7360ee6c75f12606eefc4b0394754c8b8e1e1eefec0cba7ffb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ac14ada180b66cbbc5f9de0d6b4bb87b5946d2a9569ae88f2f62aaca47e879a8\",\"dweb:/ipfs/QmcN9xKYF24naNWc6cYah9suz5gJSYE9nPj9eZFWnP35VX\"]},\"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistry.sol\":{\"keccak256\":\"0xdc37c3c238575fa7620db775565eb573a56293c169a3e146ec66d531cb8e39ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b962f999f89093b41f1e0fc4b8e2a0c7c2c69e8a5c370dc521b55d9b64e93f6\",\"dweb:/ipfs/QmNyB4SgzyKkqGK1tnMscm2X12XZcUmyr99KntJbNRtyLR\"]},\"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistryStorage.sol\":{\"keccak256\":\"0x1381e86d83925969b464f00cc70cbcd52b72a4abb1a54b27b2a48ebe989ecbf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce671e90dbf8a4279de587f02566f3430c757b610961c81e2f1c806d6bc8d1cf\",\"dweb:/ipfs/QmaDzRgKRg6xeLy7goFF5PkkhwiMuVRSsRmkFCpWc9dq6A\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IDelegationManager",
                            "name": "_delegationManager",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientSignedStake"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientWeight"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidLength"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidQuorum"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidSignature"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidSignedWeight"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidThreshold"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "LengthMismatch"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MustUpdateAllOperators"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotSorted"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "OperatorAlreadyRegistered"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "OperatorNotRegistered"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint8",
                            "name": "version",
                            "type": "uint8",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Initialized",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_old",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "_new",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MinimumWeightUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "_avs",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OperatorDeregistered",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "_avs",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OperatorRegistered",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "oldWeight",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newWeight",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "OperatorWeightUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OwnershipTransferred",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Quorum",
                            "name": "_old",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct StrategyParams[]",
                                    "name": "strategies",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "contract IStrategy",
                                            "name": "strategy",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "uint96",
                                            "name": "multiplier",
                                            "type": "uint96"
                                        }
                                    ]
                                }
                            ],
                            "indexed": false
                        },
                        {
                            "internalType": "struct Quorum",
                            "name": "_new",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct StrategyParams[]",
                                    "name": "strategies",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "contract IStrategy",
                                            "name": "strategy",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "uint96",
                                            "name": "multiplier",
                                            "type": "uint96"
                                        }
                                    ]
                                }
                            ],
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "QuorumUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_thresholdWeight",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ThresholdWeightUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "oldTotalWeight",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newTotalWeight",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TotalWeightUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "oldMinimumWeight",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newMinimumWeight",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "UpdateMinimumWeight",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "deregisterOperator"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getLastCheckpointOperatorWeight",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getLastCheckpointThresholdWeight",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "_blockNumber",
                            "type": "uint32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getLastCheckpointThresholdWeightAtBlock",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getLastCheckpointTotalWeight",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "_blockNumber",
                            "type": "uint32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getLastCheckpointTotalWeightAtBlock",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getOperatorWeight",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_operator",
                            "type": "address"
                        },
                        {
                            "internalType": "uint32",
                            "name": "_blockNumber",
                            "type": "uint32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getOperatorWeightAtBlock",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_serviceManager",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_thresholdWeight",
                            "type": "uint256"
                        },
                        {
                            "internalType": "struct Quorum",
                            "name": "_quorum",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct StrategyParams[]",
                                    "name": "strategies",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "contract IStrategy",
                                            "name": "strategy",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "uint96",
                                            "name": "multiplier",
                                            "type": "uint96"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initialize"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_dataHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes",
                            "name": "_signatureData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isValidSignature",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "minimumWeight",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "operatorRegistered",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "quorum",
                    "outputs": [
                        {
                            "internalType": "struct Quorum",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct StrategyParams[]",
                                    "name": "strategies",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "contract IStrategy",
                                            "name": "strategy",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "uint96",
                                            "name": "multiplier",
                                            "type": "uint96"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_operator",
                            "type": "address"
                        },
                        {
                            "internalType": "struct ISignatureUtils.SignatureWithSaltAndExpiry",
                            "name": "_operatorSignature",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes",
                                    "name": "signature",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "expiry",
                                    "type": "uint256"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "registerOperatorWithSignature"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "renounceOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_newMinimumWeight",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address[]",
                            "name": "_operators",
                            "type": "address[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateMinimumWeight"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address[]",
                            "name": "_operators",
                            "type": "address[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateOperators"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address[][]",
                            "name": "operatorsPerQuorum",
                            "type": "address[][]"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateOperatorsForQuorum"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Quorum",
                            "name": "_quorum",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct StrategyParams[]",
                                    "name": "strategies",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "contract IStrategy",
                                            "name": "strategy",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "uint96",
                                            "name": "multiplier",
                                            "type": "uint96"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "internalType": "address[]",
                            "name": "_operators",
                            "type": "address[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateQuorumConfig"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_thresholdWeight",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateStakeThreshold"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "constructor": {
                        "details": "Constructor to create ECDSAStakeRegistry.",
                        "params": {
                            "_delegationManager": "Address of the DelegationManager contract that this registry interacts with."
                        }
                    },
                    "getLastCheckpointOperatorWeight(address)": {
                        "params": {
                            "_operator": "The address of the operator."
                        },
                        "returns": {
                            "_0": "uint256 - The latest weight of the operator."
                        }
                    },
                    "getLastCheckpointThresholdWeight()": {
                        "returns": {
                            "_0": "uint256 - The latest threshold weight."
                        }
                    },
                    "getLastCheckpointThresholdWeightAtBlock(uint32)": {
                        "params": {
                            "_blockNumber": "The block number to get the threshold weight for the quorum"
                        },
                        "returns": {
                            "_0": "uint256 - The threshold weight the given block."
                        }
                    },
                    "getLastCheckpointTotalWeight()": {
                        "returns": {
                            "_0": "uint256 - The latest total weight."
                        }
                    },
                    "getLastCheckpointTotalWeightAtBlock(uint32)": {
                        "params": {
                            "_blockNumber": "The block number to get the total weight for the quorum"
                        },
                        "returns": {
                            "_0": "uint256 - The total weight at the given block."
                        }
                    },
                    "getOperatorWeight(address)": {
                        "params": {
                            "_operator": "The address of the operator."
                        },
                        "returns": {
                            "_0": "uint256 - The current weight of the operator; returns 0 if below the threshold."
                        }
                    },
                    "getOperatorWeightAtBlock(address,uint32)": {
                        "params": {
                            "_blockNumber": "The block number to get the operator weight for the quorum",
                            "_operator": "The address of the operator."
                        },
                        "returns": {
                            "_0": "uint256 - The weight of the operator at the given block."
                        }
                    },
                    "initialize(address,uint256,((address,uint96)[]))": {
                        "params": {
                            "_quorum": "The quorum struct containing the details of the quorum thresholds.",
                            "_serviceManager": "The address of the service manager.",
                            "_thresholdWeight": "The threshold weight in basis points."
                        }
                    },
                    "isValidSignature(bytes32,bytes)": {
                        "params": {
                            "_dataHash": "The hash of the data that was signed.",
                            "_signatureData": "Encoded signature data consisting of an array of signers, an array of signatures, and a reference block number."
                        },
                        "returns": {
                            "_0": "The function selector that indicates the signature is valid according to ERC1271 standard."
                        }
                    },
                    "owner()": {
                        "details": "Returns the address of the current owner."
                    },
                    "quorum()": {
                        "returns": {
                            "_0": "Quorum - The current quorum of strategies and weights"
                        }
                    },
                    "registerOperatorWithSignature(address,(bytes,bytes32,uint256))": {
                        "params": {
                            "_operatorSignature": "Contains the operator's signature, salt, and expiry"
                        }
                    },
                    "renounceOwnership()": {
                        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
                    },
                    "transferOwnership(address)": {
                        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
                    },
                    "updateMinimumWeight(uint256,address[])": {
                        "details": "Access controlled to the contract owner",
                        "params": {
                            "_newMinimumWeight": "The new weight an operator must have to join the operator set"
                        }
                    },
                    "updateOperators(address[])": {
                        "details": "Queries stakes from the Eigenlayer core DelegationManager contract",
                        "params": {
                            "_operators": "A list of operator addresses to update"
                        }
                    },
                    "updateOperatorsForQuorum(address[][],bytes)": {
                        "details": "This interface maintains compatibility with avs-sync which handles multiquorums while this registry has a single quorum",
                        "params": {
                            "operatorsPerQuorum": "An array of operator address arrays, one for each quorum."
                        }
                    },
                    "updateQuorumConfig(((address,uint96)[]),address[])": {
                        "details": "Only callable by the contract owner. It first updates the quorum configuration and then updates the list of operators.",
                        "params": {
                            "_operators": "The list of operator addresses to update stakes for",
                            "_quorum": "The new quorum configuration, including strategies and their new weights"
                        }
                    },
                    "updateStakeThreshold(uint256)": {
                        "details": "This function can only be invoked by the owner of the contract. It delegates the update to an internal function `_updateStakeThreshold`.",
                        "params": {
                            "_thresholdWeight": "The updated threshold weight required to validate a message. This is the cumulative weight that must be met or exceeded by the sum of the stakes of the signatories for a message to be deemed valid."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "deregisterOperator()": {
                        "notice": "Deregisters an existing operator"
                    },
                    "getLastCheckpointOperatorWeight(address)": {
                        "notice": "Retrieves the last recorded weight for a given operator."
                    },
                    "getLastCheckpointThresholdWeight()": {
                        "notice": "Retrieves the last recorded threshold weight"
                    },
                    "getLastCheckpointThresholdWeightAtBlock(uint32)": {
                        "notice": "Retrieves the threshold weight at a specific block number."
                    },
                    "getLastCheckpointTotalWeight()": {
                        "notice": "Retrieves the last recorded total weight across all operators."
                    },
                    "getLastCheckpointTotalWeightAtBlock(uint32)": {
                        "notice": "Retrieves the total weight at a specific block number."
                    },
                    "getOperatorWeight(address)": {
                        "notice": "Calculates the current weight of an operator based on their delegated stake in the strategies considered in the quorum"
                    },
                    "getOperatorWeightAtBlock(address,uint32)": {
                        "notice": "Retrieves the operator's weight at a specific block number."
                    },
                    "initialize(address,uint256,((address,uint96)[]))": {
                        "notice": "Initializes the contract with the given parameters."
                    },
                    "isValidSignature(bytes32,bytes)": {
                        "notice": "Verifies if the provided signature data is valid for the given data hash."
                    },
                    "minimumWeight()": {
                        "notice": "Returns the weight an operator must have to contribute to validating an AVS"
                    },
                    "quorum()": {
                        "notice": "Retrieves the current stake quorum details."
                    },
                    "registerOperatorWithSignature(address,(bytes,bytes32,uint256))": {
                        "notice": "Registers a new operator using a provided signature"
                    },
                    "updateMinimumWeight(uint256,address[])": {
                        "notice": "Updates the weight an operator must have to join the operator set"
                    },
                    "updateOperators(address[])": {
                        "notice": "Updates the StakeRegistry's view of one or more operators' stakes adding a new entry in their history of stake checkpoints,"
                    },
                    "updateOperatorsForQuorum(address[][],bytes)": {
                        "notice": "Updates the set of operators for the first quorum."
                    },
                    "updateQuorumConfig(((address,uint96)[]),address[])": {
                        "notice": "Updates the quorum configuration and the set of operators"
                    },
                    "updateStakeThreshold(uint256)": {
                        "notice": "Sets a new cumulative threshold weight for message validation by operator set signatures."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@eigenlayer-middleware/=lib/eigenlayer-middleware/",
                "@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/",
                "@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/",
                "@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/",
                "@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/",
                "@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/",
                "@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/",
                "ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/",
                "eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/",
                "eigenlayer-middleware/=lib/eigenlayer-middleware/",
                "erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/",
                "openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistry.sol": "ECDSAStakeRegistry"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
                "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
                "urls": [
                    "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
                    "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1271Upgradeable.sol": {
                "keccak256": "0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0",
                "urls": [
                    "bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d",
                    "dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
                "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
                "urls": [
                    "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
                    "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
                "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
                "urls": [
                    "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
                    "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/CheckpointsUpgradeable.sol": {
                "keccak256": "0x7fb4716864bc9693785f07ce15f325a44413ad5d2d5685852a9e6112927abd60",
                "urls": [
                    "bzz-raw://2abe805bc615c15daea179f3ff3e3b890f9c0d5ec18d0bb8fad03ab128157ee3",
                    "dweb:/ipfs/Qma4UizH7DhTeDfGfkhFFKLnU6p8U9cmodTbgTdRzeFoXX"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
                "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
                "urls": [
                    "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
                    "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
                "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
                "urls": [
                    "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
                    "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
                "keccak256": "0xe8c62ca00ed2d0a4d9b7e3c4bf7d62c821618b2cdb3c844da91a1193986851bf",
                "urls": [
                    "bzz-raw://2a459d8907c5fe73d70b4c522e48127b13b9aaa29a223670e928a2a5e5e4c8f8",
                    "dweb:/ipfs/QmcwBnMVrajEBgj2i1saNXnQ6ytHQdnpQF978E86EuhvtX"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol": {
                "keccak256": "0xb19a57535ad6c6d773f61c1e8f8cc190fa35e12bfadf3743092537c7695fd96a",
                "urls": [
                    "bzz-raw://79811c8c7aabd4fae5ff3021ae67688fc6f6a820f784676bf4b8e41c0c71577d",
                    "dweb:/ipfs/QmSo7DdJSzx4U5xvLPnCLNn2SFBPin8dHxYnJrrwxEYQje"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
                "keccak256": "0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a",
                "urls": [
                    "bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70",
                    "dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol": {
                "keccak256": "0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834",
                "urls": [
                    "bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b",
                    "dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
                "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
                "urls": [
                    "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
                    "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
                "urls": [
                    "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
                    "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
                "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
                "urls": [
                    "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
                    "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
                "keccak256": "0xe1626408822f552043f945d9aea18c5cbf878ef160da55e6f98706ed3a2acc07",
                "urls": [
                    "bzz-raw://426f6dddc040f2040f48dd4236c4201a3c978b4417ec3b4bd1004f8a48b29aaa",
                    "dweb:/ipfs/QmWgY46nZiw1KQYNYMrJDTz7S9Y4KhyUoM9zVD92Mkf51S"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
                "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
                "urls": [
                    "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
                    "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
                ],
                "license": "CC0-1.0"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
                "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
                "urls": [
                    "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
                    "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
                "keccak256": "0xd8a64dbed03d3a5cdbefe1af75968f2dde07f973749c2ef5197bf7187c3e448c",
                "urls": [
                    "bzz-raw://27ccc7c1fd9352e9f9b357c9063d255dc0ed9583f43db09f786ac7497d7846b8",
                    "dweb:/ipfs/QmeJzuJkE9m2NUNwZSp4tGZEZmih1LeucePup8hzMVDRbG"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
                "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
                "urls": [
                    "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
                    "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
                "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
                "urls": [
                    "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
                    "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPaymentCoordinator.sol": {
                "keccak256": "0x399d4d6a99f8d9ca0a1f422e11d5c2c1784bd1c4118859c17cdb1fabfc0367e5",
                "urls": [
                    "bzz-raw://abfa22018a78703c39c082b929ebf7b73484f8ef86c2e0264c212004f5fac8a0",
                    "dweb:/ipfs/QmVqAexXLD7zbAmbrRHkmQaVjgSahnoY2XpzNvKrLLsyet"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
                "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
                "urls": [
                    "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
                    "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
                "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
                "urls": [
                    "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
                    "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
                "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
                "urls": [
                    "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
                    "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
                "keccak256": "0xccd308b0996295c92058b70c3b83563c009c074cb6815329c5f35e1b1a0571f4",
                "urls": [
                    "bzz-raw://cd1050445ff7aeb588b3b037aab53e2d92c3abd4620e94dfc95aca870e71b821",
                    "dweb:/ipfs/QmUC96Ctwn3KQr6VSqHPpAVJ5qEUSVnugaxiZ8gfXygW92"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
                "keccak256": "0x70d89b05c1c5f47b74a07fbb5a2c05e606fed494e749ea98a9915b7be73df377",
                "urls": [
                    "bzz-raw://db1d3bfaee69aef53c8b12b492a17584e6d1ac94610cb8b38aad33e1cdd81af7",
                    "dweb:/ipfs/QmfVsMTj1hcf9fMEm5RzvtcBN4dMcAKFBgUUDsNDr5XFpq"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
                "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
                "urls": [
                    "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
                    "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
                "keccak256": "0x9095fc29b96d102b10c02d44b3a6fbfa25593ef6ae4a810363ab885b9e6b0f71",
                "urls": [
                    "bzz-raw://0945132d482d56278edddb1d32209903c4d3839c87ba4317aadd97dc23610d0f",
                    "dweb:/ipfs/QmVuM2aLRHxitx4rPx3GTYTBCVNcjYn6sHBRr1biUjLBP5"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/src/interfaces/IECDSAStakeRegistryEventsAndErrors.sol": {
                "keccak256": "0x1efbf9f8c85ac67710ed47b1952cebea79226b93846f02a7e939b4d6f45ec883",
                "urls": [
                    "bzz-raw://be810995472d5c3694dd83d3ce81f75d2719b1efd3df2c893a82c788ff6998cd",
                    "dweb:/ipfs/QmXkKu9v5sDsRQWv7uR6o3XAH8PR76CgAfstPdFb6BVrKK"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/src/interfaces/IServiceManager.sol": {
                "keccak256": "0xde4d88891f393ef6f3fefabd71a5b3d1305c7373f9e33a13ad30683c1d8c63a5",
                "urls": [
                    "bzz-raw://fbab45eee5148f1764396a76a427cbec1dff1854ee4a2ecf7e47acf129f4797d",
                    "dweb:/ipfs/Qmc2yBePJYJMwmXPryAodK2MmBjJx2xYa3Na4pWNUwc3rJ"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/src/interfaces/IServiceManagerUI.sol": {
                "keccak256": "0x365761699b4a5b7360ee6c75f12606eefc4b0394754c8b8e1e1eefec0cba7ffb",
                "urls": [
                    "bzz-raw://ac14ada180b66cbbc5f9de0d6b4bb87b5946d2a9569ae88f2f62aaca47e879a8",
                    "dweb:/ipfs/QmcN9xKYF24naNWc6cYah9suz5gJSYE9nPj9eZFWnP35VX"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistry.sol": {
                "keccak256": "0xdc37c3c238575fa7620db775565eb573a56293c169a3e146ec66d531cb8e39ee",
                "urls": [
                    "bzz-raw://0b962f999f89093b41f1e0fc4b8e2a0c7c2c69e8a5c370dc521b55d9b64e93f6",
                    "dweb:/ipfs/QmNyB4SgzyKkqGK1tnMscm2X12XZcUmyr99KntJbNRtyLR"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistryStorage.sol": {
                "keccak256": "0x1381e86d83925969b464f00cc70cbcd52b72a4abb1a54b27b2a48ebe989ecbf5",
                "urls": [
                    "bzz-raw://ce671e90dbf8a4279de587f02566f3430c757b610961c81e2f1c806d6bc8d1cf",
                    "dweb:/ipfs/QmaDzRgKRg6xeLy7goFF5PkkhwiMuVRSsRmkFCpWc9dq6A"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 67
}