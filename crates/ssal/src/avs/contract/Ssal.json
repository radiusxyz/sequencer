{
    "abi": [
        {
            "type": "function",
            "name": "deregisterSequencer",
            "inputs": [
                {
                    "name": "clusterID",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_sequencer",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getSequencers",
            "inputs": [
                {
                    "name": "clusterID",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address[30]",
                    "internalType": "address[30]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "initializeCluster",
            "inputs": [
                {
                    "name": "_sequencer",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_rollup",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "registerSequencer",
            "inputs": [
                {
                    "name": "clusterID",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_sequencer",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "InitializeClusterEvent",
            "inputs": [
                {
                    "name": "clusterID",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "0x6080604052348015600f57600080fd5b506104848061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806342d8a7471461005157806366f439c61461007a578063c27ac50c1461008f578063fecca43a146100a2575b600080fd5b61006461005f366004610372565b6100b5565b604051610071919061038b565b60405180910390f35b61008d6100883660046103e2565b61010f565b005b61008d61009d36600461040e565b6101a7565b61008d6100b03660046103e2565b61026b565b6100bd610353565b6000828152602081905260409081902081516103c08101909252600301601e8282826020028201915b81546001600160a01b031681526001909101906020018083116100e65750505050509050919050565b60005b601e8110156101a25760008381526020819052604090206001600160a01b0383169060030182601e811061014857610148610438565b01546001600160a01b03160361019a57600083815260208190526040812060030182601e811061017a5761017a610438565b0180546001600160a01b0319166001600160a01b03929092169190911790555b600101610112565b505050565b6040516bffffffffffffffffffffffff19606083901b1660208201524340603482015260009060540160408051601f19818403018152828252805160209182012060008181528083529290922080546001600160a01b0319908116331782556001820180546001600160a01b038981169184169190911790915560039092018054928916929091169190911790558183529092507faf87f9a392f32e3cd8ff54ac5c459aabcbcb2a7a680c61b9e2b2a442f6bf237a910160405180910390a1505050565b601e60005b601e8110156102fd5760008481526020819052604090206001600160a01b0384169060030182601e81106102a6576102a6610438565b01546001600160a01b0316036102bb57600080fd5b600084815260208190526040812060030182601e81106102dd576102dd610438565b01546001600160a01b0316036102f5578091506102fd565b600101610270565b5080601e0361030b57600080fd5b6000838152602081905260409020829060030182601e811061032f5761032f610438565b0180546001600160a01b0319166001600160a01b0392909216919091179055505050565b604051806103c00160405280601e906020820280368337509192915050565b60006020828403121561038457600080fd5b5035919050565b6103c08101818360005b601e8110156103bd5781516001600160a01b0316835260209283019290910190600101610395565b50505092915050565b80356001600160a01b03811681146103dd57600080fd5b919050565b600080604083850312156103f557600080fd5b82359150610405602084016103c6565b90509250929050565b6000806040838503121561042157600080fd5b61042a836103c6565b9150610405602084016103c6565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220926dd2135e41cade5acd2433b3b9719408b014f24167e282b88928a4a7cd97c464736f6c634300081a0033",
        "sourceMap": "141:1735:100:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806342d8a7471461005157806366f439c61461007a578063c27ac50c1461008f578063fecca43a146100a2575b600080fd5b61006461005f366004610372565b6100b5565b604051610071919061038b565b60405180910390f35b61008d6100883660046103e2565b61010f565b005b61008d61009d36600461040e565b6101a7565b61008d6100b03660046103e2565b61026b565b6100bd610353565b6000828152602081905260409081902081516103c08101909252600301601e8282826020028201915b81546001600160a01b031681526001909101906020018083116100e65750505050509050919050565b60005b601e8110156101a25760008381526020819052604090206001600160a01b0383169060030182601e811061014857610148610438565b01546001600160a01b03160361019a57600083815260208190526040812060030182601e811061017a5761017a610438565b0180546001600160a01b0319166001600160a01b03929092169190911790555b600101610112565b505050565b6040516bffffffffffffffffffffffff19606083901b1660208201524340603482015260009060540160408051601f19818403018152828252805160209182012060008181528083529290922080546001600160a01b0319908116331782556001820180546001600160a01b038981169184169190911790915560039092018054928916929091169190911790558183529092507faf87f9a392f32e3cd8ff54ac5c459aabcbcb2a7a680c61b9e2b2a442f6bf237a910160405180910390a1505050565b601e60005b601e8110156102fd5760008481526020819052604090206001600160a01b0384169060030182601e81106102a6576102a6610438565b01546001600160a01b0316036102bb57600080fd5b600084815260208190526040812060030182601e81106102dd576102dd610438565b01546001600160a01b0316036102f5578091506102fd565b600101610270565b5080601e0361030b57600080fd5b6000838152602081905260409020829060030182601e811061032f5761032f610438565b0180546001600160a01b0319166001600160a01b0392909216919091179055505050565b604051806103c00160405280601e906020820280368337509192915050565b60006020828403121561038457600080fd5b5035919050565b6103c08101818360005b601e8110156103bd5781516001600160a01b0316835260209283019290910190600101610395565b50505092915050565b80356001600160a01b03811681146103dd57600080fd5b919050565b600080604083850312156103f557600080fd5b82359150610405602084016103c6565b90509250929050565b6000806040838503121561042157600080fd5b61042a836103c6565b9150610405602084016103c6565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220926dd2135e41cade5acd2433b3b9719408b014f24167e282b88928a4a7cd97c464736f6c634300081a0033",
        "sourceMap": "141:1735:100:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;407:144;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1404:260;;;;;;:::i;:::-;;:::i;:::-;;557:376;;;;;;:::i;:::-;;:::i;939:459::-;;;;;;:::i;:::-;;:::i;407:144::-;470:18;;:::i;:::-;514:8;:19;;;;;;;;;;;;507:37;;;;;;;;514:30;;507:37;;514:30;507:37;;;;;;;;;-1:-1:-1;;;;;507:37:100;;;;;;;;;;;;;;;;;;;;;;407:144;;;:::o;1404:260::-;1494:6;1489:169;1510:2;1506:1;:6;1489:169;;;1536:8;:19;;;;;;;;;;-1:-1:-1;;;;;1536:47:100;;;:30;;1567:1;1536:33;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1536:33:100;:47;1533:114;;1645:1;1601:19;;;;;;;;;;:30;;1632:1;1601:33;;;;;;;:::i;:::-;;:46;;-1:-1:-1;;;;;;1601:46:100;-1:-1:-1;;;;;1601:46:100;;;;;;;;;;1533:114;1514:3;;1489:169;;;;1404:260;;:::o;557:376::-;668:50;;-1:-1:-1;;1807:2:102;1803:15;;;1799:53;668:50:100;;;1787:66:102;704:12:100;694:23;1869:12:102;;;1862:28;638:17:100;;1906:12:102;;668:50:100;;;-1:-1:-1;;668:50:100;;;;;;;;;658:61;;668:50;658:61;;;;729:8;:19;;;;;;;;;;:38;;-1:-1:-1;;;;;;729:38:100;;;757:10;729:38;;;-1:-1:-1;777:26:100;;:36;;-1:-1:-1;;;;;777:36:100;;;;;;;;;;;;;823:30;;;;:46;;;;;;;;;;;;;;;2075:25:102;;;658:61:100;;-1:-1:-1;893:33:100;;2048:18:102;893:33:100;;;;;;;628:305;557:376;;:::o;939:459::-;1035:2;1022:10;1047:245;1068:2;1064:1;:6;1047:245;;;1094:8;:19;;;;;;;;;;-1:-1:-1;;;;;1094:47:100;;;:30;;1125:1;1094:33;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1094:33:100;:47;1091:60;;1143:8;;;1091:60;1213:1;1168:19;;;;;;;;;;:30;;1199:1;1168:33;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1168:33:100;:47;1165:117;;1243:1;1235:9;;1262:5;;1165:117;1072:3;;1047:245;;;;1305:5;1314:2;1305:11;1301:90;;1318:8;;;1301:90;1341:8;:19;;;;;;;;;;1381:10;;1341:30;;1372:5;1341:37;;;;;;;:::i;:::-;;:50;;-1:-1:-1;;;;;;1341:50:100;-1:-1:-1;;;;;1341:50:100;;;;;;;;;;-1:-1:-1;;;939:459:100:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:226:102:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:102;;14:226;-1:-1:-1;14:226:102:o;245:500::-;427:3;412:19;;416:9;508:6;385:4;542:197;556:4;553:1;550:11;542:197;;;619:13;;-1:-1:-1;;;;;615:39:102;603:52;;684:4;675:14;;;;712:17;;;;651:1;569:9;542:197;;;546:3;;;245:500;;;;:::o;750:173::-;818:20;;-1:-1:-1;;;;;867:31:102;;857:42;;847:70;;913:1;910;903:12;847:70;750:173;;;:::o;928:300::-;996:6;1004;1057:2;1045:9;1036:7;1032:23;1028:32;1025:52;;;1073:1;1070;1063:12;1025:52;1118:23;;;-1:-1:-1;1184:38:102;1218:2;1203:18;;1184:38;:::i;:::-;1174:48;;928:300;;;;;:::o;1233:260::-;1301:6;1309;1362:2;1350:9;1341:7;1337:23;1333:32;1330:52;;;1378:1;1375;1368:12;1330:52;1401:29;1420:9;1401:29;:::i;:::-;1391:39;;1449:38;1483:2;1472:9;1468:18;1449:38;:::i;1498:127::-;1559:10;1554:3;1550:20;1547:1;1540:31;1590:4;1587:1;1580:15;1614:4;1611:1;1604:15",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "deregisterSequencer(bytes32,address)": "66f439c6",
        "getSequencers(bytes32)": "42d8a747",
        "initializeCluster(address,address)": "c27ac50c",
        "registerSequencer(bytes32,address)": "fecca43a"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"clusterID\",\"type\":\"bytes32\"}],\"name\":\"InitializeClusterEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"clusterID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_sequencer\",\"type\":\"address\"}],\"name\":\"deregisterSequencer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"clusterID\",\"type\":\"bytes32\"}],\"name\":\"getSequencers\",\"outputs\":[{\"internalType\":\"address[30]\",\"name\":\"\",\"type\":\"address[30]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sequencer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rollup\",\"type\":\"address\"}],\"name\":\"initializeCluster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"clusterID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_sequencer\",\"type\":\"address\"}],\"name\":\"registerSequencer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Ssal.sol\":\"Ssal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/\"]},\"sources\":{\"src/Ssal.sol\":{\"keccak256\":\"0x41f0ccaec645cfad378f642ce93450acc24a1e85fb4a3933251b5c17b5cfeb09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://51842903735d594decfe4b7caf09c39c920c4241bb0633f3be35942973015767\",\"dweb:/ipfs/QmUmByBoW7jr5nvytztR7gWC2G9rHHKQBBPvDwaLk8UNmo\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "clusterID",
                            "type": "bytes32",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "InitializeClusterEvent",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "clusterID",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "_sequencer",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "deregisterSequencer"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "clusterID",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getSequencers",
                    "outputs": [
                        {
                            "internalType": "address[30]",
                            "name": "",
                            "type": "address[30]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_sequencer",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_rollup",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initializeCluster"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "clusterID",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "_sequencer",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "registerSequencer"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {},
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@eigenlayer-middleware/=lib/eigenlayer-middleware/",
                "@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/",
                "@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/",
                "@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/",
                "@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/",
                "@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/",
                "@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/",
                "ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/",
                "eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/",
                "eigenlayer-middleware/=lib/eigenlayer-middleware/",
                "erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/",
                "openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/Ssal.sol": "Ssal"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "src/Ssal.sol": {
                "keccak256": "0x41f0ccaec645cfad378f642ce93450acc24a1e85fb4a3933251b5c17b5cfeb09",
                "urls": [
                    "bzz-raw://51842903735d594decfe4b7caf09c39c920c4241bb0633f3be35942973015767",
                    "dweb:/ipfs/QmUmByBoW7jr5nvytztR7gWC2G9rHHKQBBPvDwaLk8UNmo"
                ],
                "license": "UNLICENSED"
            }
        },
        "version": 1
    },
    "id": 100
}