{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_strategyManager",
                    "type": "address",
                    "internalType": "contract IStrategyManager"
                },
                {
                    "name": "_slasher",
                    "type": "address",
                    "internalType": "contract ISlasher"
                },
                {
                    "name": "_eigenPodManager",
                    "type": "address",
                    "internalType": "contract IEigenPodManager"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "DELEGATION_APPROVAL_TYPEHASH",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "DOMAIN_TYPEHASH",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "MAX_WITHDRAWAL_DELAY_BLOCKS",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "STAKER_DELEGATION_TYPEHASH",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "beaconChainETHStrategy",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IStrategy"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "calculateCurrentStakerDelegationDigestHash",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "expiry",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "calculateDelegationApprovalDigestHash",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_delegationApprover",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "approverSalt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "expiry",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "calculateStakerDelegationDigestHash",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_stakerNonce",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "expiry",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "calculateWithdrawalRoot",
            "inputs": [
                {
                    "name": "withdrawal",
                    "type": "tuple",
                    "internalType": "struct IDelegationManager.Withdrawal",
                    "components": [
                        {
                            "name": "staker",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "delegatedTo",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "withdrawer",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "nonce",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "startBlock",
                            "type": "uint32",
                            "internalType": "uint32"
                        },
                        {
                            "name": "strategies",
                            "type": "address[]",
                            "internalType": "contract IStrategy[]"
                        },
                        {
                            "name": "shares",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "completeQueuedWithdrawal",
            "inputs": [
                {
                    "name": "withdrawal",
                    "type": "tuple",
                    "internalType": "struct IDelegationManager.Withdrawal",
                    "components": [
                        {
                            "name": "staker",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "delegatedTo",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "withdrawer",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "nonce",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "startBlock",
                            "type": "uint32",
                            "internalType": "uint32"
                        },
                        {
                            "name": "strategies",
                            "type": "address[]",
                            "internalType": "contract IStrategy[]"
                        },
                        {
                            "name": "shares",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        }
                    ]
                },
                {
                    "name": "tokens",
                    "type": "address[]",
                    "internalType": "contract IERC20[]"
                },
                {
                    "name": "middlewareTimesIndex",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "receiveAsTokens",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "completeQueuedWithdrawals",
            "inputs": [
                {
                    "name": "withdrawals",
                    "type": "tuple[]",
                    "internalType": "struct IDelegationManager.Withdrawal[]",
                    "components": [
                        {
                            "name": "staker",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "delegatedTo",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "withdrawer",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "nonce",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "startBlock",
                            "type": "uint32",
                            "internalType": "uint32"
                        },
                        {
                            "name": "strategies",
                            "type": "address[]",
                            "internalType": "contract IStrategy[]"
                        },
                        {
                            "name": "shares",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        }
                    ]
                },
                {
                    "name": "tokens",
                    "type": "address[][]",
                    "internalType": "contract IERC20[][]"
                },
                {
                    "name": "middlewareTimesIndexes",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "receiveAsTokens",
                    "type": "bool[]",
                    "internalType": "bool[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "cumulativeWithdrawalsQueued",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "decreaseDelegatedShares",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "strategy",
                    "type": "address",
                    "internalType": "contract IStrategy"
                },
                {
                    "name": "shares",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "delegateTo",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "approverSignatureAndExpiry",
                    "type": "tuple",
                    "internalType": "struct ISignatureUtils.SignatureWithExpiry",
                    "components": [
                        {
                            "name": "signature",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "expiry",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                },
                {
                    "name": "approverSalt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "delegateToBySignature",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "stakerSignatureAndExpiry",
                    "type": "tuple",
                    "internalType": "struct ISignatureUtils.SignatureWithExpiry",
                    "components": [
                        {
                            "name": "signature",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "expiry",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                },
                {
                    "name": "approverSignatureAndExpiry",
                    "type": "tuple",
                    "internalType": "struct ISignatureUtils.SignatureWithExpiry",
                    "components": [
                        {
                            "name": "signature",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "expiry",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                },
                {
                    "name": "approverSalt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "delegatedTo",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "delegationApprover",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "delegationApproverSaltIsSpent",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "domainSeparator",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "earningsReceiver",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "eigenPodManager",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IEigenPodManager"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getDelegatableShares",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address[]",
                    "internalType": "contract IStrategy[]"
                },
                {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getOperatorShares",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "strategies",
                    "type": "address[]",
                    "internalType": "contract IStrategy[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getWithdrawalDelay",
            "inputs": [
                {
                    "name": "strategies",
                    "type": "address[]",
                    "internalType": "contract IStrategy[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "increaseDelegatedShares",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "strategy",
                    "type": "address",
                    "internalType": "contract IStrategy"
                },
                {
                    "name": "shares",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "initialize",
            "inputs": [
                {
                    "name": "initialOwner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_pauserRegistry",
                    "type": "address",
                    "internalType": "contract IPauserRegistry"
                },
                {
                    "name": "initialPausedStatus",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_minWithdrawalDelayBlocks",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_strategies",
                    "type": "address[]",
                    "internalType": "contract IStrategy[]"
                },
                {
                    "name": "_withdrawalDelayBlocks",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isDelegated",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isOperator",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "migrateQueuedWithdrawals",
            "inputs": [
                {
                    "name": "withdrawalsToMigrate",
                    "type": "tuple[]",
                    "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]",
                    "components": [
                        {
                            "name": "strategies",
                            "type": "address[]",
                            "internalType": "contract IStrategy[]"
                        },
                        {
                            "name": "shares",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        },
                        {
                            "name": "staker",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "withdrawerAndNonce",
                            "type": "tuple",
                            "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
                            "components": [
                                {
                                    "name": "withdrawer",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "nonce",
                                    "type": "uint96",
                                    "internalType": "uint96"
                                }
                            ]
                        },
                        {
                            "name": "withdrawalStartBlock",
                            "type": "uint32",
                            "internalType": "uint32"
                        },
                        {
                            "name": "delegatedAddress",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "minWithdrawalDelayBlocks",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "modifyOperatorDetails",
            "inputs": [
                {
                    "name": "newOperatorDetails",
                    "type": "tuple",
                    "internalType": "struct IDelegationManager.OperatorDetails",
                    "components": [
                        {
                            "name": "earningsReceiver",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "delegationApprover",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "stakerOptOutWindowBlocks",
                            "type": "uint32",
                            "internalType": "uint32"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "operatorDetails",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IDelegationManager.OperatorDetails",
                    "components": [
                        {
                            "name": "earningsReceiver",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "delegationApprover",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "stakerOptOutWindowBlocks",
                            "type": "uint32",
                            "internalType": "uint32"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "operatorShares",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IStrategy"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "owner",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "pause",
            "inputs": [
                {
                    "name": "newPausedStatus",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "pauseAll",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "paused",
            "inputs": [
                {
                    "name": "index",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "paused",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "pauserRegistry",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IPauserRegistry"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "pendingWithdrawals",
            "inputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "queueWithdrawals",
            "inputs": [
                {
                    "name": "queuedWithdrawalParams",
                    "type": "tuple[]",
                    "internalType": "struct IDelegationManager.QueuedWithdrawalParams[]",
                    "components": [
                        {
                            "name": "strategies",
                            "type": "address[]",
                            "internalType": "contract IStrategy[]"
                        },
                        {
                            "name": "shares",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        },
                        {
                            "name": "withdrawer",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "registerAsOperator",
            "inputs": [
                {
                    "name": "registeringOperatorDetails",
                    "type": "tuple",
                    "internalType": "struct IDelegationManager.OperatorDetails",
                    "components": [
                        {
                            "name": "earningsReceiver",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "delegationApprover",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "stakerOptOutWindowBlocks",
                            "type": "uint32",
                            "internalType": "uint32"
                        }
                    ]
                },
                {
                    "name": "metadataURI",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "renounceOwnership",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setMinWithdrawalDelayBlocks",
            "inputs": [
                {
                    "name": "newMinWithdrawalDelayBlocks",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setPauserRegistry",
            "inputs": [
                {
                    "name": "newPauserRegistry",
                    "type": "address",
                    "internalType": "contract IPauserRegistry"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setStrategyWithdrawalDelayBlocks",
            "inputs": [
                {
                    "name": "strategies",
                    "type": "address[]",
                    "internalType": "contract IStrategy[]"
                },
                {
                    "name": "withdrawalDelayBlocks",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "slasher",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract ISlasher"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "stakerNonce",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "stakerOptOutWindowBlocks",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "strategyManager",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IStrategyManager"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "strategyWithdrawalDelayBlocks",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IStrategy"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "transferOwnership",
            "inputs": [
                {
                    "name": "newOwner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "undelegate",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "withdrawalRoots",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "unpause",
            "inputs": [
                {
                    "name": "newPausedStatus",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "updateOperatorMetadataURI",
            "inputs": [
                {
                    "name": "metadataURI",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Initialized",
            "inputs": [
                {
                    "name": "version",
                    "type": "uint8",
                    "indexed": false,
                    "internalType": "uint8"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MinWithdrawalDelayBlocksSet",
            "inputs": [
                {
                    "name": "previousValue",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newValue",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OperatorDetailsModified",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newOperatorDetails",
                    "type": "tuple",
                    "indexed": false,
                    "internalType": "struct IDelegationManager.OperatorDetails",
                    "components": [
                        {
                            "name": "earningsReceiver",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "delegationApprover",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "stakerOptOutWindowBlocks",
                            "type": "uint32",
                            "internalType": "uint32"
                        }
                    ]
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OperatorMetadataURIUpdated",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "metadataURI",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OperatorRegistered",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "operatorDetails",
                    "type": "tuple",
                    "indexed": false,
                    "internalType": "struct IDelegationManager.OperatorDetails",
                    "components": [
                        {
                            "name": "earningsReceiver",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "delegationApprover",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "stakerOptOutWindowBlocks",
                            "type": "uint32",
                            "internalType": "uint32"
                        }
                    ]
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OperatorSharesDecreased",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "staker",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "strategy",
                    "type": "address",
                    "indexed": false,
                    "internalType": "contract IStrategy"
                },
                {
                    "name": "shares",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OperatorSharesIncreased",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "staker",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "strategy",
                    "type": "address",
                    "indexed": false,
                    "internalType": "contract IStrategy"
                },
                {
                    "name": "shares",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OwnershipTransferred",
            "inputs": [
                {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Paused",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newPausedStatus",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "PauserRegistrySet",
            "inputs": [
                {
                    "name": "pauserRegistry",
                    "type": "address",
                    "indexed": false,
                    "internalType": "contract IPauserRegistry"
                },
                {
                    "name": "newPauserRegistry",
                    "type": "address",
                    "indexed": false,
                    "internalType": "contract IPauserRegistry"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "StakerDelegated",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "StakerForceUndelegated",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "StakerUndelegated",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "StrategyWithdrawalDelayBlocksSet",
            "inputs": [
                {
                    "name": "strategy",
                    "type": "address",
                    "indexed": false,
                    "internalType": "contract IStrategy"
                },
                {
                    "name": "previousValue",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newValue",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Unpaused",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newPausedStatus",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "WithdrawalCompleted",
            "inputs": [
                {
                    "name": "withdrawalRoot",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "WithdrawalMigrated",
            "inputs": [
                {
                    "name": "oldWithdrawalRoot",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                },
                {
                    "name": "newWithdrawalRoot",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "WithdrawalQueued",
            "inputs": [
                {
                    "name": "withdrawalRoot",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                },
                {
                    "name": "withdrawal",
                    "type": "tuple",
                    "indexed": false,
                    "internalType": "struct IDelegationManager.Withdrawal",
                    "components": [
                        {
                            "name": "staker",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "delegatedTo",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "withdrawer",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "nonce",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "startBlock",
                            "type": "uint32",
                            "internalType": "uint32"
                        },
                        {
                            "name": "strategies",
                            "type": "address[]",
                            "internalType": "contract IStrategy[]"
                        },
                        {
                            "name": "shares",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        }
                    ]
                }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "0x61010060405234801561001157600080fd5b5060405161616238038061616283398101604081905261003091610135565b6001600160a01b0380841660805280821660c052821660a05261005161005d565b50504660e05250610182565b600054610100900460ff16156100c95760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101561011b576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b038116811461013257600080fd5b50565b60008060006060848603121561014a57600080fd5b83516101558161011d565b60208501519093506101668161011d565b60408501519092506101778161011d565b809150509250925092565b60805160a05160c05160e051615f4561021d60003960006127480152600081816105e70152818161109d0152818161141901528181611de801528181612aa20152818161410001526145ec015260006107d701526000818161052f0152818161106b015281816113e70152818161170501528181611e7c01528181612b6f01528181612cf20152818161422601526146920152615f456000f3fe608060405234801561001057600080fd5b50600436106103785760003560e01c806360d7faed116101d3578063b7f06ebe11610104578063cf80873e116100a2578063f16172b01161007c578063f16172b01461097d578063f2fde38b14610990578063f698da25146109a3578063fabc1cbc146109ab57600080fd5b8063cf80873e14610936578063da8be86414610957578063eea9064b1461096a57600080fd5b8063c488375a116100de578063c488375a14610853578063c5e480db14610873578063c94b511114610919578063ca661c041461092c57600080fd5b8063b7f06ebe146107f9578063bb45fef21461081c578063c448feb81461084a57600080fd5b8063886f1195116101715780639104c3191161014b5780639104c3191461078457806399be81c81461079f578063a1788484146107b2578063b1344271146107d257600080fd5b8063886f1195146107405780638da5cb5b14610753578063900413471461076457600080fd5b80636d70f7ae116101ad5780636d70f7ae146106e7578063715018a6146106fa578063778e55f3146107025780637f5480711461072d57600080fd5b806360d7faed14610698578063635bbd10146106ab57806365da1264146106be57600080fd5b806329c77d4f116102ad5780634fc40b611161024b5780635ac86ab7116102255780635ac86ab71461062e5780635c975abb146106515780635cfe8d2c146106595780635f966f141461066c57600080fd5b80634fc40b6114610609578063595c6a6714610613578063597b36da1461061b57600080fd5b80633cdeb5e0116102875780633cdeb5e0146105695780633e28391d1461059857806343377382146105bb5780634665bcda146105e257600080fd5b806329c77d4f146104f7578063334043961461051757806339b70e381461052a57600080fd5b8063136439dd1161031a5780631bbce091116102f45780631bbce0911461049757806320606b70146104aa57806322bf40e4146104d157806328a573ae146104e457600080fd5b8063136439dd146104385780631522bf021461044b578063169283651461045e57600080fd5b80630dd8dd02116103565780630dd8dd02146103dd5780630f589e59146103fd57806310d67a2f14610412578063132d49671461042557600080fd5b80630449ca391461037d57806304a4f979146103a35780630b9f487a146103ca575b600080fd5b61039061038b366004614a9b565b6109be565b6040519081526020015b60405180910390f35b6103907f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad81565b6103906103d8366004614b01565b610a3d565b6103f06103eb366004614a9b565b610aff565b60405161039a9190614b5c565b61041061040b366004614bed565b610e5d565b005b610410610420366004614c40565b610fad565b610410610433366004614c64565b611060565b610410610446366004614ca5565b611117565b610410610459366004614cbe565b611256565b61039061046c366004614c40565b6001600160a01b0316600090815260996020526040902060010154600160a01b900463ffffffff1690565b6103906104a5366004614c64565b61126a565b6103907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6104106104df366004614d2d565b611298565b6104106104f2366004614c64565b6113dc565b610390610505366004614c40565b609b6020526000908152604090205481565b610410610525366004614dd8565b61148c565b6105517f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161039a565b610551610577366004614c40565b6001600160a01b039081166000908152609960205260409020600101541690565b6105ab6105a6366004614c40565b6115bf565b604051901515815260200161039a565b6103907f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b81565b6105517f000000000000000000000000000000000000000000000000000000000000000081565b6103906213c68081565b6104106115df565b610390610629366004615111565b6116a6565b6105ab61063c36600461514d565b606654600160ff9092169190911b9081161490565b606654610390565b6104106106673660046151c3565b6116d6565b61055161067a366004614c40565b6001600160a01b039081166000908152609960205260409020541690565b6104106106a6366004615333565b611981565b6104106106b9366004614ca5565b611a1a565b6105516106cc366004614c40565b609a602052600090815260409020546001600160a01b031681565b6105ab6106f5366004614c40565b611a2b565b610410611a4b565b6103906107103660046153c3565b609860209081526000928352604080842090915290825290205481565b61041061073b3660046154a7565b611a5f565b606554610551906001600160a01b031681565b6033546001600160a01b0316610551565b61077761077236600461553b565b611b64565b60405161039a91906155c6565b61055173beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b6104106107ad3660046155d9565b611c36565b6103906107c0366004614c40565b609f6020526000908152604090205481565b6105517f000000000000000000000000000000000000000000000000000000000000000081565b6105ab610807366004614ca5565b609e6020526000908152604090205460ff1681565b6105ab61082a36600461560e565b609c60209081526000928352604080842090915290825290205460ff1681565b610390609d5481565b610390610861366004614c40565b60a16020526000908152604090205481565b6108e3610881366004614c40565b6040805160608082018352600080835260208084018290529284018190526001600160a01b03948516815260998352839020835191820184528054851682526001015493841691810191909152600160a01b90920463ffffffff169082015290565b6040805182516001600160a01b039081168252602080850151909116908201529181015163ffffffff169082015260600161039a565b61039061092736600461563a565b611d08565b61039062034bc081565b610949610944366004614c40565b611dc1565b60405161039a9291906156bd565b6103f0610965366004614c40565b612178565b6104106109783660046156e2565b612631565b61041061098b36600461573b565b61263d565b61041061099e366004614c40565b6126ce565b610390612744565b6104106109b9366004614ca5565b612781565b609d54600090815b83811015610a3357600060a160008787858181106109e6576109e6615757565b90506020020160208101906109fb9190614c40565b6001600160a01b03166001600160a01b0316815260200190815260200160002054905082811115610a2a578092505b506001016109c6565b5090505b92915050565b604080517f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad6020808301919091526001600160a01b038681168385015288811660608401528716608083015260a0820185905260c08083018590528351808403909101815260e0909201909252805191012060009081610abb612744565b60405161190160f01b602082015260228101919091526042810183905260620160408051808303601f19018152919052805160209091012098975050505050505050565b606654606090600190600290811603610b335760405162461bcd60e51b8152600401610b2a9061576d565b60405180910390fd5b6000836001600160401b03811115610b4d57610b4d614e8b565b604051908082528060200260200182016040528015610b76578160200160208202803683370190505b50336000908152609a60205260408120549192506001600160a01b03909116905b85811015610e5257868682818110610bb157610bb1615757565b9050602002810190610bc391906157a4565b610bd19060208101906157c4565b9050878783818110610be557610be5615757565b9050602002810190610bf791906157a4565b610c0190806157c4565b905014610c765760405162461bcd60e51b815260206004820152603860248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a20696e707574206c656e677468206d69736d6174636800000000000000006064820152608401610b2a565b33878783818110610c8957610c89615757565b9050602002810190610c9b91906157a4565b610cac906060810190604001614c40565b6001600160a01b031614610d285760405162461bcd60e51b815260206004820152603c60248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a2077697468647261776572206d757374206265207374616b6572000000006064820152608401610b2a565b610e2d3383898985818110610d3f57610d3f615757565b9050602002810190610d5191906157a4565b610d62906060810190604001614c40565b8a8a86818110610d7457610d74615757565b9050602002810190610d8691906157a4565b610d9090806157c4565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508e92508d9150889050818110610dd657610dd6615757565b9050602002810190610de891906157a4565b610df69060208101906157c4565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506128dd92505050565b838281518110610e3f57610e3f615757565b6020908102919091010152600101610b97565b509095945050505050565b336000908152609960205260409020546001600160a01b031615610ef75760405162461bcd60e51b815260206004820152604560248201527f44656c65676174696f6e4d616e616765722e726567697374657241734f70657260448201527f61746f723a206f70657261746f722068617320616c72656164792072656769736064820152641d195c995960da1b608482015260a401610b2a565b610f013384612e9f565b604080518082019091526060815260006020820152610f23338083600061313a565b336001600160a01b03167f8e8485583a2310d41f7c82b9427d0bd49bad74bb9cff9d3402a29d8f9b28a0e285604051610f5c919061580d565b60405180910390a2336001600160a01b03167f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b67080908484604051610f9f929190615864565b60405180910390a250505050565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611000573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110249190615893565b6001600160a01b0316336001600160a01b0316146110545760405162461bcd60e51b8152600401610b2a906158b0565b61105d816134de565b50565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806110bf5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6110db5760405162461bcd60e51b8152600401610b2a906158fa565b6110e4836115bf565b15611112576001600160a01b038084166000908152609a602052604090205416611110818585856135d5565b505b505050565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa15801561115f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111839190615957565b61119f5760405162461bcd60e51b8152600401610b2a90615974565b606654818116146112185760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c69747900000000000000006064820152608401610b2a565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b61125e613650565b611110848484846136aa565b6001600160a01b0383166000908152609b602052604081205461128f85828686611d08565b95945050505050565b600054610100900460ff16158080156112b85750600054600160ff909116105b806112d25750303b1580156112d2575060005460ff166001145b6113355760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b2a565b6000805460ff191660011790558015611358576000805461ff0019166101001790555b61136288886138ca565b61136a6139b0565b60975561137689613a47565b61137f86613a99565b61138b858585856136aa565b80156113d1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061143b5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6114575760405162461bcd60e51b8152600401610b2a906158fa565b611460836115bf565b15611112576001600160a01b038084166000908152609a60205260409020541661111081858585613b93565b6066546002906004908116036114b45760405162461bcd60e51b8152600401610b2a9061576d565b600260c954036115065760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b2a565b600260c95560005b888110156115ae576115a68a8a8381811061152b5761152b615757565b905060200281019061153d91906159bc565b89898481811061154f5761154f615757565b905060200281019061156191906157c4565b89898681811061157357611573615757565b9050602002013588888781811061158c5761158c615757565b90506020020160208101906115a191906159d2565b613c0e565b60010161150e565b5050600160c9555050505050505050565b6001600160a01b039081166000908152609a602052604090205416151590565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015611627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164b9190615957565b6116675760405162461bcd60e51b8152600401610b2a90615974565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b6000816040516020016116b99190615a6e565b604051602081830303815290604052805190602001209050919050565b60005b815181101561197d5760008282815181106116f6576116f6615757565b602002602001015190506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cd293f6f846040518263ffffffff1660e01b815260040161174f9190615a81565b60408051808303816000875af115801561176d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117919190615b2e565b91509150811561196f576040808401516001600160a01b0381166000908152609f602052918220805491928291906117c883615b72565b919050555060006040518060e00160405280846001600160a01b031681526020018760a001516001600160a01b031681526020018760600151600001516001600160a01b03168152602001838152602001876080015163ffffffff16815260200187600001518152602001876020015181525090506000611848826116a6565b6000818152609e602052604090205490915060ff16156118de5760405162461bcd60e51b815260206004820152604560248201527f44656c65676174696f6e4d616e616765722e6d6967726174655175657565645760448201527f69746864726177616c733a207769746864726177616c20616c72656164792065606482015264786973747360d81b608482015260a401610b2a565b6000818152609e602052604090819020805460ff19166001179055517f9009ab153e8014fbfb02f2217f5cde7aa7f9ad734ae85ca3ee3f4ca2fdd499f9906119299083908590615b8b565b60405180910390a160408051868152602081018390527fdc00758b65eef71dc3780c04ebe36cab6bdb266c3a698187e29e0f0dca012630910160405180910390a1505050505b8360010193505050506116d9565b5050565b6066546002906004908116036119a95760405162461bcd60e51b8152600401610b2a9061576d565b600260c954036119fb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b2a565b600260c955611a0d8686868686613c0e565b5050600160c95550505050565b611a22613650565b61105d81613a99565b6001600160a01b0390811660009081526099602052604090205416151590565b611a53613650565b611a5d6000613a47565b565b4283602001511015611ae35760405162461bcd60e51b815260206004820152604160248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f4279536960448201527f676e61747572653a207374616b6572207369676e6174757265206578706972656064820152601960fa1b608482015260a401610b2a565b6000609b6000876001600160a01b03166001600160a01b031681526020019081526020016000205490506000611b1f8783888860200151611d08565b6001600160a01b0388166000908152609b602052604090206001840190558551909150611b4f90889083906143f7565b611b5b8787868661313a565b50505050505050565b6060600082516001600160401b03811115611b8157611b81614e8b565b604051908082528060200260200182016040528015611baa578160200160208202803683370190505b50905060005b8351811015610a33576001600160a01b03851660009081526098602052604081208551909190869084908110611be857611be8615757565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110611c2357611c23615757565b6020908102919091010152600101611bb0565b611c3f33611a2b565b611cc15760405162461bcd60e51b815260206004820152604760248201527f44656c65676174696f6e4d616e616765722e7570646174654f70657261746f7260448201527f4d657461646174615552493a2063616c6c6572206d75737420626520616e206f6064820152663832b930ba37b960c91b608482015260a401610b2a565b336001600160a01b03167f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b67080908383604051611cfc929190615864565b60405180910390a25050565b604080517f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b6020808301919091526001600160a01b0387811683850152851660608301526080820186905260a08083018590528351808403909101815260c0909201909252805191012060009081611d7e612744565b60405161190160f01b602082015260228101919091526042810183905260620160408051808303601f190181529190528051602090910120979650505050505050565b6040516360f4062b60e01b81526001600160a01b03828116600483015260609182916000917f0000000000000000000000000000000000000000000000000000000000000000909116906360f4062b90602401602060405180830381865afa158015611e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e559190615ba4565b6040516394f649dd60e01b81526001600160a01b03868116600483015291925060009182917f0000000000000000000000000000000000000000000000000000000000000000909116906394f649dd90602401600060405180830381865afa158015611ec5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611eed9190810190615c1b565b9150915060008313611f0457909590945092505050565b6060808351600003611fbd576040805160018082528183019092529060208083019080368337505060408051600180825281830190925292945090506020808301908036833701905050905073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac082600081518110611f7857611f78615757565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600081518110611fac57611fac615757565b60200260200101818152505061216b565b8351611fca906001615cdc565b6001600160401b03811115611fe157611fe1614e8b565b60405190808252806020026020018201604052801561200a578160200160208202803683370190505b50915081516001600160401b0381111561202657612026614e8b565b60405190808252806020026020018201604052801561204f578160200160208202803683370190505b50905060005b84518110156120e95784818151811061207057612070615757565b602002602001015183828151811061208a5761208a615757565b60200260200101906001600160a01b031690816001600160a01b0316815250508381815181106120bc576120bc615757565b60200260200101518282815181106120d6576120d6615757565b6020908102919091010152600101612055565b5073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0826001845161210e9190615cef565b8151811061211e5761211e615757565b60200260200101906001600160a01b031690816001600160a01b03168152505084816001845161214e9190615cef565b8151811061215e5761215e615757565b6020026020010181815250505b9097909650945050505050565b6066546060906001906002908116036121a35760405162461bcd60e51b8152600401610b2a9061576d565b6121ac836115bf565b61222c5760405162461bcd60e51b8152602060048201526044602482018190527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a207374908201527f616b6572206d7573742062652064656c65676174656420746f20756e64656c656064820152636761746560e01b608482015260a401610b2a565b61223583611a2b565b156122a85760405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a206f7060448201527f657261746f72732063616e6e6f7420626520756e64656c6567617465640000006064820152608401610b2a565b6001600160a01b0383166123245760405162461bcd60e51b815260206004820152603c60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6e6e6f7420756e64656c6567617465207a65726f2061646472657373000000006064820152608401610b2a565b6001600160a01b038084166000818152609a6020526040902054909116903314806123575750336001600160a01b038216145b8061237e57506001600160a01b038181166000908152609960205260409020600101541633145b6123f05760405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6c6c65722063616e6e6f7420756e64656c6567617465207374616b65720000006064820152608401610b2a565b6000806123fc86611dc1565b9092509050336001600160a01b0387161461245257826001600160a01b0316866001600160a01b03167ff0eddf07e6ea14f388b47e1e94a0f464ecbd9eed4171130e0fc0e99fb4030a8a60405160405180910390a35b826001600160a01b0316866001600160a01b03167ffee30966a256b71e14bc0ebfc94315e28ef4a97a7131a9e2b7a310a73af4467660405160405180910390a36001600160a01b0386166000908152609a6020526040812080546001600160a01b0319169055825190036124d6576040805160008152602081019091529450612628565b81516001600160401b038111156124ef576124ef614e8b565b604051908082528060200260200182016040528015612518578160200160208202803683370190505b50945060005b82518110156126265760408051600180825281830190925260009160208083019080368337505060408051600180825281830190925292935060009291506020808301908036833701905050905084838151811061257e5761257e615757565b60200260200101518260008151811061259957612599615757565b60200260200101906001600160a01b031690816001600160a01b0316815250508383815181106125cb576125cb615757565b6020026020010151816000815181106125e6576125e6615757565b6020026020010181815250506125ff89878b85856128dd565b88848151811061261157612611615757565b6020908102919091010152505060010161251e565b505b50505050919050565b6111123384848461313a565b61264633611a2b565b6126c45760405162461bcd60e51b815260206004820152604360248201527f44656c65676174696f6e4d616e616765722e6d6f646966794f70657261746f7260448201527f44657461696c733a2063616c6c6572206d75737420626520616e206f706572616064820152623a37b960e91b608482015260a401610b2a565b61105d3382612e9f565b6126d6613650565b6001600160a01b03811661273b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b2a565b61105d81613a47565b60007f00000000000000000000000000000000000000000000000000000000000000004603612774575060975490565b61277c6139b0565b905090565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f89190615893565b6001600160a01b0316336001600160a01b0316146128285760405162461bcd60e51b8152600401610b2a906158b0565b6066541981196066541916146128a65760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c69747900000000000000006064820152608401610b2a565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200161124b565b60006001600160a01b0386166129745760405162461bcd60e51b815260206004820152605060248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374616b65722063616e6e6f7460648201526f206265207a65726f206164647265737360801b608482015260a401610b2a565b8251600003612a015760405162461bcd60e51b815260206004820152604d60248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374726174656769657320636160648201526c6e6e6f7420626520656d70747960981b608482015260a401610b2a565b60005b8351811015612dad576001600160a01b03861615612a5a57612a5a8688868481518110612a3357612a33615757565b6020026020010151868581518110612a4d57612a4d615757565b60200260200101516135d5565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06001600160a01b0316848281518110612a8a57612a8a615757565b60200260200101516001600160a01b031603612b52577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663beffbb8988858481518110612ae257612ae2615757565b60200260200101516040518363ffffffff1660e01b8152600401612b1b9291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b158015612b3557600080fd5b505af1158015612b49573d6000803e3d6000fd5b50505050612da5565b846001600160a01b0316876001600160a01b03161480612c2457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639b4da03d858381518110612bae57612bae615757565b60200260200101516040518263ffffffff1660e01b8152600401612be191906001600160a01b0391909116815260200190565b602060405180830381865afa158015612bfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c229190615957565b155b612cf05760405162461bcd60e51b8152602060048201526084602482018190527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448301527f6e6451756575655769746864726177616c3a2077697468647261776572206d7560648301527f73742062652073616d652061646472657373206173207374616b657220696620908201527f746869726450617274795472616e7366657273466f7262696464656e2061726560a482015263081cd95d60e21b60c482015260e401610b2a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c80d4e588868481518110612d3257612d32615757565b6020026020010151868581518110612d4c57612d4c615757565b60200260200101516040518463ffffffff1660e01b8152600401612d7293929190615d02565b600060405180830381600087803b158015612d8c57600080fd5b505af1158015612da0573d6000803e3d6000fd5b505050505b600101612a04565b506001600160a01b0386166000908152609f60205260408120805491829190612dd583615b72565b919050555060006040518060e00160405280896001600160a01b03168152602001886001600160a01b03168152602001876001600160a01b031681526020018381526020014363ffffffff1681526020018681526020018581525090506000612e3d826116a6565b6000818152609e602052604090819020805460ff19166001179055519091507f9009ab153e8014fbfb02f2217f5cde7aa7f9ad734ae85ca3ee3f4ca2fdd499f990612e8b9083908590615b8b565b60405180910390a198975050505050505050565b6000612eae6020830183614c40565b6001600160a01b031603612f475760405162461bcd60e51b815260206004820152605460248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a2063616e6e6f742073657420606561726e696e677352656365696064820152737665726020746f207a65726f206164647265737360601b608482015260a401610b2a565b6213c680612f5b6060830160408401615d26565b63ffffffff1611156130105760405162461bcd60e51b815260206004820152606c60248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527f63616e6e6f74206265203e204d41585f5354414b45525f4f50545f4f55545f5760848201526b494e444f575f424c4f434b5360a01b60a482015260c401610b2a565b6001600160a01b0382166000908152609960205260409081902060010154600160a01b900463ffffffff169061304c9060608401908401615d26565b63ffffffff1610156130e25760405162461bcd60e51b815260206004820152605360248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527218d85b9b9bdd08189948191958dc99585cd959606a1b608482015260a401610b2a565b6001600160a01b038216600090815260996020526040902081906131068282615d63565b505060405133907ffebe5cd24b2cbc7b065b9d0fdeb904461e4afcff57dd57acda1e7832031ba7ac90611cfc90849061580d565b6066546000906001908116036131625760405162461bcd60e51b8152600401610b2a9061576d565b61316b856115bf565b156131e85760405162461bcd60e51b815260206004820152604160248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2073746160448201527f6b657220697320616c7265616479206163746976656c792064656c65676174656064820152601960fa1b608482015260a401610b2a565b6131f184611a2b565b6132715760405162461bcd60e51b815260206004820152604560248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a206f706560448201527f7261746f72206973206e6f74207265676973746572656420696e20456967656e6064820152642630bcb2b960d91b608482015260a401610b2a565b6001600160a01b038085166000908152609960205260409020600101541680158015906132a75750336001600160a01b03821614155b80156132bc5750336001600160a01b03861614155b1561342957428460200151101561333b5760405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f766572207369676e617475726520657870697265640000000000000000006064820152608401610b2a565b6001600160a01b0381166000908152609c6020908152604080832086845290915290205460ff16156133d55760405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f76657253616c7420616c7265616479207370656e740000000000000000006064820152608401610b2a565b6001600160a01b0381166000908152609c6020908152604080832086845282528220805460ff19166001179055850151613416908890889085908890610a3d565b9050613427828287600001516143f7565b505b6001600160a01b038681166000818152609a602052604080822080546001600160a01b031916948a169485179055517fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d87433049190a360008061348888611dc1565b9150915060005b82518110156113d1576134d6888a8584815181106134af576134af615757565b60200260200101518585815181106134c9576134c9615757565b6020026020010151613b93565b60010161348f565b6001600160a01b03811661356c5760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a401610b2a565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0380851660009081526098602090815260408083209386168352929052908120805483929061360c908490615cef565b92505081905550836001600160a01b03167f6909600037b75d7b4733aedd815442b5ec018a827751c832aaff64eba5d6d2dd848484604051610f9f93929190615d02565b6033546001600160a01b03163314611a5d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b2a565b8281146137325760405162461bcd60e51b815260206004820152604a60248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a20696e707574206c656e67746064820152690d040dad2e6dac2e8c6d60b31b608482015260a401610b2a565b8260005b818110156138c257600086868381811061375257613752615757565b90506020020160208101906137679190614c40565b6001600160a01b038116600090815260a1602052604081205491925086868581811061379557613795615757565b90506020020135905062034bc08111156138595760405162461bcd60e51b815260206004820152607360248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a205f7769746864726177616c60648201527f44656c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544860848201527244524157414c5f44454c41595f424c4f434b5360681b60a482015260c401610b2a565b6001600160a01b038316600081815260a160209081526040918290208490558151928352820184905281018290527f0e7efa738e8b0ce6376a0c1af471655540d2e9a81647d7b09ed823018426576d9060600160405180910390a1505050806001019050613736565b505050505050565b6065546001600160a01b03161580156138eb57506001600160a01b03821615155b61396d5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a401610b2a565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a261197d826134de565b604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea81840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b62034bc0811115613b525760405162461bcd60e51b815260206004820152607160248201527f44656c65676174696f6e4d616e616765722e5f7365744d696e5769746864726160448201527f77616c44656c6179426c6f636b733a205f6d696e5769746864726177616c446560648201527f6c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544844526084820152704157414c5f44454c41595f424c4f434b5360781b60a482015260c401610b2a565b609d5460408051918252602082018390527fafa003cd76f87ff9d62b35beea889920f33c0c42b8d45b74954d61d50f4b6b69910160405180910390a1609d55565b6001600160a01b03808516600090815260986020908152604080832093861683529290529081208054839290613bca908490615cdc565b92505081905550836001600160a01b03167f1ec042c965e2edd7107b51188ee0f383e22e76179041ab3a9d18ff151405166c848484604051610f9f93929190615d02565b6000613c1c61062987615dc6565b6000818152609e602052604090205490915060ff16613c9d5760405162461bcd60e51b81526020600482015260436024820152600080516020615ef083398151915260448201527f645769746864726177616c3a20616374696f6e206973206e6f7420696e20717560648201526265756560e81b608482015260a401610b2a565b609d544390613cb260a0890160808a01615d26565b63ffffffff16613cc29190615cdc565b1115613d4a5760405162461bcd60e51b815260206004820152605f6024820152600080516020615ef083398151915260448201527f645769746864726177616c3a206d696e5769746864726177616c44656c61794260648201527f6c6f636b7320706572696f6420686173206e6f74207965742070617373656400608482015260a401610b2a565b613d5a6060870160408801614c40565b6001600160a01b0316336001600160a01b031614613de75760405162461bcd60e51b81526020600482015260506024820152600080516020615ef083398151915260448201527f645769746864726177616c3a206f6e6c7920776974686472617765722063616e60648201526f1031b7b6b83632ba329030b1ba34b7b760811b608482015260a401610b2a565b8115613e6957613dfa60a08701876157c4565b85149050613e695760405162461bcd60e51b81526020600482015260426024820152600080516020615ef083398151915260448201527f645769746864726177616c3a20696e707574206c656e677468206d69736d61746064820152610c6d60f31b608482015260a401610b2a565b6000818152609e60205260409020805460ff191690558115613fce5760005b613e9560a08801886157c4565b9050811015613fc8574360a16000613eb060a08b018b6157c4565b85818110613ec057613ec0615757565b9050602002016020810190613ed59190614c40565b6001600160a01b03168152602081019190915260400160002054613eff60a08a0160808b01615d26565b63ffffffff16613f0f9190615cdc565b1115613f2d5760405162461bcd60e51b8152600401610b2a90615dd2565b613fc0613f3d6020890189614c40565b33613f4b60a08b018b6157c4565b85818110613f5b57613f5b615757565b9050602002016020810190613f709190614c40565b613f7d60c08c018c6157c4565b86818110613f8d57613f8d615757565b905060200201358a8a87818110613fa657613fa6615757565b9050602002016020810190613fbb9190614c40565b6145b1565b600101613e88565b506143bc565b336000908152609a60205260408120546001600160a01b0316905b613ff660a08901896157c4565b90508110156143b9574360a1600061401160a08c018c6157c4565b8581811061402157614021615757565b90506020020160208101906140369190614c40565b6001600160a01b0316815260208101919091526040016000205461406060a08b0160808c01615d26565b63ffffffff166140709190615cdc565b111561408e5760405162461bcd60e51b8152600401610b2a90615dd2565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06140b060a08a018a6157c4565b838181106140c0576140c0615757565b90506020020160208101906140d59190614c40565b6001600160a01b0316036142245760006140f260208a018a614c40565b905060006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016630e81073c8361413360c08e018e6157c4565b8781811061414357614143615757565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015614197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141bb9190615ba4565b6001600160a01b038084166000908152609a602052604090205491925016801561421c5761421c81846141f160a08f018f6157c4565b8881811061420157614201615757565b90506020020160208101906142169190614c40565b85613b93565b5050506143b1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c4623ea13389898581811061426657614266615757565b905060200201602081019061427b9190614c40565b61428860a08d018d6157c4565b8681811061429857614298615757565b90506020020160208101906142ad9190614c40565b6142ba60c08e018e6157c4565b878181106142ca576142ca615757565b60405160e088901b6001600160e01b03191681526001600160a01b03968716600482015294861660248601529290941660448401526020909102013560648201526084019050600060405180830381600087803b15801561432a57600080fd5b505af115801561433e573d6000803e3d6000fd5b505050506001600160a01b038216156143b1576143b1823361436360a08c018c6157c4565b8581811061437357614373615757565b90506020020160208101906143889190614c40565b61439560c08d018d6157c4565b868181106143a5576143a5615757565b90506020020135613b93565b600101613fe9565b50505b6040518181527fc97098c2f658800b4df29001527f7324bcdffcf6e8751a699ab920a1eced5b1d9060200160405180910390a1505050505050565b6001600160a01b0383163b1561451157604051630b135d3f60e11b808252906001600160a01b03851690631626ba7e906144379086908690600401615e5a565b602060405180830381865afa158015614454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144789190615eaf565b6001600160e01b031916146111125760405162461bcd60e51b815260206004820152605360248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a2045524331323731207369676e6174757265206064820152721d995c9a599a58d85d1a5bdb8819985a5b1959606a1b608482015260a401610b2a565b826001600160a01b031661452583836146f1565b6001600160a01b0316146111125760405162461bcd60e51b815260206004820152604760248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a207369676e6174757265206e6f742066726f6d6064820152661039b4b3b732b960c91b608482015260a401610b2a565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeabf196001600160a01b0384160161465c5760405162387b1360e81b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063387b13009061462590889088908790600401615d02565b600060405180830381600087803b15801561463f57600080fd5b505af1158015614653573d6000803e3d6000fd5b505050506146ea565b60405163c608c7f360e01b81526001600160a01b03858116600483015284811660248301526044820184905282811660648301527f0000000000000000000000000000000000000000000000000000000000000000169063c608c7f390608401600060405180830381600087803b1580156146d657600080fd5b505af11580156113d1573d6000803e3d6000fd5b5050505050565b6000806000614700858561470d565b91509150610a338161477b565b60008082516041036147435760208301516040840151606085015160001a61473787828585614931565b94509450505050614774565b825160400361476c5760208301516040840151614761868383614a1e565b935093505050614774565b506000905060025b9250929050565b600081600481111561478f5761478f615ed9565b036147975750565b60018160048111156147ab576147ab615ed9565b036147f85760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610b2a565b600281600481111561480c5761480c615ed9565b036148595760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610b2a565b600381600481111561486d5761486d615ed9565b036148c55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610b2a565b60048160048111156148d9576148d9615ed9565b0361105d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610b2a565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156149685750600090506003614a15565b8460ff16601b1415801561498057508460ff16601c14155b156149915750600090506004614a15565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156149e5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116614a0e57600060019250925050614a15565b9150600090505b94509492505050565b6000806001600160ff1b03831681614a3b60ff86901c601b615cdc565b9050614a4987828885614931565b935093505050935093915050565b60008083601f840112614a6957600080fd5b5081356001600160401b03811115614a8057600080fd5b6020830191508360208260051b850101111561477457600080fd5b60008060208385031215614aae57600080fd5b82356001600160401b03811115614ac457600080fd5b614ad085828601614a57565b90969095509350505050565b6001600160a01b038116811461105d57600080fd5b8035614afc81614adc565b919050565b600080600080600060a08688031215614b1957600080fd5b8535614b2481614adc565b94506020860135614b3481614adc565b93506040860135614b4481614adc565b94979396509394606081013594506080013592915050565b602080825282518282018190526000918401906040840190835b81811015610e52578351835260209384019390920191600101614b76565b600060608284031215614ba657600080fd5b50919050565b60008083601f840112614bbe57600080fd5b5081356001600160401b03811115614bd557600080fd5b60208301915083602082850101111561477457600080fd5b600080600060808486031215614c0257600080fd5b614c0c8585614b94565b925060608401356001600160401b03811115614c2757600080fd5b614c3386828701614bac565b9497909650939450505050565b600060208284031215614c5257600080fd5b8135614c5d81614adc565b9392505050565b600080600060608486031215614c7957600080fd5b8335614c8481614adc565b92506020840135614c9481614adc565b929592945050506040919091013590565b600060208284031215614cb757600080fd5b5035919050565b60008060008060408587031215614cd457600080fd5b84356001600160401b03811115614cea57600080fd5b614cf687828801614a57565b90955093505060208501356001600160401b03811115614d1557600080fd5b614d2187828801614a57565b95989497509550505050565b60008060008060008060008060c0898b031215614d4957600080fd5b8835614d5481614adc565b97506020890135614d6481614adc565b9650604089013595506060890135945060808901356001600160401b03811115614d8d57600080fd5b614d998b828c01614a57565b90955093505060a08901356001600160401b03811115614db857600080fd5b614dc48b828c01614a57565b999c989b5096995094979396929594505050565b6000806000806000806000806080898b031215614df457600080fd5b88356001600160401b03811115614e0a57600080fd5b614e168b828c01614a57565b90995097505060208901356001600160401b03811115614e3557600080fd5b614e418b828c01614a57565b90975095505060408901356001600160401b03811115614e6057600080fd5b614e6c8b828c01614a57565b90955093505060608901356001600160401b03811115614db857600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715614ec357614ec3614e8b565b60405290565b604080519081016001600160401b0381118282101715614ec357614ec3614e8b565b60405160c081016001600160401b0381118282101715614ec357614ec3614e8b565b604051601f8201601f191681016001600160401b0381118282101715614f3557614f35614e8b565b604052919050565b63ffffffff8116811461105d57600080fd5b8035614afc81614f3d565b60006001600160401b03821115614f7357614f73614e8b565b5060051b60200190565b600082601f830112614f8e57600080fd5b8135614fa1614f9c82614f5a565b614f0d565b8082825260208201915060208360051b860101925085831115614fc357600080fd5b602085015b83811015614fe9578035614fdb81614adc565b835260209283019201614fc8565b5095945050505050565b600082601f83011261500457600080fd5b8135615012614f9c82614f5a565b8082825260208201915060208360051b86010192508583111561503457600080fd5b602085015b83811015614fe9578035835260209283019201615039565b600060e0828403121561506357600080fd5b61506b614ea1565b905061507682614af1565b815261508460208301614af1565b602082015261509560408301614af1565b6040820152606082810135908201526150b060808301614f4f565b608082015260a08201356001600160401b038111156150ce57600080fd5b6150da84828501614f7d565b60a08301525060c08201356001600160401b038111156150f957600080fd5b61510584828501614ff3565b60c08301525092915050565b60006020828403121561512357600080fd5b81356001600160401b0381111561513957600080fd5b61514584828501615051565b949350505050565b60006020828403121561515f57600080fd5b813560ff81168114614c5d57600080fd5b60006040828403121561518257600080fd5b61518a614ec9565b9050813561519781614adc565b815260208201356bffffffffffffffffffffffff811681146151b857600080fd5b602082015292915050565b6000602082840312156151d557600080fd5b81356001600160401b038111156151eb57600080fd5b8201601f810184136151fc57600080fd5b803561520a614f9c82614f5a565b8082825260208201915060208360051b85010192508683111561522c57600080fd5b602084015b8381101561531a5780356001600160401b0381111561524f57600080fd5b850160e0818a03601f1901121561526557600080fd5b61526d614eeb565b60208201356001600160401b0381111561528657600080fd5b6152958b602083860101614f7d565b82525060408201356001600160401b038111156152b157600080fd5b6152c08b602083860101614ff3565b6020830152506152d260608301614af1565b60408201526152e48a60808401615170565b60608201526152f560c08301614f4f565b608082015261530660e08301614af1565b60a082015284525060209283019201615231565b509695505050505050565b801515811461105d57600080fd5b60008060008060006080868803121561534b57600080fd5b85356001600160401b0381111561536157600080fd5b860160e0818903121561537357600080fd5b945060208601356001600160401b0381111561538e57600080fd5b61539a88828901614a57565b9095509350506040860135915060608601356153b581615325565b809150509295509295909350565b600080604083850312156153d657600080fd5b82356153e181614adc565b915060208301356153f181614adc565b809150509250929050565b60006040828403121561540e57600080fd5b615416614ec9565b905081356001600160401b0381111561542e57600080fd5b8201601f8101841361543f57600080fd5b80356001600160401b0381111561545857615458614e8b565b61546b601f8201601f1916602001614f0d565b81815285602083850101111561548057600080fd5b81602084016020830137600060209282018301528352928301359282019290925292915050565b600080600080600060a086880312156154bf57600080fd5b85356154ca81614adc565b945060208601356154da81614adc565b935060408601356001600160401b038111156154f557600080fd5b615501888289016153fc565b93505060608601356001600160401b0381111561551d57600080fd5b615529888289016153fc565b95989497509295608001359392505050565b6000806040838503121561554e57600080fd5b823561555981614adc565b915060208301356001600160401b0381111561557457600080fd5b61558085828601614f7d565b9150509250929050565b600081518084526020840193506020830160005b828110156155bc57815186526020958601959091019060010161559e565b5093949350505050565b602081526000614c5d602083018461558a565b600080602083850312156155ec57600080fd5b82356001600160401b0381111561560257600080fd5b614ad085828601614bac565b6000806040838503121561562157600080fd5b823561562c81614adc565b946020939093013593505050565b6000806000806080858703121561565057600080fd5b843561565b81614adc565b935060208501359250604085013561567281614adc565b9396929550929360600135925050565b600081518084526020840193506020830160005b828110156155bc5781516001600160a01b0316865260209586019590910190600101615696565b6040815260006156d06040830185615682565b828103602084015261128f818561558a565b6000806000606084860312156156f757600080fd5b833561570281614adc565b925060208401356001600160401b0381111561571d57600080fd5b615729868287016153fc565b93969395505050506040919091013590565b60006060828403121561574d57600080fd5b614c5d8383614b94565b634e487b7160e01b600052603260045260246000fd5b60208082526019908201527f5061757361626c653a20696e6465782069732070617573656400000000000000604082015260600190565b60008235605e198336030181126157ba57600080fd5b9190910192915050565b6000808335601e198436030181126157db57600080fd5b8301803591506001600160401b038211156157f557600080fd5b6020019150600581901b360382131561477457600080fd5b60608101823561581c81614adc565b6001600160a01b03168252602083013561583581614adc565b6001600160a01b03166020830152604083013561585181614f3d565b63ffffffff811660408401525092915050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6000602082840312156158a557600080fd5b8151614c5d81614adc565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b60208082526037908201527f44656c65676174696f6e4d616e616765723a206f6e6c7953747261746567794d60408201527f616e616765724f72456967656e506f644d616e61676572000000000000000000606082015260800190565b60006020828403121561596957600080fd5b8151614c5d81615325565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b6000823560de198336030181126157ba57600080fd5b6000602082840312156159e457600080fd5b8135614c5d81615325565b80516001600160a01b0390811683526020808301518216908401526040808301519091169083015260608082015190830152608080820151600091615a3b9085018263ffffffff169052565b5060a082015160e060a0850152615a5560e0850182615682565b905060c083015184820360c086015261128f828261558a565b602081526000614c5d60208301846159ef565b602081526000825160e06020840152615a9e610100840182615682565b90506020840151601f19848303016040850152615abb828261558a565b91505060018060a01b036040850151166060840152606084015160018060a01b0381511660808501526bffffffffffffffffffffffff60208201511660a0850152506080840151615b1460c085018263ffffffff169052565b5060a08401516001600160a01b03811660e0850152610a33565b60008060408385031215615b4157600080fd5b8251615b4c81615325565b6020939093015192949293505050565b634e487b7160e01b600052601160045260246000fd5b600060018201615b8457615b84615b5c565b5060010190565b82815260406020820152600061514560408301846159ef565b600060208284031215615bb657600080fd5b5051919050565b600082601f830112615bce57600080fd5b8151615bdc614f9c82614f5a565b8082825260208201915060208360051b860101925085831115615bfe57600080fd5b602085015b83811015614fe9578051835260209283019201615c03565b60008060408385031215615c2e57600080fd5b82516001600160401b03811115615c4457600080fd5b8301601f81018513615c5557600080fd5b8051615c63614f9c82614f5a565b8082825260208201915060208360051b850101925087831115615c8557600080fd5b6020840193505b82841015615cb0578351615c9f81614adc565b825260209384019390910190615c8c565b8095505050505060208301516001600160401b03811115615cd057600080fd5b61558085828601615bbd565b80820180821115610a3757610a37615b5c565b81810381811115610a3757610a37615b5c565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215615d3857600080fd5b8135614c5d81614f3d565b80546001600160a01b0319166001600160a01b0392909216919091179055565b8135615d6e81614adc565b615d788183615d43565b50600181016020830135615d8b81614adc565b615d958183615d43565b506040830135615da481614f3d565b815463ffffffff60a01b191660a09190911b63ffffffff60a01b161790555050565b6000610a373683615051565b6020808252606e90820152600080516020615ef083398151915260408201527f645769746864726177616c3a207769746864726177616c44656c6179426c6f6360608201527f6b7320706572696f6420686173206e6f74207965742070617373656420666f7260808201526d207468697320737472617465677960901b60a082015260c00190565b828152604060208201526000825180604084015260005b81811015615e8e5760208186018101516060868401015201615e71565b506000606082850101526060601f19601f8301168401019150509392505050565b600060208284031215615ec157600080fd5b81516001600160e01b031981168114614c5d57600080fd5b634e487b7160e01b600052602160045260246000fdfe44656c65676174696f6e4d616e616765722e5f636f6d706c6574655175657565a2646970667358221220dc8af488fb28e8a0e8819a77a4ffe5fed5230ed3d4fcd1744be21911972b43ad64736f6c634300081a0033",
        "sourceMap": "1137:48922:30:-:0;;;2862:284;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5650:34:31;;;;;5694;;;;;5738:18;;;;3074:22:30::1;:20;:22::i;:::-;-1:-1:-1::0;;3126:13:30::1;3106:33;::::0;-1:-1:-1;1137:48922:30;;5388:279:2;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:2;;1017:2:102;5447:66:2;;;999:21:102;1056:2;1036:18;;;1029:30;1095:34;1075:18;;;1068:62;-1:-1:-1;;;1146:18:102;;;1139:37;1193:19;;5447:66:2;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:2;5588:15;5573:30;;;;;;5622:28;;1365:36:102;;;5622:28:2;;1353:2:102;1338:18;5622:28:2;;;;;;;5523:138;5388:279::o;14:149:102:-;-1:-1:-1;;;;;107:31:102;;97:42;;87:70;;153:1;150;143:12;87:70;14:149;:::o;168:642::-;325:6;333;341;394:2;382:9;373:7;369:23;365:32;362:52;;;410:1;407;400:12;362:52;442:9;436:16;461:49;504:5;461:49;:::i;:::-;579:2;564:18;;558:25;529:5;;-1:-1:-1;592:51:102;558:25;592:51;:::i;:::-;714:2;699:18;;693:25;662:7;;-1:-1:-1;727:51:102;693:25;727:51;:::i;:::-;797:7;787:17;;;168:642;;;;;:::o;1223:184::-;1137:48922:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561001057600080fd5b50600436106103785760003560e01c806360d7faed116101d3578063b7f06ebe11610104578063cf80873e116100a2578063f16172b01161007c578063f16172b01461097d578063f2fde38b14610990578063f698da25146109a3578063fabc1cbc146109ab57600080fd5b8063cf80873e14610936578063da8be86414610957578063eea9064b1461096a57600080fd5b8063c488375a116100de578063c488375a14610853578063c5e480db14610873578063c94b511114610919578063ca661c041461092c57600080fd5b8063b7f06ebe146107f9578063bb45fef21461081c578063c448feb81461084a57600080fd5b8063886f1195116101715780639104c3191161014b5780639104c3191461078457806399be81c81461079f578063a1788484146107b2578063b1344271146107d257600080fd5b8063886f1195146107405780638da5cb5b14610753578063900413471461076457600080fd5b80636d70f7ae116101ad5780636d70f7ae146106e7578063715018a6146106fa578063778e55f3146107025780637f5480711461072d57600080fd5b806360d7faed14610698578063635bbd10146106ab57806365da1264146106be57600080fd5b806329c77d4f116102ad5780634fc40b611161024b5780635ac86ab7116102255780635ac86ab71461062e5780635c975abb146106515780635cfe8d2c146106595780635f966f141461066c57600080fd5b80634fc40b6114610609578063595c6a6714610613578063597b36da1461061b57600080fd5b80633cdeb5e0116102875780633cdeb5e0146105695780633e28391d1461059857806343377382146105bb5780634665bcda146105e257600080fd5b806329c77d4f146104f7578063334043961461051757806339b70e381461052a57600080fd5b8063136439dd1161031a5780631bbce091116102f45780631bbce0911461049757806320606b70146104aa57806322bf40e4146104d157806328a573ae146104e457600080fd5b8063136439dd146104385780631522bf021461044b578063169283651461045e57600080fd5b80630dd8dd02116103565780630dd8dd02146103dd5780630f589e59146103fd57806310d67a2f14610412578063132d49671461042557600080fd5b80630449ca391461037d57806304a4f979146103a35780630b9f487a146103ca575b600080fd5b61039061038b366004614a9b565b6109be565b6040519081526020015b60405180910390f35b6103907f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad81565b6103906103d8366004614b01565b610a3d565b6103f06103eb366004614a9b565b610aff565b60405161039a9190614b5c565b61041061040b366004614bed565b610e5d565b005b610410610420366004614c40565b610fad565b610410610433366004614c64565b611060565b610410610446366004614ca5565b611117565b610410610459366004614cbe565b611256565b61039061046c366004614c40565b6001600160a01b0316600090815260996020526040902060010154600160a01b900463ffffffff1690565b6103906104a5366004614c64565b61126a565b6103907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6104106104df366004614d2d565b611298565b6104106104f2366004614c64565b6113dc565b610390610505366004614c40565b609b6020526000908152604090205481565b610410610525366004614dd8565b61148c565b6105517f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161039a565b610551610577366004614c40565b6001600160a01b039081166000908152609960205260409020600101541690565b6105ab6105a6366004614c40565b6115bf565b604051901515815260200161039a565b6103907f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b81565b6105517f000000000000000000000000000000000000000000000000000000000000000081565b6103906213c68081565b6104106115df565b610390610629366004615111565b6116a6565b6105ab61063c36600461514d565b606654600160ff9092169190911b9081161490565b606654610390565b6104106106673660046151c3565b6116d6565b61055161067a366004614c40565b6001600160a01b039081166000908152609960205260409020541690565b6104106106a6366004615333565b611981565b6104106106b9366004614ca5565b611a1a565b6105516106cc366004614c40565b609a602052600090815260409020546001600160a01b031681565b6105ab6106f5366004614c40565b611a2b565b610410611a4b565b6103906107103660046153c3565b609860209081526000928352604080842090915290825290205481565b61041061073b3660046154a7565b611a5f565b606554610551906001600160a01b031681565b6033546001600160a01b0316610551565b61077761077236600461553b565b611b64565b60405161039a91906155c6565b61055173beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b6104106107ad3660046155d9565b611c36565b6103906107c0366004614c40565b609f6020526000908152604090205481565b6105517f000000000000000000000000000000000000000000000000000000000000000081565b6105ab610807366004614ca5565b609e6020526000908152604090205460ff1681565b6105ab61082a36600461560e565b609c60209081526000928352604080842090915290825290205460ff1681565b610390609d5481565b610390610861366004614c40565b60a16020526000908152604090205481565b6108e3610881366004614c40565b6040805160608082018352600080835260208084018290529284018190526001600160a01b03948516815260998352839020835191820184528054851682526001015493841691810191909152600160a01b90920463ffffffff169082015290565b6040805182516001600160a01b039081168252602080850151909116908201529181015163ffffffff169082015260600161039a565b61039061092736600461563a565b611d08565b61039062034bc081565b610949610944366004614c40565b611dc1565b60405161039a9291906156bd565b6103f0610965366004614c40565b612178565b6104106109783660046156e2565b612631565b61041061098b36600461573b565b61263d565b61041061099e366004614c40565b6126ce565b610390612744565b6104106109b9366004614ca5565b612781565b609d54600090815b83811015610a3357600060a160008787858181106109e6576109e6615757565b90506020020160208101906109fb9190614c40565b6001600160a01b03166001600160a01b0316815260200190815260200160002054905082811115610a2a578092505b506001016109c6565b5090505b92915050565b604080517f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad6020808301919091526001600160a01b038681168385015288811660608401528716608083015260a0820185905260c08083018590528351808403909101815260e0909201909252805191012060009081610abb612744565b60405161190160f01b602082015260228101919091526042810183905260620160408051808303601f19018152919052805160209091012098975050505050505050565b606654606090600190600290811603610b335760405162461bcd60e51b8152600401610b2a9061576d565b60405180910390fd5b6000836001600160401b03811115610b4d57610b4d614e8b565b604051908082528060200260200182016040528015610b76578160200160208202803683370190505b50336000908152609a60205260408120549192506001600160a01b03909116905b85811015610e5257868682818110610bb157610bb1615757565b9050602002810190610bc391906157a4565b610bd19060208101906157c4565b9050878783818110610be557610be5615757565b9050602002810190610bf791906157a4565b610c0190806157c4565b905014610c765760405162461bcd60e51b815260206004820152603860248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a20696e707574206c656e677468206d69736d6174636800000000000000006064820152608401610b2a565b33878783818110610c8957610c89615757565b9050602002810190610c9b91906157a4565b610cac906060810190604001614c40565b6001600160a01b031614610d285760405162461bcd60e51b815260206004820152603c60248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a2077697468647261776572206d757374206265207374616b6572000000006064820152608401610b2a565b610e2d3383898985818110610d3f57610d3f615757565b9050602002810190610d5191906157a4565b610d62906060810190604001614c40565b8a8a86818110610d7457610d74615757565b9050602002810190610d8691906157a4565b610d9090806157c4565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508e92508d9150889050818110610dd657610dd6615757565b9050602002810190610de891906157a4565b610df69060208101906157c4565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506128dd92505050565b838281518110610e3f57610e3f615757565b6020908102919091010152600101610b97565b509095945050505050565b336000908152609960205260409020546001600160a01b031615610ef75760405162461bcd60e51b815260206004820152604560248201527f44656c65676174696f6e4d616e616765722e726567697374657241734f70657260448201527f61746f723a206f70657261746f722068617320616c72656164792072656769736064820152641d195c995960da1b608482015260a401610b2a565b610f013384612e9f565b604080518082019091526060815260006020820152610f23338083600061313a565b336001600160a01b03167f8e8485583a2310d41f7c82b9427d0bd49bad74bb9cff9d3402a29d8f9b28a0e285604051610f5c919061580d565b60405180910390a2336001600160a01b03167f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b67080908484604051610f9f929190615864565b60405180910390a250505050565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611000573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110249190615893565b6001600160a01b0316336001600160a01b0316146110545760405162461bcd60e51b8152600401610b2a906158b0565b61105d816134de565b50565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806110bf5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6110db5760405162461bcd60e51b8152600401610b2a906158fa565b6110e4836115bf565b15611112576001600160a01b038084166000908152609a602052604090205416611110818585856135d5565b505b505050565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa15801561115f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111839190615957565b61119f5760405162461bcd60e51b8152600401610b2a90615974565b606654818116146112185760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c69747900000000000000006064820152608401610b2a565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b61125e613650565b611110848484846136aa565b6001600160a01b0383166000908152609b602052604081205461128f85828686611d08565b95945050505050565b600054610100900460ff16158080156112b85750600054600160ff909116105b806112d25750303b1580156112d2575060005460ff166001145b6113355760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b2a565b6000805460ff191660011790558015611358576000805461ff0019166101001790555b61136288886138ca565b61136a6139b0565b60975561137689613a47565b61137f86613a99565b61138b858585856136aa565b80156113d1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061143b5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6114575760405162461bcd60e51b8152600401610b2a906158fa565b611460836115bf565b15611112576001600160a01b038084166000908152609a60205260409020541661111081858585613b93565b6066546002906004908116036114b45760405162461bcd60e51b8152600401610b2a9061576d565b600260c954036115065760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b2a565b600260c95560005b888110156115ae576115a68a8a8381811061152b5761152b615757565b905060200281019061153d91906159bc565b89898481811061154f5761154f615757565b905060200281019061156191906157c4565b89898681811061157357611573615757565b9050602002013588888781811061158c5761158c615757565b90506020020160208101906115a191906159d2565b613c0e565b60010161150e565b5050600160c9555050505050505050565b6001600160a01b039081166000908152609a602052604090205416151590565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015611627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164b9190615957565b6116675760405162461bcd60e51b8152600401610b2a90615974565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b6000816040516020016116b99190615a6e565b604051602081830303815290604052805190602001209050919050565b60005b815181101561197d5760008282815181106116f6576116f6615757565b602002602001015190506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cd293f6f846040518263ffffffff1660e01b815260040161174f9190615a81565b60408051808303816000875af115801561176d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117919190615b2e565b91509150811561196f576040808401516001600160a01b0381166000908152609f602052918220805491928291906117c883615b72565b919050555060006040518060e00160405280846001600160a01b031681526020018760a001516001600160a01b031681526020018760600151600001516001600160a01b03168152602001838152602001876080015163ffffffff16815260200187600001518152602001876020015181525090506000611848826116a6565b6000818152609e602052604090205490915060ff16156118de5760405162461bcd60e51b815260206004820152604560248201527f44656c65676174696f6e4d616e616765722e6d6967726174655175657565645760448201527f69746864726177616c733a207769746864726177616c20616c72656164792065606482015264786973747360d81b608482015260a401610b2a565b6000818152609e602052604090819020805460ff19166001179055517f9009ab153e8014fbfb02f2217f5cde7aa7f9ad734ae85ca3ee3f4ca2fdd499f9906119299083908590615b8b565b60405180910390a160408051868152602081018390527fdc00758b65eef71dc3780c04ebe36cab6bdb266c3a698187e29e0f0dca012630910160405180910390a1505050505b8360010193505050506116d9565b5050565b6066546002906004908116036119a95760405162461bcd60e51b8152600401610b2a9061576d565b600260c954036119fb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b2a565b600260c955611a0d8686868686613c0e565b5050600160c95550505050565b611a22613650565b61105d81613a99565b6001600160a01b0390811660009081526099602052604090205416151590565b611a53613650565b611a5d6000613a47565b565b4283602001511015611ae35760405162461bcd60e51b815260206004820152604160248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f4279536960448201527f676e61747572653a207374616b6572207369676e6174757265206578706972656064820152601960fa1b608482015260a401610b2a565b6000609b6000876001600160a01b03166001600160a01b031681526020019081526020016000205490506000611b1f8783888860200151611d08565b6001600160a01b0388166000908152609b602052604090206001840190558551909150611b4f90889083906143f7565b611b5b8787868661313a565b50505050505050565b6060600082516001600160401b03811115611b8157611b81614e8b565b604051908082528060200260200182016040528015611baa578160200160208202803683370190505b50905060005b8351811015610a33576001600160a01b03851660009081526098602052604081208551909190869084908110611be857611be8615757565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110611c2357611c23615757565b6020908102919091010152600101611bb0565b611c3f33611a2b565b611cc15760405162461bcd60e51b815260206004820152604760248201527f44656c65676174696f6e4d616e616765722e7570646174654f70657261746f7260448201527f4d657461646174615552493a2063616c6c6572206d75737420626520616e206f6064820152663832b930ba37b960c91b608482015260a401610b2a565b336001600160a01b03167f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b67080908383604051611cfc929190615864565b60405180910390a25050565b604080517f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b6020808301919091526001600160a01b0387811683850152851660608301526080820186905260a08083018590528351808403909101815260c0909201909252805191012060009081611d7e612744565b60405161190160f01b602082015260228101919091526042810183905260620160408051808303601f190181529190528051602090910120979650505050505050565b6040516360f4062b60e01b81526001600160a01b03828116600483015260609182916000917f0000000000000000000000000000000000000000000000000000000000000000909116906360f4062b90602401602060405180830381865afa158015611e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e559190615ba4565b6040516394f649dd60e01b81526001600160a01b03868116600483015291925060009182917f0000000000000000000000000000000000000000000000000000000000000000909116906394f649dd90602401600060405180830381865afa158015611ec5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611eed9190810190615c1b565b9150915060008313611f0457909590945092505050565b6060808351600003611fbd576040805160018082528183019092529060208083019080368337505060408051600180825281830190925292945090506020808301908036833701905050905073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac082600081518110611f7857611f78615757565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600081518110611fac57611fac615757565b60200260200101818152505061216b565b8351611fca906001615cdc565b6001600160401b03811115611fe157611fe1614e8b565b60405190808252806020026020018201604052801561200a578160200160208202803683370190505b50915081516001600160401b0381111561202657612026614e8b565b60405190808252806020026020018201604052801561204f578160200160208202803683370190505b50905060005b84518110156120e95784818151811061207057612070615757565b602002602001015183828151811061208a5761208a615757565b60200260200101906001600160a01b031690816001600160a01b0316815250508381815181106120bc576120bc615757565b60200260200101518282815181106120d6576120d6615757565b6020908102919091010152600101612055565b5073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0826001845161210e9190615cef565b8151811061211e5761211e615757565b60200260200101906001600160a01b031690816001600160a01b03168152505084816001845161214e9190615cef565b8151811061215e5761215e615757565b6020026020010181815250505b9097909650945050505050565b6066546060906001906002908116036121a35760405162461bcd60e51b8152600401610b2a9061576d565b6121ac836115bf565b61222c5760405162461bcd60e51b8152602060048201526044602482018190527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a207374908201527f616b6572206d7573742062652064656c65676174656420746f20756e64656c656064820152636761746560e01b608482015260a401610b2a565b61223583611a2b565b156122a85760405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a206f7060448201527f657261746f72732063616e6e6f7420626520756e64656c6567617465640000006064820152608401610b2a565b6001600160a01b0383166123245760405162461bcd60e51b815260206004820152603c60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6e6e6f7420756e64656c6567617465207a65726f2061646472657373000000006064820152608401610b2a565b6001600160a01b038084166000818152609a6020526040902054909116903314806123575750336001600160a01b038216145b8061237e57506001600160a01b038181166000908152609960205260409020600101541633145b6123f05760405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6c6c65722063616e6e6f7420756e64656c6567617465207374616b65720000006064820152608401610b2a565b6000806123fc86611dc1565b9092509050336001600160a01b0387161461245257826001600160a01b0316866001600160a01b03167ff0eddf07e6ea14f388b47e1e94a0f464ecbd9eed4171130e0fc0e99fb4030a8a60405160405180910390a35b826001600160a01b0316866001600160a01b03167ffee30966a256b71e14bc0ebfc94315e28ef4a97a7131a9e2b7a310a73af4467660405160405180910390a36001600160a01b0386166000908152609a6020526040812080546001600160a01b0319169055825190036124d6576040805160008152602081019091529450612628565b81516001600160401b038111156124ef576124ef614e8b565b604051908082528060200260200182016040528015612518578160200160208202803683370190505b50945060005b82518110156126265760408051600180825281830190925260009160208083019080368337505060408051600180825281830190925292935060009291506020808301908036833701905050905084838151811061257e5761257e615757565b60200260200101518260008151811061259957612599615757565b60200260200101906001600160a01b031690816001600160a01b0316815250508383815181106125cb576125cb615757565b6020026020010151816000815181106125e6576125e6615757565b6020026020010181815250506125ff89878b85856128dd565b88848151811061261157612611615757565b6020908102919091010152505060010161251e565b505b50505050919050565b6111123384848461313a565b61264633611a2b565b6126c45760405162461bcd60e51b815260206004820152604360248201527f44656c65676174696f6e4d616e616765722e6d6f646966794f70657261746f7260448201527f44657461696c733a2063616c6c6572206d75737420626520616e206f706572616064820152623a37b960e91b608482015260a401610b2a565b61105d3382612e9f565b6126d6613650565b6001600160a01b03811661273b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b2a565b61105d81613a47565b60007f00000000000000000000000000000000000000000000000000000000000000004603612774575060975490565b61277c6139b0565b905090565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f89190615893565b6001600160a01b0316336001600160a01b0316146128285760405162461bcd60e51b8152600401610b2a906158b0565b6066541981196066541916146128a65760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c69747900000000000000006064820152608401610b2a565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200161124b565b60006001600160a01b0386166129745760405162461bcd60e51b815260206004820152605060248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374616b65722063616e6e6f7460648201526f206265207a65726f206164647265737360801b608482015260a401610b2a565b8251600003612a015760405162461bcd60e51b815260206004820152604d60248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374726174656769657320636160648201526c6e6e6f7420626520656d70747960981b608482015260a401610b2a565b60005b8351811015612dad576001600160a01b03861615612a5a57612a5a8688868481518110612a3357612a33615757565b6020026020010151868581518110612a4d57612a4d615757565b60200260200101516135d5565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06001600160a01b0316848281518110612a8a57612a8a615757565b60200260200101516001600160a01b031603612b52577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663beffbb8988858481518110612ae257612ae2615757565b60200260200101516040518363ffffffff1660e01b8152600401612b1b9291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b158015612b3557600080fd5b505af1158015612b49573d6000803e3d6000fd5b50505050612da5565b846001600160a01b0316876001600160a01b03161480612c2457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639b4da03d858381518110612bae57612bae615757565b60200260200101516040518263ffffffff1660e01b8152600401612be191906001600160a01b0391909116815260200190565b602060405180830381865afa158015612bfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c229190615957565b155b612cf05760405162461bcd60e51b8152602060048201526084602482018190527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448301527f6e6451756575655769746864726177616c3a2077697468647261776572206d7560648301527f73742062652073616d652061646472657373206173207374616b657220696620908201527f746869726450617274795472616e7366657273466f7262696464656e2061726560a482015263081cd95d60e21b60c482015260e401610b2a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c80d4e588868481518110612d3257612d32615757565b6020026020010151868581518110612d4c57612d4c615757565b60200260200101516040518463ffffffff1660e01b8152600401612d7293929190615d02565b600060405180830381600087803b158015612d8c57600080fd5b505af1158015612da0573d6000803e3d6000fd5b505050505b600101612a04565b506001600160a01b0386166000908152609f60205260408120805491829190612dd583615b72565b919050555060006040518060e00160405280896001600160a01b03168152602001886001600160a01b03168152602001876001600160a01b031681526020018381526020014363ffffffff1681526020018681526020018581525090506000612e3d826116a6565b6000818152609e602052604090819020805460ff19166001179055519091507f9009ab153e8014fbfb02f2217f5cde7aa7f9ad734ae85ca3ee3f4ca2fdd499f990612e8b9083908590615b8b565b60405180910390a198975050505050505050565b6000612eae6020830183614c40565b6001600160a01b031603612f475760405162461bcd60e51b815260206004820152605460248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a2063616e6e6f742073657420606561726e696e677352656365696064820152737665726020746f207a65726f206164647265737360601b608482015260a401610b2a565b6213c680612f5b6060830160408401615d26565b63ffffffff1611156130105760405162461bcd60e51b815260206004820152606c60248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527f63616e6e6f74206265203e204d41585f5354414b45525f4f50545f4f55545f5760848201526b494e444f575f424c4f434b5360a01b60a482015260c401610b2a565b6001600160a01b0382166000908152609960205260409081902060010154600160a01b900463ffffffff169061304c9060608401908401615d26565b63ffffffff1610156130e25760405162461bcd60e51b815260206004820152605360248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527218d85b9b9bdd08189948191958dc99585cd959606a1b608482015260a401610b2a565b6001600160a01b038216600090815260996020526040902081906131068282615d63565b505060405133907ffebe5cd24b2cbc7b065b9d0fdeb904461e4afcff57dd57acda1e7832031ba7ac90611cfc90849061580d565b6066546000906001908116036131625760405162461bcd60e51b8152600401610b2a9061576d565b61316b856115bf565b156131e85760405162461bcd60e51b815260206004820152604160248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2073746160448201527f6b657220697320616c7265616479206163746976656c792064656c65676174656064820152601960fa1b608482015260a401610b2a565b6131f184611a2b565b6132715760405162461bcd60e51b815260206004820152604560248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a206f706560448201527f7261746f72206973206e6f74207265676973746572656420696e20456967656e6064820152642630bcb2b960d91b608482015260a401610b2a565b6001600160a01b038085166000908152609960205260409020600101541680158015906132a75750336001600160a01b03821614155b80156132bc5750336001600160a01b03861614155b1561342957428460200151101561333b5760405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f766572207369676e617475726520657870697265640000000000000000006064820152608401610b2a565b6001600160a01b0381166000908152609c6020908152604080832086845290915290205460ff16156133d55760405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f76657253616c7420616c7265616479207370656e740000000000000000006064820152608401610b2a565b6001600160a01b0381166000908152609c6020908152604080832086845282528220805460ff19166001179055850151613416908890889085908890610a3d565b9050613427828287600001516143f7565b505b6001600160a01b038681166000818152609a602052604080822080546001600160a01b031916948a169485179055517fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d87433049190a360008061348888611dc1565b9150915060005b82518110156113d1576134d6888a8584815181106134af576134af615757565b60200260200101518585815181106134c9576134c9615757565b6020026020010151613b93565b60010161348f565b6001600160a01b03811661356c5760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a401610b2a565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0380851660009081526098602090815260408083209386168352929052908120805483929061360c908490615cef565b92505081905550836001600160a01b03167f6909600037b75d7b4733aedd815442b5ec018a827751c832aaff64eba5d6d2dd848484604051610f9f93929190615d02565b6033546001600160a01b03163314611a5d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b2a565b8281146137325760405162461bcd60e51b815260206004820152604a60248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a20696e707574206c656e67746064820152690d040dad2e6dac2e8c6d60b31b608482015260a401610b2a565b8260005b818110156138c257600086868381811061375257613752615757565b90506020020160208101906137679190614c40565b6001600160a01b038116600090815260a1602052604081205491925086868581811061379557613795615757565b90506020020135905062034bc08111156138595760405162461bcd60e51b815260206004820152607360248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a205f7769746864726177616c60648201527f44656c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544860848201527244524157414c5f44454c41595f424c4f434b5360681b60a482015260c401610b2a565b6001600160a01b038316600081815260a160209081526040918290208490558151928352820184905281018290527f0e7efa738e8b0ce6376a0c1af471655540d2e9a81647d7b09ed823018426576d9060600160405180910390a1505050806001019050613736565b505050505050565b6065546001600160a01b03161580156138eb57506001600160a01b03821615155b61396d5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a401610b2a565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a261197d826134de565b604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea81840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b62034bc0811115613b525760405162461bcd60e51b815260206004820152607160248201527f44656c65676174696f6e4d616e616765722e5f7365744d696e5769746864726160448201527f77616c44656c6179426c6f636b733a205f6d696e5769746864726177616c446560648201527f6c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544844526084820152704157414c5f44454c41595f424c4f434b5360781b60a482015260c401610b2a565b609d5460408051918252602082018390527fafa003cd76f87ff9d62b35beea889920f33c0c42b8d45b74954d61d50f4b6b69910160405180910390a1609d55565b6001600160a01b03808516600090815260986020908152604080832093861683529290529081208054839290613bca908490615cdc565b92505081905550836001600160a01b03167f1ec042c965e2edd7107b51188ee0f383e22e76179041ab3a9d18ff151405166c848484604051610f9f93929190615d02565b6000613c1c61062987615dc6565b6000818152609e602052604090205490915060ff16613c9d5760405162461bcd60e51b81526020600482015260436024820152600080516020615ef083398151915260448201527f645769746864726177616c3a20616374696f6e206973206e6f7420696e20717560648201526265756560e81b608482015260a401610b2a565b609d544390613cb260a0890160808a01615d26565b63ffffffff16613cc29190615cdc565b1115613d4a5760405162461bcd60e51b815260206004820152605f6024820152600080516020615ef083398151915260448201527f645769746864726177616c3a206d696e5769746864726177616c44656c61794260648201527f6c6f636b7320706572696f6420686173206e6f74207965742070617373656400608482015260a401610b2a565b613d5a6060870160408801614c40565b6001600160a01b0316336001600160a01b031614613de75760405162461bcd60e51b81526020600482015260506024820152600080516020615ef083398151915260448201527f645769746864726177616c3a206f6e6c7920776974686472617765722063616e60648201526f1031b7b6b83632ba329030b1ba34b7b760811b608482015260a401610b2a565b8115613e6957613dfa60a08701876157c4565b85149050613e695760405162461bcd60e51b81526020600482015260426024820152600080516020615ef083398151915260448201527f645769746864726177616c3a20696e707574206c656e677468206d69736d61746064820152610c6d60f31b608482015260a401610b2a565b6000818152609e60205260409020805460ff191690558115613fce5760005b613e9560a08801886157c4565b9050811015613fc8574360a16000613eb060a08b018b6157c4565b85818110613ec057613ec0615757565b9050602002016020810190613ed59190614c40565b6001600160a01b03168152602081019190915260400160002054613eff60a08a0160808b01615d26565b63ffffffff16613f0f9190615cdc565b1115613f2d5760405162461bcd60e51b8152600401610b2a90615dd2565b613fc0613f3d6020890189614c40565b33613f4b60a08b018b6157c4565b85818110613f5b57613f5b615757565b9050602002016020810190613f709190614c40565b613f7d60c08c018c6157c4565b86818110613f8d57613f8d615757565b905060200201358a8a87818110613fa657613fa6615757565b9050602002016020810190613fbb9190614c40565b6145b1565b600101613e88565b506143bc565b336000908152609a60205260408120546001600160a01b0316905b613ff660a08901896157c4565b90508110156143b9574360a1600061401160a08c018c6157c4565b8581811061402157614021615757565b90506020020160208101906140369190614c40565b6001600160a01b0316815260208101919091526040016000205461406060a08b0160808c01615d26565b63ffffffff166140709190615cdc565b111561408e5760405162461bcd60e51b8152600401610b2a90615dd2565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06140b060a08a018a6157c4565b838181106140c0576140c0615757565b90506020020160208101906140d59190614c40565b6001600160a01b0316036142245760006140f260208a018a614c40565b905060006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016630e81073c8361413360c08e018e6157c4565b8781811061414357614143615757565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015614197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141bb9190615ba4565b6001600160a01b038084166000908152609a602052604090205491925016801561421c5761421c81846141f160a08f018f6157c4565b8881811061420157614201615757565b90506020020160208101906142169190614c40565b85613b93565b5050506143b1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c4623ea13389898581811061426657614266615757565b905060200201602081019061427b9190614c40565b61428860a08d018d6157c4565b8681811061429857614298615757565b90506020020160208101906142ad9190614c40565b6142ba60c08e018e6157c4565b878181106142ca576142ca615757565b60405160e088901b6001600160e01b03191681526001600160a01b03968716600482015294861660248601529290941660448401526020909102013560648201526084019050600060405180830381600087803b15801561432a57600080fd5b505af115801561433e573d6000803e3d6000fd5b505050506001600160a01b038216156143b1576143b1823361436360a08c018c6157c4565b8581811061437357614373615757565b90506020020160208101906143889190614c40565b61439560c08d018d6157c4565b868181106143a5576143a5615757565b90506020020135613b93565b600101613fe9565b50505b6040518181527fc97098c2f658800b4df29001527f7324bcdffcf6e8751a699ab920a1eced5b1d9060200160405180910390a1505050505050565b6001600160a01b0383163b1561451157604051630b135d3f60e11b808252906001600160a01b03851690631626ba7e906144379086908690600401615e5a565b602060405180830381865afa158015614454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144789190615eaf565b6001600160e01b031916146111125760405162461bcd60e51b815260206004820152605360248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a2045524331323731207369676e6174757265206064820152721d995c9a599a58d85d1a5bdb8819985a5b1959606a1b608482015260a401610b2a565b826001600160a01b031661452583836146f1565b6001600160a01b0316146111125760405162461bcd60e51b815260206004820152604760248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a207369676e6174757265206e6f742066726f6d6064820152661039b4b3b732b960c91b608482015260a401610b2a565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeabf196001600160a01b0384160161465c5760405162387b1360e81b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063387b13009061462590889088908790600401615d02565b600060405180830381600087803b15801561463f57600080fd5b505af1158015614653573d6000803e3d6000fd5b505050506146ea565b60405163c608c7f360e01b81526001600160a01b03858116600483015284811660248301526044820184905282811660648301527f0000000000000000000000000000000000000000000000000000000000000000169063c608c7f390608401600060405180830381600087803b1580156146d657600080fd5b505af11580156113d1573d6000803e3d6000fd5b5050505050565b6000806000614700858561470d565b91509150610a338161477b565b60008082516041036147435760208301516040840151606085015160001a61473787828585614931565b94509450505050614774565b825160400361476c5760208301516040840151614761868383614a1e565b935093505050614774565b506000905060025b9250929050565b600081600481111561478f5761478f615ed9565b036147975750565b60018160048111156147ab576147ab615ed9565b036147f85760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610b2a565b600281600481111561480c5761480c615ed9565b036148595760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610b2a565b600381600481111561486d5761486d615ed9565b036148c55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610b2a565b60048160048111156148d9576148d9615ed9565b0361105d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610b2a565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156149685750600090506003614a15565b8460ff16601b1415801561498057508460ff16601c14155b156149915750600090506004614a15565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156149e5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116614a0e57600060019250925050614a15565b9150600090505b94509492505050565b6000806001600160ff1b03831681614a3b60ff86901c601b615cdc565b9050614a4987828885614931565b935093505050935093915050565b60008083601f840112614a6957600080fd5b5081356001600160401b03811115614a8057600080fd5b6020830191508360208260051b850101111561477457600080fd5b60008060208385031215614aae57600080fd5b82356001600160401b03811115614ac457600080fd5b614ad085828601614a57565b90969095509350505050565b6001600160a01b038116811461105d57600080fd5b8035614afc81614adc565b919050565b600080600080600060a08688031215614b1957600080fd5b8535614b2481614adc565b94506020860135614b3481614adc565b93506040860135614b4481614adc565b94979396509394606081013594506080013592915050565b602080825282518282018190526000918401906040840190835b81811015610e52578351835260209384019390920191600101614b76565b600060608284031215614ba657600080fd5b50919050565b60008083601f840112614bbe57600080fd5b5081356001600160401b03811115614bd557600080fd5b60208301915083602082850101111561477457600080fd5b600080600060808486031215614c0257600080fd5b614c0c8585614b94565b925060608401356001600160401b03811115614c2757600080fd5b614c3386828701614bac565b9497909650939450505050565b600060208284031215614c5257600080fd5b8135614c5d81614adc565b9392505050565b600080600060608486031215614c7957600080fd5b8335614c8481614adc565b92506020840135614c9481614adc565b929592945050506040919091013590565b600060208284031215614cb757600080fd5b5035919050565b60008060008060408587031215614cd457600080fd5b84356001600160401b03811115614cea57600080fd5b614cf687828801614a57565b90955093505060208501356001600160401b03811115614d1557600080fd5b614d2187828801614a57565b95989497509550505050565b60008060008060008060008060c0898b031215614d4957600080fd5b8835614d5481614adc565b97506020890135614d6481614adc565b9650604089013595506060890135945060808901356001600160401b03811115614d8d57600080fd5b614d998b828c01614a57565b90955093505060a08901356001600160401b03811115614db857600080fd5b614dc48b828c01614a57565b999c989b5096995094979396929594505050565b6000806000806000806000806080898b031215614df457600080fd5b88356001600160401b03811115614e0a57600080fd5b614e168b828c01614a57565b90995097505060208901356001600160401b03811115614e3557600080fd5b614e418b828c01614a57565b90975095505060408901356001600160401b03811115614e6057600080fd5b614e6c8b828c01614a57565b90955093505060608901356001600160401b03811115614db857600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715614ec357614ec3614e8b565b60405290565b604080519081016001600160401b0381118282101715614ec357614ec3614e8b565b60405160c081016001600160401b0381118282101715614ec357614ec3614e8b565b604051601f8201601f191681016001600160401b0381118282101715614f3557614f35614e8b565b604052919050565b63ffffffff8116811461105d57600080fd5b8035614afc81614f3d565b60006001600160401b03821115614f7357614f73614e8b565b5060051b60200190565b600082601f830112614f8e57600080fd5b8135614fa1614f9c82614f5a565b614f0d565b8082825260208201915060208360051b860101925085831115614fc357600080fd5b602085015b83811015614fe9578035614fdb81614adc565b835260209283019201614fc8565b5095945050505050565b600082601f83011261500457600080fd5b8135615012614f9c82614f5a565b8082825260208201915060208360051b86010192508583111561503457600080fd5b602085015b83811015614fe9578035835260209283019201615039565b600060e0828403121561506357600080fd5b61506b614ea1565b905061507682614af1565b815261508460208301614af1565b602082015261509560408301614af1565b6040820152606082810135908201526150b060808301614f4f565b608082015260a08201356001600160401b038111156150ce57600080fd5b6150da84828501614f7d565b60a08301525060c08201356001600160401b038111156150f957600080fd5b61510584828501614ff3565b60c08301525092915050565b60006020828403121561512357600080fd5b81356001600160401b0381111561513957600080fd5b61514584828501615051565b949350505050565b60006020828403121561515f57600080fd5b813560ff81168114614c5d57600080fd5b60006040828403121561518257600080fd5b61518a614ec9565b9050813561519781614adc565b815260208201356bffffffffffffffffffffffff811681146151b857600080fd5b602082015292915050565b6000602082840312156151d557600080fd5b81356001600160401b038111156151eb57600080fd5b8201601f810184136151fc57600080fd5b803561520a614f9c82614f5a565b8082825260208201915060208360051b85010192508683111561522c57600080fd5b602084015b8381101561531a5780356001600160401b0381111561524f57600080fd5b850160e0818a03601f1901121561526557600080fd5b61526d614eeb565b60208201356001600160401b0381111561528657600080fd5b6152958b602083860101614f7d565b82525060408201356001600160401b038111156152b157600080fd5b6152c08b602083860101614ff3565b6020830152506152d260608301614af1565b60408201526152e48a60808401615170565b60608201526152f560c08301614f4f565b608082015261530660e08301614af1565b60a082015284525060209283019201615231565b509695505050505050565b801515811461105d57600080fd5b60008060008060006080868803121561534b57600080fd5b85356001600160401b0381111561536157600080fd5b860160e0818903121561537357600080fd5b945060208601356001600160401b0381111561538e57600080fd5b61539a88828901614a57565b9095509350506040860135915060608601356153b581615325565b809150509295509295909350565b600080604083850312156153d657600080fd5b82356153e181614adc565b915060208301356153f181614adc565b809150509250929050565b60006040828403121561540e57600080fd5b615416614ec9565b905081356001600160401b0381111561542e57600080fd5b8201601f8101841361543f57600080fd5b80356001600160401b0381111561545857615458614e8b565b61546b601f8201601f1916602001614f0d565b81815285602083850101111561548057600080fd5b81602084016020830137600060209282018301528352928301359282019290925292915050565b600080600080600060a086880312156154bf57600080fd5b85356154ca81614adc565b945060208601356154da81614adc565b935060408601356001600160401b038111156154f557600080fd5b615501888289016153fc565b93505060608601356001600160401b0381111561551d57600080fd5b615529888289016153fc565b95989497509295608001359392505050565b6000806040838503121561554e57600080fd5b823561555981614adc565b915060208301356001600160401b0381111561557457600080fd5b61558085828601614f7d565b9150509250929050565b600081518084526020840193506020830160005b828110156155bc57815186526020958601959091019060010161559e565b5093949350505050565b602081526000614c5d602083018461558a565b600080602083850312156155ec57600080fd5b82356001600160401b0381111561560257600080fd5b614ad085828601614bac565b6000806040838503121561562157600080fd5b823561562c81614adc565b946020939093013593505050565b6000806000806080858703121561565057600080fd5b843561565b81614adc565b935060208501359250604085013561567281614adc565b9396929550929360600135925050565b600081518084526020840193506020830160005b828110156155bc5781516001600160a01b0316865260209586019590910190600101615696565b6040815260006156d06040830185615682565b828103602084015261128f818561558a565b6000806000606084860312156156f757600080fd5b833561570281614adc565b925060208401356001600160401b0381111561571d57600080fd5b615729868287016153fc565b93969395505050506040919091013590565b60006060828403121561574d57600080fd5b614c5d8383614b94565b634e487b7160e01b600052603260045260246000fd5b60208082526019908201527f5061757361626c653a20696e6465782069732070617573656400000000000000604082015260600190565b60008235605e198336030181126157ba57600080fd5b9190910192915050565b6000808335601e198436030181126157db57600080fd5b8301803591506001600160401b038211156157f557600080fd5b6020019150600581901b360382131561477457600080fd5b60608101823561581c81614adc565b6001600160a01b03168252602083013561583581614adc565b6001600160a01b03166020830152604083013561585181614f3d565b63ffffffff811660408401525092915050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6000602082840312156158a557600080fd5b8151614c5d81614adc565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b60208082526037908201527f44656c65676174696f6e4d616e616765723a206f6e6c7953747261746567794d60408201527f616e616765724f72456967656e506f644d616e61676572000000000000000000606082015260800190565b60006020828403121561596957600080fd5b8151614c5d81615325565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b6000823560de198336030181126157ba57600080fd5b6000602082840312156159e457600080fd5b8135614c5d81615325565b80516001600160a01b0390811683526020808301518216908401526040808301519091169083015260608082015190830152608080820151600091615a3b9085018263ffffffff169052565b5060a082015160e060a0850152615a5560e0850182615682565b905060c083015184820360c086015261128f828261558a565b602081526000614c5d60208301846159ef565b602081526000825160e06020840152615a9e610100840182615682565b90506020840151601f19848303016040850152615abb828261558a565b91505060018060a01b036040850151166060840152606084015160018060a01b0381511660808501526bffffffffffffffffffffffff60208201511660a0850152506080840151615b1460c085018263ffffffff169052565b5060a08401516001600160a01b03811660e0850152610a33565b60008060408385031215615b4157600080fd5b8251615b4c81615325565b6020939093015192949293505050565b634e487b7160e01b600052601160045260246000fd5b600060018201615b8457615b84615b5c565b5060010190565b82815260406020820152600061514560408301846159ef565b600060208284031215615bb657600080fd5b5051919050565b600082601f830112615bce57600080fd5b8151615bdc614f9c82614f5a565b8082825260208201915060208360051b860101925085831115615bfe57600080fd5b602085015b83811015614fe9578051835260209283019201615c03565b60008060408385031215615c2e57600080fd5b82516001600160401b03811115615c4457600080fd5b8301601f81018513615c5557600080fd5b8051615c63614f9c82614f5a565b8082825260208201915060208360051b850101925087831115615c8557600080fd5b6020840193505b82841015615cb0578351615c9f81614adc565b825260209384019390910190615c8c565b8095505050505060208301516001600160401b03811115615cd057600080fd5b61558085828601615bbd565b80820180821115610a3757610a37615b5c565b81810381811115610a3757610a37615b5c565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215615d3857600080fd5b8135614c5d81614f3d565b80546001600160a01b0319166001600160a01b0392909216919091179055565b8135615d6e81614adc565b615d788183615d43565b50600181016020830135615d8b81614adc565b615d958183615d43565b506040830135615da481614f3d565b815463ffffffff60a01b191660a09190911b63ffffffff60a01b161790555050565b6000610a373683615051565b6020808252606e90820152600080516020615ef083398151915260408201527f645769746864726177616c3a207769746864726177616c44656c6179426c6f6360608201527f6b7320706572696f6420686173206e6f74207965742070617373656420666f7260808201526d207468697320737472617465677960901b60a082015260c00190565b828152604060208201526000825180604084015260005b81811015615e8e5760208186018101516060868401015201615e71565b506000606082850101526060601f19601f8301168401019150509392505050565b600060208284031215615ec157600080fd5b81516001600160e01b031981168114614c5d57600080fd5b634e487b7160e01b600052602160045260246000fdfe44656c65676174696f6e4d616e616765722e5f636f6d706c6574655175657565a2646970667358221220dc8af488fb28e8a0e8819a77a4ffe5fed5230ed3d4fcd1744be21911972b43ad64736f6c634300081a0033",
        "sourceMap": "1137:48922:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46156:472;;;;;;:::i;:::-;;:::i;:::-;;;1015:25:102;;;1003:2;988:18;46156:472:30;;;;;;;;1131:182:31;;1194:119;1131:182;;49126:630:30;;;;;;:::i;:::-;;:::i;13861:1400::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4814:756::-;;;;;;:::i;:::-;;:::i;:::-;;5826:138:50;;;;;;:::i;:::-;;:::i;22046:571:30:-;;;;;;:::i;:::-;;:::i;3832:392:50:-;;;;;;:::i;:::-;;:::i;23463:243:30:-;;;;;;:::i;:::-;;:::i;43221:159::-;;;;;;:::i;:::-;-1:-1:-1;;;;;43322:26:30;43296:7;43322:26;;;:16;:26;;;;;:51;;;-1:-1:-1;;;43322:51:30;;;;;43221:159;47132:408;;;;;;:::i;:::-;;:::i;649:130:31:-;;699:80;649:130;;3318:607:30;;;;;;:::i;:::-;;:::i;21018:486::-;;;;;;:::i;:::-;;:::i;3363:46:31:-;;;;;;:::i;:::-;;;;;;;;;;;;;;17790:471:30;;;;;;:::i;:::-;;:::i;1703:49:31:-;;;;;;;;-1:-1:-1;;;;;10189:32:102;;;10171:51;;10159:2;10144:18;1703:49:31;9999:229:102;42984:147:30;;;;;;:::i;:::-;-1:-1:-1;;;;;43079:26:30;;;43053:7;43079:26;;;:16;:26;;;;;:45;;;;;42984:147;42038:123;;;;;;:::i;:::-;;:::i;:::-;;;10715:14:102;;10708:22;10690:41;;10678:2;10663:18;42038:123:30;10550:187:102;878:152:31;;939:91;878:152;;1911:49;;;;;1885:74:30;;1944:15;1885:74;;4299:136:50;;;:::i;46694:150:30:-;;;;;;:::i;:::-;;:::i;5606:149:50:-;;;;;;:::i;:::-;5724:7;;5695:1;:10;;;;;;;;5724:14;;;5723:24;;5606:149;5418:87;5491:7;;5418:87;;18498:1978:30;;;;;;:::i;:::-;;:::i;42749:143::-;;;;;;:::i;:::-;-1:-1:-1;;;;;42842:26:30;;;42816:7;42842:26;;;:16;:26;;;;;:43;;;42749:143;16703:353;;;;;;:::i;:::-;;:::i;22825:167::-;;;;;;:::i;:::-;;:::i;3159:46:31:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3159:46:31;;;42268:148:30;;;;;;:::i;:::-;;:::i;2071:101:0:-;;;:::i;2612:71:31:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;9685:1244:30;;;;;;:::i;:::-;;:::i;1825:37:50:-;;;;;-1:-1:-1;;;;;1825:37:50;;;1441:85:0;1513:6;;-1:-1:-1;;;;;1513:6:0;1441:85;;43470:368:30;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2027:104::-;;2088:42;2027:104;;6467:262;;;;;;:::i;:::-;;:::i;4904:62:31:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1811:33;;;;;4607:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3852:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4451:39;;;;;;5466:66;;;;;;:::i;:::-;;;;;;;;;;;;;;42519:140:30;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42626:26:30;;;;;:16;:26;;;;;42619:33;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;42619:33:30;;;;;;;;;;42519:140;;;;;25283:13:102;;-1:-1:-1;;;;;25279:39:102;;;25261:58;;25379:4;25367:17;;;25361:24;25357:50;;;25335:20;;;25328:80;25456:17;;;25450:24;25476:10;25446:41;25424:20;;;25417:71;25249:2;25234:18;42519:140:30;25049:445:102;47970:560:30;;;;;;:::i;:::-;;:::i;2051:60:31:-;;2105:6;2051:60;;44063:1765:30;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;11254:2250::-;;;;;;:::i;:::-;;:::i;7732:352::-;;;;;;:::i;:::-;;:::i;5982:265::-;;;;;;:::i;:::-;;:::i;2321:198:0:-;;;;;;:::i;:::-;;:::i;41699:227:30:-;;;:::i;4911:437:50:-;;;;;;:::i;:::-;;:::i;46156:472:30:-;46283:24;;46238:7;;;46317:273;46337:21;;;46317:273;;;46379:27;46409:29;:44;46439:10;;46450:1;46439:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;46409:44:30;-1:-1:-1;;;;;46409:44:30;;;;;;;;;;;;;46379:74;;46493:15;46471:19;:37;46467:113;;;46546:19;46528:37;;46467:113;-1:-1:-1;46360:3:30;;46317:273;;;-1:-1:-1;46606:15:30;-1:-1:-1;46156:472:30;;;;;:::o;49126:630::-;49449:101;;;1194:119:31;49449:101:30;;;;28497:25:102;;;;-1:-1:-1;;;;;28558:32:102;;;28538:18;;;28531:60;28627:32;;;28607:18;;;28600:60;28696:32;;28676:18;;;28669:60;28745:19;;;28738:35;;;28789:19;;;;28782:35;;;49449:101:30;;;;;;;;;;28469:19:102;;;;49449:101:30;;;49426:134;;;;;-1:-1:-1;;;49675:17:30;:15;:17::i;:::-;49646:67;;-1:-1:-1;;;49646:67:30;;;29086:27:102;29129:11;;;29122:27;;;;29165:12;;;29158:28;;;29202:12;;49646:67:30;;;;;;-1:-1:-1;;49646:67:30;;;;;;49636:78;;49646:67;49636:78;;;;;49126:630;-1:-1:-1;;;;;;;;49126:630:30:o;13861:1400::-;5724:7:50;;14026:16:30;;1520:1;;5695:10:50;5724:14;;;5723:24;2759:52;;;;-1:-1:-1;;;2759:52:50;;;;;;;:::i;:::-;;;;;;;;;14054:32:30::1;14103:22:::0;-1:-1:-1;;;;;14089:44:30;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;14089:44:30::1;-1:-1:-1::0;14174:10:30::1;14143:16;14162:23:::0;;;:11:::1;:23;::::0;;;;;14054:79;;-1:-1:-1;;;;;;14162:23:30;;::::1;::::0;14196:1027:::1;14216:33:::0;;::::1;14196:1027;;;14325:22;;14348:1;14325:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:32;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;:39;;14278:22;;14301:1;14278:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:36;::::0;;::::1;:::i;:::-;:43;;:86;14270:155;;;::::0;-1:-1:-1;;;14270:155:30;;31244:2:102;14270:155:30::1;::::0;::::1;31226:21:102::0;31283:2;31263:18;;;31256:30;31322:34;31302:18;;;31295:62;31393:26;31373:18;;;31366:54;31437:19;;14270:155:30::1;31042:420:102::0;14270:155:30::1;14487:10;14447:22:::0;;14470:1;14447:25;;::::1;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:36;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;14447:50:30::1;;14439:123;;;::::0;-1:-1:-1;;;14439:123:30;;31669:2:102;14439:123:30::1;::::0;::::1;31651:21:102::0;31708:2;31688:18;;;31681:30;31747:34;31727:18;;;31720:62;31818:30;31798:18;;;31791:58;31866:19;;14439:123:30::1;31467:424:102::0;14439:123:30::1;14903:309;14961:10;14999:8;15037:22;;15060:1;15037:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:36;::::0;;;;;::::1;;;:::i;:::-;15103:22;;15126:1;15103:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:36;::::0;;::::1;:::i;:::-;14903:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;15165:22:30;;-1:-1:-1;15165:22:30;;-1:-1:-1;15188:1:30;;-1:-1:-1;15165:25:30;;::::1;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:32;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;14903:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;14903:31:30::1;::::0;-1:-1:-1;;;14903:309:30:i:1;:::-;14882:15;14898:1;14882:18;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:330;14251:3:::1;;14196:1027;;;-1:-1:-1::0;15239:15:30;;13861:1400;-1:-1:-1;;;;;13861:1400:30:o;4814:756::-;5003:10;5043:1;4986:28;;;:16;:28;;;;;:45;-1:-1:-1;;;;;4986:45:30;:59;4965:175;;;;-1:-1:-1;;;4965:175:30;;32098:2:102;4965:175:30;;;32080:21:102;32137:2;32117:18;;;32110:30;32176:34;32156:18;;;32149:62;32247:34;32227:18;;;32220:62;-1:-1:-1;;;32298:19:102;;;32291:36;32344:19;;4965:175:30;31896:473:102;4965:175:30;5150:59;5170:10;5182:26;5150:19;:59::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;5331:70:30;5341:10;;5365:23;5398:1;5331:9;:70::i;:::-;5458:10;-1:-1:-1;;;;;5439:58:30;;5470:26;5439:58;;;;;;:::i;:::-;;;;;;;;5539:10;-1:-1:-1;;;;;5512:51:30;;5551:11;;5512:51;;;;;;;:::i;:::-;;;;;;;;4955:615;4814:756;;;:::o;5826:138:50:-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:50;-1:-1:-1;;;;;2285:23:50;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:50;:10;-1:-1:-1;;;;;2271:39:50;;2263:94;;;;-1:-1:-1;;;2263:94:50;;;;;;;:::i;:::-;5920:37:::1;5939:17;5920:18;:37::i;:::-;5826:138:::0;:::o;22046:571:30:-;2353:10;-1:-1:-1;;;;;2375:15:30;2353:38;;;:80;;-1:-1:-1;2395:10:30;-1:-1:-1;;;;;2417:15:30;2395:38;;2353:80;2332:182;;;;-1:-1:-1;;;2332:182:30;;;;;;;:::i;:::-;22274:19:::1;22286:6;22274:11;:19::i;:::-;22270:341;;;-1:-1:-1::0;;;;;22328:19:30;;::::1;22309:16;22328:19:::0;;;:11:::1;:19;::::0;;;;;::::1;22425:175;22328:19:::0;22340:6;22545:8;22579:6;22425:23:::1;:175::i;:::-;22295:316;22270:341;22046:571:::0;;;:::o;3832:392:50:-;2125:14;;:35;;-1:-1:-1;;;2125:35:50;;2149:10;2125:35;;;10171:51:102;-1:-1:-1;;;;;2125:14:50;;;;:23;;10144:18:102;;2125:35:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:50;;;;;;;:::i;:::-;4064:7:::1;::::0;4034:25;;::::1;4033:38;4025:107;;;::::0;-1:-1:-1;;;4025:107:50;;35406:2:102;4025:107:50::1;::::0;::::1;35388:21:102::0;35445:2;35425:18;;;35418:30;35484:34;35464:18;;;35457:62;35555:26;35535:18;;;35528:54;35599:19;;4025:107:50::1;35204:420:102::0;4025:107:50::1;4142:7;:25:::0;;;4182:35:::1;::::0;1015:25:102;;;4189:10:50::1;::::0;4182:35:::1;::::0;1003:2:102;988:18;4182:35:50::1;;;;;;;;3832:392:::0;:::o;23463:243:30:-;1334:13:0;:11;:13::i;:::-;23631:68:30::1;23665:10;;23677:21;;23631:33;:68::i;47132:408::-:0;-1:-1:-1;;;;;47379:19:30;;47287:7;47379:19;;;:11;:19;;;;;;47452:81;47391:6;47379:19;47516:8;47526:6;47452:35;:81::i;:::-;47445:88;47132:408;-1:-1:-1;;;;;47132:408:30:o;3318:607::-;3111:19:2;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:2;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:2;1476:19:4;:23;;;3219:66:2;;-1:-1:-1;3268:12:2;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:2;;35831:2:102;3157:201:2;;;35813:21:102;35870:2;35850:18;;;35843:30;35909:34;35889:18;;;35882:62;-1:-1:-1;;;35960:18:102;;;35953:44;36014:19;;3157:201:2;35629:410:102;3157:201:2;3368:12;:16;;-1:-1:-1;;3368:16:2;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:2;;;;;3394:65;3619:55:30::1;3637:15;3654:19;3619:17;:55::i;:::-;3704:27;:25;:27::i;:::-;3684:17;:47:::0;3741:32:::1;3760:12:::0;3741:18:::1;:32::i;:::-;3783:55;3812:25;3783:28;:55::i;:::-;3848:70;3882:11;;3895:22;;3848:33;:70::i;:::-;3483:14:2::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:2;;;3553:14;;-1:-1:-1;36196:36:102;;3553:14:2;;36184:2:102;36169:18;3553:14:2;;;;;;;3479:99;3101:483;3318:607:30;;;;;;;;:::o;21018:486::-;2353:10;-1:-1:-1;;;;;2375:15:30;2353:38;;;:80;;-1:-1:-1;2395:10:30;-1:-1:-1;;;;;2417:15:30;2395:38;;2353:80;2332:182;;;;-1:-1:-1;;;2332:182:30;;;;;;;:::i;:::-;21246:19:::1;21258:6;21246:11;:19::i;:::-;21242:256;;;-1:-1:-1::0;;;;;21300:19:30;;::::1;21281:16;21300:19:::0;;;:11:::1;:19;::::0;;;;;::::1;21390:97;21300:19:::0;21312:6;21461:8;21479:6;21390:23:::1;:97::i;17790:471::-:0;5724:7:50;;1664:1:30;;5695:10:50;5724:14;;;5723:24;2759:52;;;;-1:-1:-1;;;2759:52:50;;;;;;;:::i;:::-;1815:1:3::1;2569:7;;:19:::0;2561:63:::1;;;::::0;-1:-1:-1;;;2561:63:3;;36445:2:102;2561:63:3::1;::::0;::::1;36427:21:102::0;36484:2;36464:18;;;36457:30;36523:33;36503:18;;;36496:61;36574:18;;2561:63:3::1;36243:355:102::0;2561:63:3::1;1815:1;2699:7;:18:::0;18087:9:30::2;18082:173;18102:22:::0;;::::2;18082:173;;;18145:99;18171:11;;18183:1;18171:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;18187:6;;18194:1;18187:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;18198:22;;18221:1;18198:25;;;;;;;:::i;:::-;;;;;;;18225:15;;18241:1;18225:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18145:25;:99::i;:::-;18126:3;;18082:173;;;-1:-1:-1::0;;1772:1:3::1;2872:7;:22:::0;-1:-1:-1;;;;;;;;17790:471:30:o;42038:123::-;-1:-1:-1;;;;;42120:19:30;;;42096:4;42120:19;;;:11;:19;;;;;;;:33;;;42038:123::o;4299:136:50:-;2125:14;;:35;;-1:-1:-1;;;2125:35:50;;2149:10;2125:35;;;10171:51:102;-1:-1:-1;;;;;2125:14:50;;;;:23;;10144:18:102;;2125:35:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:50;;;;;;;:::i;:::-;-1:-1:-1;;4349:7:50::1;:27:::0;;;4391:37:::1;::::0;1015:25:102;;;4398:10:50::1;::::0;4391:37:::1;::::0;1003:2:102;988:18;4391:37:50::1;;;;;;;4299:136::o:0;46694:150:30:-;46778:7;46825:10;46814:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;46804:33;;;;;;46797:40;;46694:150;;;:::o;18498:1978::-;18637:9;18633:1828;18656:20;:27;18652:1;:31;18633:1828;;;18700:77;18780:20;18801:1;18780:23;;;;;;;;:::i;:::-;;;;;;;18700:103;;18876:14;18892:25;18921:15;-1:-1:-1;;;;;18921:39:30;;18961:19;18921:60;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18875:106;;;;19061:9;19057:1335;;;19107:26;;;;;-1:-1:-1;;;;;19236:35:30;;19090:14;19236:35;;;:27;:35;;;;;;;19107:26;;19236:35;;;19289:37;19236:35;19289:37;:::i;:::-;;;;;;19345:36;19384:448;;;;;;;;19425:6;-1:-1:-1;;;;;19384:448:30;;;;;19466:19;:36;;;-1:-1:-1;;;;;19384:448:30;;;;;19536:19;:38;;;:49;;;-1:-1:-1;;;;;19384:448:30;;;;;19614:5;19384:448;;;;19653:19;:40;;;19384:448;;;;;;19727:19;:30;;;19384:448;;;;19787:19;:26;;;19384:448;;;19345:487;;19893:15;19911:43;19935:18;19911:23;:43::i;:::-;20085:27;;;;:18;:27;;;;;;19893:61;;-1:-1:-1;20085:27:30;;20084:28;20076:110;;;;-1:-1:-1;;;20076:110:30;;40826:2:102;20076:110:30;;;40808:21:102;40865:2;40845:18;;;40838:30;40904:34;40884:18;;;40877:62;40975:34;40955:18;;;40948:62;-1:-1:-1;;;41026:19:102;;;41019:36;41072:19;;20076:110:30;40624:473:102;20076:110:30;20204:27;;;;:18;:27;;;;;;;:34;;-1:-1:-1;;20204:34:30;20234:4;20204:34;;;20262:45;;;;;20223:7;;20288:18;;20262:45;:::i;:::-;;;;;;;;20331:46;;;41619:25:102;;;41675:2;41660:18;;41653:34;;;20331:46:30;;41592:18:102;20331:46:30;;;;;;;19072:1320;;;;19057:1335;20433:3;;;;;18686:1775;;;18633:1828;;;;18498:1978;:::o;16703:353::-;5724:7:50;;1664:1:30;;5695:10:50;5724:14;;;5723:24;2759:52;;;;-1:-1:-1;;;2759:52:50;;;;;;;:::i;:::-;1815:1:3::1;2569:7;;:19:::0;2561:63:::1;;;::::0;-1:-1:-1;;;2561:63:3;;36445:2:102;2561:63:3::1;::::0;::::1;36427:21:102::0;36484:2;36464:18;;;36457:30;36523:33;36503:18;;;36496:61;36574:18;;2561:63:3::1;36243:355:102::0;2561:63:3::1;1815:1;2699:7;:18:::0;16965:84:30::2;16991:10:::0;17003:6;;17011:20;17033:15;16965:25:::2;:84::i;:::-;-1:-1:-1::0;;1772:1:3::1;2872:7;:22:::0;-1:-1:-1;;;;16703:353:30:o;22825:167::-;1334:13:0;:11;:13::i;:::-;22928:57:30::1;22957:27;22928:28;:57::i;42268:148::-:0;-1:-1:-1;;;;;42351:26:30;;;42327:4;42351:26;;;:16;:26;;;;;:43;;:57;;;42268:148::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;9685:1244:30:-;10039:15;10004:24;:31;;;:50;;9983:162;;;;-1:-1:-1;;;9983:162:30;;41900:2:102;9983:162:30;;;41882:21:102;41939:2;41919:18;;;41912:30;41978:34;41958:18;;;41951:62;42049:34;42029:18;;;42022:62;-1:-1:-1;;;42100:19:102;;;42093:32;42142:19;;9983:162:30;41698:469:102;9983:162:30;10226:26;10255:11;:19;10267:6;-1:-1:-1;;;;;10255:19:30;-1:-1:-1;;;;;10255:19:30;;;;;;;;;;;;;10226:48;;10284:24;10311:164;10360:6;10380:18;10412:8;10434:24;:31;;;10311:35;:164::i;:::-;-1:-1:-1;;;;;10509:19:30;;;;;;:11;:19;;;;;10552:1;10531:22;;10509:44;;10699:34;;10284:191;;-1:-1:-1;10628:106:30;;10521:6;;10284:191;;10628:44;:106::i;:::-;10853:69;10863:6;10871:8;10881:26;10909:12;10853:9;:69::i;:::-;9935:994;;9685:1244;;;;;:::o;43470:368::-;43589:16;43617:23;43657:10;:17;-1:-1:-1;;;;;43643:32:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43643:32:30;;43617:58;;43690:9;43685:124;43709:10;:17;43705:1;:21;43685:124;;;-1:-1:-1;;;;;43759:24:30;;;;;;:14;:24;;;;;43784:13;;43759:24;;;43784:10;;43795:1;;43784:13;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;43759:39:30;-1:-1:-1;;;;;43759:39:30;;;;;;;;;;;;;43747:6;43754:1;43747:9;;;;;;;;:::i;:::-;;;;;;;;;;:51;43728:3;;43685:124;;6467:262;6558:22;6569:10;6558;:22::i;:::-;6550:106;;;;-1:-1:-1;;;6550:106:30;;42374:2:102;6550:106:30;;;42356:21:102;42413:2;42393:18;;;42386:30;42452:34;42432:18;;;42425:62;42523:34;42503:18;;;42496:62;-1:-1:-1;;;42574:19:102;;;42567:38;42622:19;;6550:106:30;42172:475:102;6550:106:30;6698:10;-1:-1:-1;;;;;6671:51:30;;6710:11;;6671:51;;;;;;;:::i;:::-;;;;;;;;6467:262;;:::o;47970:560::-;48252:78;;;939:91:31;48252:78:30;;;;42911:25:102;;;;-1:-1:-1;;;;;42972:32:102;;;42952:18;;;42945:60;43041:32;;43021:18;;;43014:60;43090:18;;;43083:34;;;43133:19;;;;43126:35;;;48252:78:30;;;;;;;;;;42883:19:102;;;;48252:78:30;;;48229:111;;;;;-1:-1:-1;;;48453:17:30;:15;:17::i;:::-;48424:65;;-1:-1:-1;;;48424:65:30;;;29086:27:102;29129:11;;;29122:27;;;;29165:12;;;29158:28;;;29202:12;;48424:65:30;;;;;;-1:-1:-1;;48424:65:30;;;;;;48414:76;;48424:65;48414:76;;;;;47970:560;-1:-1:-1;;;;;;;47970:560:30:o;44063:1765::-;44264:38;;-1:-1:-1;;;44264:38:30;;-1:-1:-1;;;;;10189:32:102;;;44264:38:30;;;10171:51:102;44130:18:30;;;;-1:-1:-1;;44264:15:30;:30;;;;;;10144:18:102;;44264:38:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;44410:35;;-1:-1:-1;;;44410:35:30;;-1:-1:-1;;;;;10189:32:102;;;44410:35:30;;;10171:51:102;44245:57:30;;-1:-1:-1;;;;;44410:15:30;:27;;;;;;10144:18:102;;44410:35:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;44410:35:30;;;;;;;;;;;;:::i;:::-;44312:133;;;;44558:1;44545:9;:14;44541:98;;44583:21;;44606;;-1:-1:-1;44063:1765:30;-1:-1:-1;;;44063:1765:30:o;44541:98::-;44649:29;44688:23;44726:21;:28;44758:1;44726:33;44722:1062;;44861:18;;;44877:1;44861:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;44902:16:30;;;44916:1;44902:16;;;;;;;;;44848:31;;-1:-1:-1;44916:1:30;-1:-1:-1;44902:16:30;;;;;;;;;;;-1:-1:-1;44902:16:30;44893:25;;2088:42;44932:10;44943:1;44932:13;;;;;;;;:::i;:::-;;;;;;:38;-1:-1:-1;;;;;44932:38:30;;;-1:-1:-1;;;;;44932:38:30;;;;;45004:9;44984:6;44991:1;44984:9;;;;;;;;:::i;:::-;;;;;;:30;;;;;44722:1062;;;45162:28;;:32;;45193:1;45162:32;:::i;:::-;-1:-1:-1;;;;;45146:49:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;45146:49:30;;45133:62;;45232:10;:17;-1:-1:-1;;;;;45218:32:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;45218:32:30;;45209:41;;45353:9;45348:219;45372:21;:28;45368:1;:32;45348:219;;;45438:21;45460:1;45438:24;;;;;;;;:::i;:::-;;;;;;;45422:10;45433:1;45422:13;;;;;;;;:::i;:::-;;;;;;:40;-1:-1:-1;;;;;45422:40:30;;;-1:-1:-1;;;;;45422:40:30;;;;;45492:21;45514:1;45492:24;;;;;;;;:::i;:::-;;;;;;;45480:6;45487:1;45480:9;;;;;;;;:::i;:::-;;;;;;;;;;:36;45547:3;;45348:219;;;;2088:42;45651:10;45682:1;45662:10;:17;:21;;;;:::i;:::-;45651:33;;;;;;;;:::i;:::-;;;;;;:58;-1:-1:-1;;;;;45651:58:30;;;-1:-1:-1;;;;;45651:58:30;;;;;45763:9;45723:6;45750:1;45730:10;:17;:21;;;;:::i;:::-;45723:29;;;;;;;;:::i;:::-;;;;;;:50;;;;;44722:1062;45802:10;;45814:6;;-1:-1:-1;44063:1765:30;-1:-1:-1;;;;;44063:1765:30:o;11254:2250::-;5724:7:50;;11357:32:30;;1520:1;;5695:10:50;5724:14;;;5723:24;2759:52;;;;-1:-1:-1;;;2759:52:50;;;;;;;:::i;:::-;11409:19:30::1;11421:6;11409:11;:19::i;:::-;11401:100;;;::::0;-1:-1:-1;;;11401:100:30;;45805:2:102;11401:100:30::1;::::0;::::1;45787:21:102::0;45844:2;45824:18;;;45817:30;;;45883:34;45863:18;;;45856:62;45954:34;45934:18;;;45927:62;-1:-1:-1;;;46005:19:102;;;45998:35;46050:19;;11401:100:30::1;45603:472:102::0;11401:100:30::1;11520:18;11531:6;11520:10;:18::i;:::-;11519:19;11511:93;;;::::0;-1:-1:-1;;;11511:93:30;;46282:2:102;11511:93:30::1;::::0;::::1;46264:21:102::0;46321:2;46301:18;;;46294:30;46360:34;46340:18;;;46333:62;46431:31;46411:18;;;46404:59;46480:19;;11511:93:30::1;46080:425:102::0;11511:93:30::1;-1:-1:-1::0;;;;;11622:20:30;::::1;11614:93;;;::::0;-1:-1:-1;;;11614:93:30;;46712:2:102;11614:93:30::1;::::0;::::1;46694:21:102::0;46751:2;46731:18;;;46724:30;46790:34;46770:18;;;46763:62;46861:30;46841:18;;;46834:58;46909:19;;11614:93:30::1;46510:424:102::0;11614:93:30::1;-1:-1:-1::0;;;;;11736:19:30;;::::1;11717:16;11736:19:::0;;;:11:::1;:19;::::0;;;;;;;::::1;::::0;11786:10:::1;:20;::::0;:62:::1;;-1:-1:-1::0;11826:10:30::1;-1:-1:-1::0;;;;;11826:22:30;::::1;;11786:62;:141;;;-1:-1:-1::0;;;;;;11882:26:30;;::::1;;::::0;;;:16:::1;:26;::::0;;;;:45:::1;;::::0;::::1;11868:10;:59;11786:141;11765:249;;;::::0;-1:-1:-1;;;11765:249:30;;47141:2:102;11765:249:30::1;::::0;::::1;47123:21:102::0;47180:2;47160:18;;;47153:30;47219:34;47199:18;;;47192:62;47290:31;47270:18;;;47263:59;47339:19;;11765:249:30::1;46939:425:102::0;11765:249:30::1;12192:29;12223:23:::0;12250:28:::1;12271:6;12250:20;:28::i;:::-;12191:87:::0;;-1:-1:-1;12191:87:30;-1:-1:-1;12376:10:30::1;-1:-1:-1::0;;;;;12376:20:30;::::1;;12372:96;;12448:8;-1:-1:-1::0;;;;;12417:40:30::1;12440:6;-1:-1:-1::0;;;;;12417:40:30::1;;;;;;;;;;;12372:96;12542:8;-1:-1:-1::0;;;;;12516:35:30::1;12534:6;-1:-1:-1::0;;;;;12516:35:30::1;;;;;;;;;;;-1:-1:-1::0;;;;;12561:19:30;::::1;12591:1;12561:19:::0;;;:11:::1;:19;::::0;;;;:32;;-1:-1:-1;;;;;;12561:32:30::1;::::0;;12697:17;;:22;;12693:772:::1;;12753:16;::::0;;12767:1:::1;12753:16:::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;12693:772:30::1;;;12832:10;:17;-1:-1:-1::0;;;;;12818:32:30::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;12818:32:30::1;;12800:50;;12869:9;12864:591;12888:10;:17;12884:1;:21;12864:591;;;12966:18;::::0;;12982:1:::1;12966:18:::0;;;;;::::1;::::0;;;12930:33:::1;::::0;12966:18:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;13033:16:30::1;::::0;;13047:1:::1;13033:16:::0;;;;;::::1;::::0;;;12930:54;;-1:-1:-1;13002:28:30::1;::::0;13033:16;-1:-1:-1;13033:16:30::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;13033:16:30::1;13002:47;;13087:10;13098:1;13087:13;;;;;;;;:::i;:::-;;;;;;;13067:14;13082:1;13067:17;;;;;;;;:::i;:::-;;;;;;:33;-1:-1:-1::0;;;;;13067:33:30::1;;;-1:-1:-1::0;;;;;13067:33:30::1;;;::::0;::::1;13135:6;13142:1;13135:9;;;;;;;;:::i;:::-;;;;;;;13118:11;13130:1;13118:14;;;;;;;;:::i;:::-;;;;;;:26;;;::::0;::::1;13184:256;13246:6;13284:8;13326:6;13366:14;13410:11;13184:31;:256::i;:::-;13163:15;13179:1;13163:18;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:277;-1:-1:-1;;12907:3:30::1;;12864:591;;;;12693:772;13475:22;;;11254:2250:::0;;;;:::o;7732:352::-;8004:73;8014:10;8026:8;8036:26;8064:12;8004:9;:73::i;5982:265::-;6085:22;6096:10;6085;:22::i;:::-;6077:102;;;;-1:-1:-1;;;6077:102:30;;47571:2:102;6077:102:30;;;47553:21:102;47610:2;47590:18;;;47583:30;47649:34;47629:18;;;47622:62;47720:34;47700:18;;;47693:62;-1:-1:-1;;;47771:19:102;;;47764:34;47815:19;;6077:102:30;47369:471:102;6077:102:30;6189:51;6209:10;6221:18;6189:19;:51::i;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;48047:2:102;2401:73:0::1;::::0;::::1;48029:21:102::0;48086:2;48066:18;;;48059:30;48125:34;48105:18;;;48098:62;-1:-1:-1;;;48176:18:102;;;48169:36;48222:19;;2401:73:0::1;47845:402:102::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;41699:227:30:-:0;41747:7;41787:17;41770:13;:34;41766:154;;-1:-1:-1;41827:17:30;;;41699:227::o;41766:154::-;41882:27;:25;:27::i;:::-;41875:34;;41699:227;:::o;4911:437:50:-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:50;-1:-1:-1;;;;;2285:23:50;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:50;:10;-1:-1:-1;;;;;2271:39:50;;2263:94;;;;-1:-1:-1;;;2263:94:50;;;;;;;:::i;:::-;5164:7:::1;;5163:8;5141:15;5140:16;5128:7;;5127:8;5126:31;5125:47;5104:150;;;::::0;-1:-1:-1;;;5104:150:50;;48454:2:102;5104:150:50::1;::::0;::::1;48436:21:102::0;48493:2;48473:18;;;48466:30;48532:34;48512:18;;;48505:62;48603:26;48583:18;;;48576:54;48647:19;;5104:150:50::1;48252:420:102::0;5104:150:50::1;5264:7;:25:::0;;;5304:37:::1;::::0;1015:25:102;;;5313:10:50::1;::::0;5304:37:::1;::::0;1003:2:102;988:18;5304:37:50::1;869:177:102::0;35419:2938:30;35636:7;-1:-1:-1;;;;;35663:20:30;;35655:113;;;;-1:-1:-1;;;35655:113:30;;48879:2:102;35655:113:30;;;48861:21:102;48918:2;48898:18;;;48891:30;48957:34;48937:18;;;48930:62;49028:34;49008:18;;;49001:62;-1:-1:-1;;;49079:19:102;;;49072:47;49136:19;;35655:113:30;48677:484:102;35655:113:30;35786:10;:17;35807:1;35786:22;35778:112;;;;-1:-1:-1;;;35778:112:30;;49368:2:102;35778:112:30;;;49350:21:102;49407:2;49387:18;;;49380:30;49446:34;49426:18;;;49419:62;49517:34;49497:18;;;49490:62;-1:-1:-1;;;49568:19:102;;;49561:44;49622:19;;35778:112:30;49166:481:102;35778:112:30;36048:9;36043:1588;36067:10;:17;36063:1;:21;36043:1588;;;-1:-1:-1;;;;;36151:22:30;;;36147:264;;36193:203;36249:8;36287:6;36325:10;36336:1;36325:13;;;;;;;;:::i;:::-;;;;;;;36368:6;36375:1;36368:9;;;;;;;;:::i;:::-;;;;;;;36193:23;:203::i;:::-;2088:42;-1:-1:-1;;;;;36502:39:30;:10;36513:1;36502:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;36502:39:30;;36498:1091;;37010:15;-1:-1:-1;;;;;37010:28:30;;37039:6;37047;37054:1;37047:9;;;;;;;;:::i;:::-;;;;;;;37010:47;;;;;;;;;;;;;;;-1:-1:-1;;;;;49844:32:102;;;;49826:51;;49908:2;49893:18;;49886:34;49814:2;49799:18;;49652:274;37010:47:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36498:1091;;;37135:10;-1:-1:-1;;;;;37125:20:30;:6;-1:-1:-1;;;;;37125:20:30;;:84;;;;37150:15;-1:-1:-1;;;;;37150:44:30;;37195:10;37206:1;37195:13;;;;;;;;:::i;:::-;;;;;;;37150:59;;;;;;;;;;;;;;-1:-1:-1;;;;;10189:32:102;;;;10171:51;;10159:2;10144:18;;9999:229;37150:59:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37149:60;37125:84;37096:287;;;;-1:-1:-1;;;37096:287:30;;50133:2:102;37096:287:30;;;50115:21:102;50172:3;50152:18;;;50145:31;;;50212:34;50192:18;;;50185:62;50283:34;50263:18;;;50256:62;50355:34;50334:19;;;50327:63;50427:34;50406:19;;;50399:63;-1:-1:-1;;;50478:19:102;;;50471:35;50523:19;;37096:287:30;49931:617:102;37096:287:30;37512:15;-1:-1:-1;;;;;37512:28:30;;37541:6;37549:10;37560:1;37549:13;;;;;;;;:::i;:::-;;;;;;;37564:6;37571:1;37564:9;;;;;;;;:::i;:::-;;;;;;;37512:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36498:1091;37615:3;;36043:1588;;;-1:-1:-1;;;;;;37718:35:30;;37702:13;37718:35;;;:27;:35;;;;;;;;;;;37763:37;37718:35;37763:37;:::i;:::-;;;;;;37811:28;37842:257;;;;;;;;37875:6;-1:-1:-1;;;;;37842:257:30;;;;;37908:8;-1:-1:-1;;;;;37842:257:30;;;;;37942:10;-1:-1:-1;;;;;37842:257:30;;;;;37973:5;37842:257;;;;38011:12;37842:257;;;;;;38050:10;37842:257;;;;38082:6;37842:257;;;37811:288;;38110:22;38135:35;38159:10;38135:23;:35::i;:::-;38218:34;;;;:18;:34;;;;;;;:41;;-1:-1:-1;;38218:41:30;38255:4;38218:41;;;38275:44;38110:60;;-1:-1:-1;38275:44:30;;;;38110:60;;38308:10;;38275:44;:::i;:::-;;;;;;;;38336:14;35419:2938;-1:-1:-1;;;;;;;;35419:2938:30:o;24299:907::-;24478:1;24431:35;;;;:18;:35;:::i;:::-;-1:-1:-1;;;;;24431:49:30;;24410:180;;;;-1:-1:-1;;;24410:180:30;;51150:2:102;24410:180:30;;;51132:21:102;51189:2;51169:18;;;51162:30;51228:34;51208:18;;;51201:62;51299:34;51279:18;;;51272:62;-1:-1:-1;;;51350:19:102;;;51343:51;51411:19;;24410:180:30;50948:488:102;24410:180:30;1944:15;24621:43;;;;;;;;:::i;:::-;:79;;;;24600:234;;;;-1:-1:-1;;;24600:234:30;;51893:2:102;24600:234:30;;;51875:21:102;51932:3;51912:18;;;51905:31;51972:34;51952:18;;;51945:62;52043:34;52023:18;;;52016:62;52115:34;52094:19;;;52087:63;-1:-1:-1;;;52166:19:102;;;52159:43;52219:19;;24600:234:30;51691:553:102;24600:234:30;-1:-1:-1;;;;;24912:26:30;;;;;;:16;:26;;;;;;;:51;;;-1:-1:-1;;;24912:51:30;;;;;24865:43;;;;;;;;;:::i;:::-;:98;;;;24844:228;;;;-1:-1:-1;;;24844:228:30;;52451:2:102;24844:228:30;;;52433:21:102;52490:2;52470:18;;;52463:30;52529:34;52509:18;;;52502:62;52600:34;52580:18;;;52573:62;-1:-1:-1;;;52651:19:102;;;52644:50;52711:19;;24844:228:30;52249:487:102;24844:228:30;-1:-1:-1;;;;;25082:26:30;;;;;;:16;:26;;;;;25111:18;;25082:47;25111:18;25082:26;:47;:::i;:::-;-1:-1:-1;;25144:55:30;;25168:10;;25144:55;;;;25180:18;;25144:55;:::i;26036:2921::-;5724:7:50;;1383:1:30;;5695::50;5724:14;;;5723:24;2759:52;;;;-1:-1:-1;;;2759:52:50;;;;;;;:::i;:::-;26273:19:30::1;26285:6;26273:11;:19::i;:::-;26272:20;26264:98;;;::::0;-1:-1:-1;;;26264:98:30;;53906:2:102;26264:98:30::1;::::0;::::1;53888:21:102::0;53945:2;53925:18;;;53918:30;53984:34;53964:18;;;53957:62;54055:34;54035:18;;;54028:62;-1:-1:-1;;;54106:19:102;;;54099:32;54148:19;;26264:98:30::1;53704:469:102::0;26264:98:30::1;26380:20;26391:8;26380:10;:20::i;:::-;26372:102;;;::::0;-1:-1:-1;;;26372:102:30;;54380:2:102;26372:102:30::1;::::0;::::1;54362:21:102::0;54419:2;54399:18;;;54392:30;54458:34;54438:18;;;54431:62;54529:34;54509:18;;;54502:62;-1:-1:-1;;;54580:19:102;;;54573:36;54626:19;;26372:102:30::1;54178:473:102::0;26372:102:30::1;-1:-1:-1::0;;;;;26640:26:30;;::::1;26610:27;26640:26:::0;;;:16:::1;:26;::::0;;;;:45:::1;;::::0;::::1;27102:33:::0;;;::::1;::::0;:70:::1;;-1:-1:-1::0;27139:10:30::1;-1:-1:-1::0;;;;;27139:33:30;::::1;;;27102:70;:96;;;;-1:-1:-1::0;27176:10:30::1;-1:-1:-1::0;;;;;27176:22:30;::::1;;;27102:96;27098:1267;;;27318:15;27281:26;:33;;;:52;;27256:166;;;::::0;-1:-1:-1;;;27256:166:30;;54858:2:102;27256:166:30::1;::::0;::::1;54840:21:102::0;54897:2;54877:18;;;54870:30;54936:34;54916:18;;;54909:62;55007:25;54987:18;;;54980:53;55050:19;;27256:166:30::1;54656:419:102::0;27256:166:30::1;-1:-1:-1::0;;;;;27554:50:30;::::1;;::::0;;;:29:::1;:50;::::0;;;;;;;:64;;;;;;;;;::::1;;27553:65;27528:179;;;::::0;-1:-1:-1;;;27528:179:30;;55282:2:102;27528:179:30::1;::::0;::::1;55264:21:102::0;55321:2;55301:18;;;55294:30;55360:34;55340:18;;;55333:62;55431:25;55411:18;;;55404:53;55474:19;;27528:179:30::1;55080:419:102::0;27528:179:30::1;-1:-1:-1::0;;;;;27721:50:30;::::1;;::::0;;;:29:::1;:50;::::0;;;;;;;:64;;;;;;;:71;;-1:-1:-1;;27721:71:30::1;27788:4;27721:71;::::0;;28049:33;::::1;::::0;27877:219:::1;::::0;27932:6;;27956:8;;27751:19;;27772:12;;27877:37:::1;:219::i;:::-;27848:248;;28169:185;28231:19;28268:18;28304:26;:36;;;28169:44;:185::i;:::-;27200:1165;27098:1267;-1:-1:-1::0;;;;;28468:19:30;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;:30;;-1:-1:-1;;;;;;28468:30:30::1;::::0;;::::1;::::0;;::::1;::::0;;28513:33;::::1;::::0;28468:19;28513:33:::1;28558:29;28589:23:::0;28628:28:::1;28649:6;28628:20;:28::i;:::-;28557:99;;;;28672:9;28667:284;28691:10;:17;28687:1;:21;28667:284;;;28725:183;28777:8;28811:6;28845:10;28856:1;28845:13;;;;;;;;:::i;:::-;;;;;;;28884:6;28891:1;28884:9;;;;;;;;:::i;:::-;;;;;;;28725:23;:183::i;:::-;28935:3;;28667:284;;6024:360:50::0;-1:-1:-1;;;;;6127:40:50;;6106:160;;;;-1:-1:-1;;;6106:160:50;;55706:2:102;6106:160:50;;;55688:21:102;55745:2;55725:18;;;55718:30;55784:34;55764:18;;;55757:62;55855:34;55835:18;;;55828:62;-1:-1:-1;;;55906:19:102;;;55899:40;55956:19;;6106:160:50;55504:477:102;6106:160:50;6299:14;;6281:52;;;-1:-1:-1;;;;;6299:14:50;;;56208:51:102;;56295:32;;;56290:2;56275:18;;56268:60;6281:52:50;;56181:18:102;6281:52:50;;;;;;;6343:14;:34;;-1:-1:-1;;;;;;6343:34:50;-1:-1:-1;;;;;6343:34:50;;;;;;;;;;6024:360::o;34643:308:30:-;-1:-1:-1;;;;;34826:24:30;;;;;;;:14;:24;;;;;;;;:34;;;;;;;;;;;:44;;34864:6;;34826:24;:44;;34864:6;;34826:44;:::i;:::-;;;;;;;;34909:8;-1:-1:-1;;;;;34885:59:30;;34919:6;34927:8;34937:6;34885:59;;;;;;;;:::i;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:6;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;56541:2:102;1654:68:0;;;56523:21:102;;;56560:18;;;56553:30;56619:34;56599:18;;;56592:62;56671:18;;1654:68:0;56339:356:102;39831:1259:30;40013:51;;;39992:172;;;;-1:-1:-1;;;39992:172:30;;56902:2:102;39992:172:30;;;56884:21:102;56941:2;56921:18;;;56914:30;56980:34;56960:18;;;56953:62;57051:34;57031:18;;;57024:62;-1:-1:-1;;;57102:19:102;;;57095:41;57153:19;;39992:172:30;56700:478:102;39992:172:30;40194:11;40174:17;40222:862;40246:9;40242:1;:13;40222:862;;;40276:18;40297:11;;40309:1;40297:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;40369:39:30;;40325:41;40369:39;;;:29;:39;;;;;;40276:35;;-1:-1:-1;40465:22:30;;40488:1;40465:25;;;;;;;:::i;:::-;;;;;;;40422:68;;2105:6:31;40529:32:30;:63;;40504:237;;;;-1:-1:-1;;;40504:237:30;;57385:2:102;40504:237:30;;;57367:21:102;57424:3;57404:18;;;57397:31;57464:34;57444:18;;;57437:62;57535:34;57515:18;;;57508:62;57607:34;57586:19;;;57579:63;-1:-1:-1;;;57658:19:102;;;57651:50;57718:19;;40504:237:30;57183:560:102;40504:237:30;-1:-1:-1;;;;;40807:39:30;;;;;;:29;:39;;;;;;;;;:74;;;40900:173;;57969:51:102;;;58036:18;;58029:34;;;58079:18;;58072:34;;;40900:173:30;;57957:2:102;57942:18;40900:173:30;;;;;;;40262:822;;;40257:3;;;;;40222:862;;;;39982:1108;39831:1259;;;;:::o;2943:441:50:-;3077:14;;-1:-1:-1;;;;;3077:14:50;3069:37;:79;;;;-1:-1:-1;;;;;;3110:38:50;;;;3069:79;3048:197;;;;-1:-1:-1;;;3048:197:50;;58319:2:102;3048:197:50;;;58301:21:102;58358:2;58338:18;;;58331:30;58397:34;58377:18;;;58370:62;58468:34;58448:18;;;58441:62;-1:-1:-1;;;58519:19:102;;;58512:38;58567:19;;3048:197:50;58117:475:102;3048:197:50;3255:7;:26;;;3296:36;;1015:25:102;;;3303:10:50;;3296:36;;1003:2:102;988:18;3296:36:50;;;;;;;3342:35;3361:15;3342:18;:35::i;49864:193:30:-;49998:19;;;;;;;;;;;-1:-1:-1;;;49998:19:30;;;;;49960:89;;699:80:31;49960:89:30;;;58828:25:102;49988:30:30;58869:18:102;;;58862:34;50020:13:30;58912:18:102;;;58905:34;50043:4:30;58955:18:102;;;;58948:60;;;;49960:89:30;;;;;;;;;;58800:19:102;;;;49960:89:30;;;49950:100;;;;;;49864:193::o;2673:187:0:-;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;39130:472:30:-;2105:6:31;39243:25:30;:56;;39222:216;;;;-1:-1:-1;;;39222:216:30;;59221:2:102;39222:216:30;;;59203:21:102;59260:3;59240:18;;;59233:31;59300:34;59280:18;;;59273:62;59371:34;59351:18;;;59344:62;59443:34;59422:19;;;59415:63;-1:-1:-1;;;59494:19:102;;;59487:48;59552:19;;39222:216:30;59019:558:102;39222:216:30;39481:24;;39453:80;;;41619:25:102;;;41675:2;41660:18;;41653:34;;;39453:80:30;;41592:18:102;39453:80:30;;;;;;;39543:24;:52;39130:472::o;34265:247::-;-1:-1:-1;;;;;34387:24:30;;;;;;;:14;:24;;;;;;;;:34;;;;;;;;;;;:44;;34425:6;;34387:24;:44;;34425:6;;34387:44;:::i;:::-;;;;;;;;34470:8;-1:-1:-1;;;;;34446:59:30;;34480:6;34488:8;34498:6;34446:59;;;;;;;;:::i;29300:4834::-;29506:22;29531:35;;29555:10;29531:35;:::i;:::-;29598:34;;;;:18;:34;;;;;;29506:60;;-1:-1:-1;29598:34:30;;29577:149;;;;-1:-1:-1;;;29577:149:30;;60244:2:102;29577:149:30;;;60226:21:102;60283:2;60263:18;;;60256:30;-1:-1:-1;;;;;;;;;;;60302:18:102;;;60295:62;60393:34;60373:18;;;60366:62;-1:-1:-1;;;60444:19:102;;;60437:34;60488:19;;29577:149:30;60042:471:102;29577:149:30;29782:24;;29810:12;;29758:21;;;;;;;;:::i;:::-;:48;;;;;;:::i;:::-;:64;;29737:207;;;;-1:-1:-1;;;29737:207:30;;60720:2:102;29737:207:30;;;60702:21:102;60759:2;60739:18;;;60732:30;-1:-1:-1;;;;;;;;;;;60778:18:102;;;60771:62;60869:34;60849:18;;;60842:62;60941:33;60920:19;;;60913:62;60992:19;;29737:207:30;60518:499:102;29737:207:30;29990:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;29976:35:30;:10;-1:-1:-1;;;;;29976:35:30;;29955:163;;;;-1:-1:-1;;;29955:163:30;;61224:2:102;29955:163:30;;;61206:21:102;61263:2;61243:18;;;61236:30;-1:-1:-1;;;;;;;;;;;61282:18:102;;;61275:62;61373:34;61353:18;;;61346:62;-1:-1:-1;;;61424:19:102;;;61417:47;61481:19;;29955:163:30;61022:484:102;29955:163:30;30133:15;30129:217;;;30206:21;;;;:10;:21;:::i;:::-;30189:45;;;-1:-1:-1;30164:171:30;;;;-1:-1:-1;;;30164:171:30;;61713:2:102;30164:171:30;;;61695:21:102;61752:2;61732:18;;;61725:30;-1:-1:-1;;;;;;;;;;;61771:18:102;;;61764:62;61862:34;61842:18;;;61835:62;-1:-1:-1;;;61913:19:102;;;61906:33;61956:19;;30164:171:30;61511:470:102;30164:171:30;30417:34;;;;:18;:34;;;;;30410:41;;-1:-1:-1;;30410:41:30;;;30593:3484;;;;30633:9;30628:697;30652:21;;;;:10;:21;:::i;:::-;:28;;30648:1;:32;30628:697;;;30814:12;30755:29;:55;30785:21;;;;:10;:21;:::i;:::-;30807:1;30785:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;30755:55:30;;;;;;;;;;;;-1:-1:-1;30755:55:30;;30731:21;;;;;;;;:::i;:::-;:79;;;;;;:::i;:::-;:95;;30702:276;;;;-1:-1:-1;;;30702:276:30;;;;;;;:::i;:::-;30997:278;31051:17;;;;:10;:17;:::i;:::-;31102:10;31144:21;;;;:10;:21;:::i;:::-;31166:1;31144:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;31198:17;;;;:10;:17;:::i;:::-;31216:1;31198:20;;;;;;;:::i;:::-;;;;;;;31247:6;;31254:1;31247:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;30997:23;:278::i;:::-;31305:3;;30628:697;;;;30593:3484;;;31532:10;31494:23;31520;;;:11;:23;;;;;;-1:-1:-1;;;;;31520:23:30;;31557:2510;31581:21;;;;:10;:21;:::i;:::-;:28;;31577:1;:32;31557:2510;;;31743:12;31684:29;:55;31714:21;;;;:10;:21;:::i;:::-;31736:1;31714:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31684:55:30;;;;;;;;;;;;-1:-1:-1;31684:55:30;;31660:21;;;;;;;;:::i;:::-;:79;;;;;;:::i;:::-;:95;;31631:277;;;;-1:-1:-1;;;31631:277:30;;;;;;;:::i;:::-;2088:42;32170:21;;;;:10;:21;:::i;:::-;32192:1;32170:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32170:50:30;;32166:1852;;32244:14;32261:17;;;;:10;:17;:::i;:::-;32244:34;-1:-1:-1;32558:36:30;-1:-1:-1;;;;;32597:15:30;:25;;32244:34;32699:17;;;;:10;:17;:::i;:::-;32717:1;32699:20;;;;;;;:::i;:::-;32597:145;;-1:-1:-1;;;;;;32597:145:30;;;;;;;-1:-1:-1;;;;;49844:32:102;;;32597:145:30;;;49826:51:102;32699:20:30;;;;;;;49893:18:102;;;49886:34;-1:-1:-1;49799:18:102;;32597:145:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32791:19:30;;;32764:24;32791:19;;;:11;:19;;;;;;32558:184;;-1:-1:-1;32791:19:30;32890:30;;32886:451;;32948:366;33012:16;33151:6;33197:21;;;;:10;:21;:::i;:::-;33219:1;33197:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;33259:28;32948:23;:366::i;:::-;32222:1133;;;32166:1852;;;33383:15;-1:-1:-1;;;;;33383:25:30;;33409:10;33421:6;;33428:1;33421:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;33432:21;;;;:10;:21;:::i;:::-;33454:1;33432:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;33458:17;;;;:10;:17;:::i;:::-;33476:1;33458:20;;;;;;;:::i;:::-;33383:96;;;;;;-1:-1:-1;;;;;;33383:96:30;;;-1:-1:-1;;;;;63331:32:102;;;33383:96:30;;;63313:51:102;63400:32;;;63380:18;;;63373:60;63469:32;;;;63449:18;;;63442:60;33458:20:30;;;;;;63518:18:102;;;63511:34;63285:19;;;-1:-1:-1;33383:96:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;33559:29:30;;;33555:445;;33616:361;33680:15;33818:10;33868:21;;;;:10;:21;:::i;:::-;33890:1;33868:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;33930:17;;;;:10;:17;:::i;:::-;33948:1;33930:20;;;;;;;:::i;:::-;;;;;;;33616:23;:361::i;:::-;34047:3;;31557:2510;;;;31480:2597;30593:3484;34092:35;;1015:25:102;;;34092:35:30;;1003:2:102;988:18;34092:35:30;;;;;;;29496:4638;29300:4834;;;;;:::o;974:926:47:-;-1:-1:-1;;;;;1476:19:4;;;:23;1410:484:47;;1481:56;;-1:-1:-1;;;1481:56:47;;;1541:18;-1:-1:-1;;;;;1481:33:47;;;574:10;;1481:56;;1515:10;;1527:9;;1481:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1481:78:47;;1456:220;;;;-1:-1:-1;;;1456:220:47;;64654:2:102;1456:220:47;;;64636:21:102;64693:2;64673:18;;;64666:30;64732:34;64712:18;;;64705:62;64803:34;64783:18;;;64776:62;-1:-1:-1;;;64854:19:102;;;64847:50;64914:19;;1456:220:47;64452:487:102;1410:484:47;1772:6;-1:-1:-1;;;;;1732:46:47;:36;1746:10;1758:9;1732:13;:36::i;:::-;-1:-1:-1;;;;;1732:46:47;;1707:176;;;;-1:-1:-1;;;1707:176:47;;65146:2:102;1707:176:47;;;65128:21:102;65185:2;65165:18;;;65158:30;65224:34;65204:18;;;65197:62;65295:34;65275:18;;;65268:62;-1:-1:-1;;;65346:19:102;;;65339:38;65394:19;;1707:176:47;64944:475:102;38648:476:30;-1:-1:-1;;;;;;;38790:34:30;;;38786:332;;38840:161;;-1:-1:-1;;;38840:161:30;;-1:-1:-1;;;;;38840:15:30;:38;;;;:161;;38907:6;;38944:10;;38980:6;;38840:161;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38786:332;;;39032:75;;-1:-1:-1;;;39032:75:30;;-1:-1:-1;;;;;66083:32:102;;;39032:75:30;;;66065:51:102;66152:32;;;66132:18;;;66125:60;66201:18;;;66194:34;;;66264:32;;;66244:18;;;66237:60;39032:15:30;:38;;;;66037:19:102;;39032:75:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38786:332;38648:476;;;;;:::o;4402:227:29:-;4480:7;4500:17;4519:18;4541:27;4552:4;4558:9;4541:10;:27::i;:::-;4499:69;;;;4578:18;4590:5;4578:11;:18::i;2243:1373::-;2324:7;2333:12;2554:9;:16;2574:2;2554:22;2550:1060;;2890:4;2875:20;;2869:27;2939:4;2924:20;;2918:27;2996:4;2981:20;;2975:27;2592:9;2967:36;3037:25;3048:4;2967:36;2869:27;2918;3037:10;:25::i;:::-;3030:32;;;;;;;;;2550:1060;3083:9;:16;3103:2;3083:22;3079:531;;3399:4;3384:20;;3378:27;3449:4;3434:20;;3428:27;3489:23;3500:4;3378:27;3428;3489:10;:23::i;:::-;3482:30;;;;;;;;3079:531;-1:-1:-1;3559:1:29;;-1:-1:-1;3563:35:29;3079:531;2243:1373;;;;;:::o;548:631::-;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;766:34;;-1:-1:-1;;;766:34:29;;66642:2:102;766:34:29;;;66624:21:102;66681:2;66661:18;;;66654:30;66720:26;66700:18;;;66693:54;66764:18;;766:34:29;66440:348:102;708:465:29;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;881:41;;-1:-1:-1;;;881:41:29;;66995:2:102;881:41:29;;;66977:21:102;67034:2;67014:18;;;67007:30;67073:33;67053:18;;;67046:61;67124:18;;881:41:29;66793:355:102;817:356:29;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;998:44;;-1:-1:-1;;;998:44:29;;67355:2:102;998:44:29;;;67337:21:102;67394:2;67374:18;;;67367:30;67433:34;67413:18;;;67406:62;-1:-1:-1;;;67484:18:102;;;67477:32;67526:19;;998:44:29;67153:398:102;939:234:29;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;1118:44;;-1:-1:-1;;;1118:44:29;;67758:2:102;1118:44:29;;;67740:21:102;67797:2;67777:18;;;67770:30;67836:34;67816:18;;;67809:62;-1:-1:-1;;;67887:18:102;;;67880:32;67929:19;;1118:44:29;67556:398:102;5810:1603:29;5936:7;;6860:66;6847:79;;6843:161;;;-1:-1:-1;6958:1:29;;-1:-1:-1;6962:30:29;6942:51;;6843:161;7017:1;:7;;7022:2;7017:7;;:18;;;;;7028:1;:7;;7033:2;7028:7;;7017:18;7013:100;;;-1:-1:-1;7067:1:29;;-1:-1:-1;7071:30:29;7051:51;;7013:100;7224:24;;;7207:14;7224:24;;;;;;;;;68186:25:102;;;68259:4;68247:17;;68227:18;;;68220:45;;;;68281:18;;;68274:34;;;68324:18;;;68317:34;;;7224:24:29;;68158:19:102;;7224:24:29;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7224:24:29;;-1:-1:-1;;7224:24:29;;;-1:-1:-1;;;;;;;7262:20:29;;7258:101;;7314:1;7318:29;7298:50;;;;;;;7258:101;7377:6;-1:-1:-1;7385:20:29;;-1:-1:-1;5810:1603:29;;;;;;;;:::o;4883:336::-;4993:7;;-1:-1:-1;;;;;5038:80:29;;4993:7;5144:25;5160:3;5145:18;;;5167:2;5144:25;:::i;:::-;5128:42;;5187:25;5198:4;5204:1;5207;5210;5187:10;:25::i;:::-;5180:32;;;;;;4883:336;;;;;;:::o;14:378:102:-;88:8;98:6;152:3;145:4;137:6;133:17;129:27;119:55;;170:1;167;160:12;119:55;-1:-1:-1;193:20:102;;-1:-1:-1;;;;;225:30:102;;222:50;;;268:1;265;258:12;222:50;305:4;297:6;293:17;281:29;;365:3;358:4;348:6;345:1;341:14;333:6;329:27;325:38;322:47;319:67;;;382:1;379;372:12;397:467;502:6;510;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;619:9;606:23;-1:-1:-1;;;;;644:6:102;641:30;638:50;;;684:1;681;674:12;638:50;723:81;796:7;787:6;776:9;772:22;723:81;:::i;:::-;823:8;;697:107;;-1:-1:-1;397:467:102;-1:-1:-1;;;;397:467:102:o;1233:131::-;-1:-1:-1;;;;;1308:31:102;;1298:42;;1288:70;;1354:1;1351;1344:12;1369:134;1437:20;;1466:31;1437:20;1466:31;:::i;:::-;1369:134;;;:::o;1508:771::-;1603:6;1611;1619;1627;1635;1688:3;1676:9;1667:7;1663:23;1659:33;1656:53;;;1705:1;1702;1695:12;1656:53;1744:9;1731:23;1763:31;1788:5;1763:31;:::i;:::-;1813:5;-1:-1:-1;1870:2:102;1855:18;;1842:32;1883:33;1842:32;1883:33;:::i;:::-;1935:7;-1:-1:-1;1994:2:102;1979:18;;1966:32;2007:33;1966:32;2007:33;:::i;:::-;1508:771;;;;-1:-1:-1;2059:7:102;;2139:2;2124:18;;2111:32;;-1:-1:-1;2242:3:102;2227:19;2214:33;;1508:771;-1:-1:-1;;1508:771:102:o;2779:611::-;2969:2;2981:21;;;3051:13;;2954:18;;;3073:22;;;2921:4;;3152:15;;;3126:2;3111:18;;;2921:4;3195:169;3209:6;3206:1;3203:13;3195:169;;;3270:13;;3258:26;;3313:2;3339:15;;;;3304:12;;;;3231:1;3224:9;3195:169;;3395:163;3463:5;3508:2;3499:6;3494:3;3490:16;3486:25;3483:45;;;3524:1;3521;3514:12;3483:45;-1:-1:-1;3546:6:102;3395:163;-1:-1:-1;3395:163:102:o;3563:348::-;3615:8;3625:6;3679:3;3672:4;3664:6;3660:17;3656:27;3646:55;;3697:1;3694;3687:12;3646:55;-1:-1:-1;3720:20:102;;-1:-1:-1;;;;;3752:30:102;;3749:50;;;3795:1;3792;3785:12;3749:50;3832:4;3824:6;3820:17;3808:29;;3884:3;3877:4;3868:6;3860;3856:19;3852:30;3849:39;3846:59;;;3901:1;3898;3891:12;3916:554;4031:6;4039;4047;4100:3;4088:9;4079:7;4075:23;4071:33;4068:53;;;4117:1;4114;4107:12;4068:53;4140:62;4194:7;4183:9;4140:62;:::i;:::-;4130:72;;4253:2;4242:9;4238:18;4225:32;-1:-1:-1;;;;;4272:6:102;4269:30;4266:50;;;4312:1;4309;4302:12;4266:50;4351:59;4402:7;4393:6;4382:9;4378:22;4351:59;:::i;:::-;3916:554;;4429:8;;-1:-1:-1;4325:85:102;;-1:-1:-1;;;;3916:554:102:o;4475:271::-;4558:6;4611:2;4599:9;4590:7;4586:23;4582:32;4579:52;;;4627:1;4624;4617:12;4579:52;4666:9;4653:23;4685:31;4710:5;4685:31;:::i;:::-;4735:5;4475:271;-1:-1:-1;;;4475:271:102:o;4751:527::-;4847:6;4855;4863;4916:2;4904:9;4895:7;4891:23;4887:32;4884:52;;;4932:1;4929;4922:12;4884:52;4971:9;4958:23;4990:31;5015:5;4990:31;:::i;:::-;5040:5;-1:-1:-1;5097:2:102;5082:18;;5069:32;5110:33;5069:32;5110:33;:::i;:::-;4751:527;;5162:7;;-1:-1:-1;;;5242:2:102;5227:18;;;;5214:32;;4751:527::o;5283:226::-;5342:6;5395:2;5383:9;5374:7;5370:23;5366:32;5363:52;;;5411:1;5408;5401:12;5363:52;-1:-1:-1;5456:23:102;;5283:226;-1:-1:-1;5283:226:102:o;5514:809::-;5655:6;5663;5671;5679;5732:2;5720:9;5711:7;5707:23;5703:32;5700:52;;;5748:1;5745;5738:12;5700:52;5788:9;5775:23;-1:-1:-1;;;;;5813:6:102;5810:30;5807:50;;;5853:1;5850;5843:12;5807:50;5892:81;5965:7;5956:6;5945:9;5941:22;5892:81;:::i;:::-;5992:8;;-1:-1:-1;5866:107:102;-1:-1:-1;;6080:2:102;6065:18;;6052:32;-1:-1:-1;;;;;6096:32:102;;6093:52;;;6141:1;6138;6131:12;6093:52;6180:83;6255:7;6244:8;6233:9;6229:24;6180:83;:::i;:::-;5514:809;;;;-1:-1:-1;6282:8:102;-1:-1:-1;;;;5514:809:102:o;7093:1352::-;7294:6;7302;7310;7318;7326;7334;7342;7350;7403:3;7391:9;7382:7;7378:23;7374:33;7371:53;;;7420:1;7417;7410:12;7371:53;7459:9;7446:23;7478:31;7503:5;7478:31;:::i;:::-;7528:5;-1:-1:-1;7585:2:102;7570:18;;7557:32;7598:33;7557:32;7598:33;:::i;:::-;7650:7;-1:-1:-1;7730:2:102;7715:18;;7702:32;;-1:-1:-1;7833:2:102;7818:18;;7805:32;;-1:-1:-1;7914:3:102;7899:19;;7886:33;-1:-1:-1;;;;;7931:30:102;;7928:50;;;7974:1;7971;7964:12;7928:50;8013:81;8086:7;8077:6;8066:9;8062:22;8013:81;:::i;:::-;8113:8;;-1:-1:-1;7987:107:102;-1:-1:-1;;8201:3:102;8186:19;;8173:33;-1:-1:-1;;;;;8218:32:102;;8215:52;;;8263:1;8260;8253:12;8215:52;8302:83;8377:7;8366:8;8355:9;8351:24;8302:83;:::i;:::-;7093:1352;;;;-1:-1:-1;7093:1352:102;;-1:-1:-1;7093:1352:102;;;;;;8404:8;-1:-1:-1;;;7093:1352:102:o;8450:1544::-;8713:6;8721;8729;8737;8745;8753;8761;8769;8822:3;8810:9;8801:7;8797:23;8793:33;8790:53;;;8839:1;8836;8829:12;8790:53;8879:9;8866:23;-1:-1:-1;;;;;8904:6:102;8901:30;8898:50;;;8944:1;8941;8934:12;8898:50;8983:81;9056:7;9047:6;9036:9;9032:22;8983:81;:::i;:::-;9083:8;;-1:-1:-1;8957:107:102;-1:-1:-1;;9171:2:102;9156:18;;9143:32;-1:-1:-1;;;;;9187:32:102;;9184:52;;;9232:1;9229;9222:12;9184:52;9271:83;9346:7;9335:8;9324:9;9320:24;9271:83;:::i;:::-;9373:8;;-1:-1:-1;9245:109:102;-1:-1:-1;;9461:2:102;9446:18;;9433:32;-1:-1:-1;;;;;9477:32:102;;9474:52;;;9522:1;9519;9512:12;9474:52;9561:83;9636:7;9625:8;9614:9;9610:24;9561:83;:::i;:::-;9663:8;;-1:-1:-1;9535:109:102;-1:-1:-1;;9751:2:102;9736:18;;9723:32;-1:-1:-1;;;;;9767:32:102;;9764:52;;;9812:1;9809;9802:12;10975:127;11036:10;11031:3;11027:20;11024:1;11017:31;11067:4;11064:1;11057:15;11091:4;11088:1;11081:15;11107:253;11179:2;11173:9;11221:4;11209:17;;-1:-1:-1;;;;;11241:34:102;;11277:22;;;11238:62;11235:88;;;11303:18;;:::i;:::-;11339:2;11332:22;11107:253;:::o;11365:257::-;11437:4;11431:11;;;11469:17;;-1:-1:-1;;;;;11501:34:102;;11537:22;;;11498:62;11495:88;;;11563:18;;:::i;11627:253::-;11699:2;11693:9;11741:4;11729:17;;-1:-1:-1;;;;;11761:34:102;;11797:22;;;11758:62;11755:88;;;11823:18;;:::i;11885:275::-;11956:2;11950:9;12021:2;12002:13;;-1:-1:-1;;11998:27:102;11986:40;;-1:-1:-1;;;;;12041:34:102;;12077:22;;;12038:62;12035:88;;;12103:18;;:::i;:::-;12139:2;12132:22;11885:275;;-1:-1:-1;11885:275:102:o;12165:121::-;12250:10;12243:5;12239:22;12232:5;12229:33;12219:61;;12276:1;12273;12266:12;12291:132;12358:20;;12387:30;12358:20;12387:30;:::i;12428:194::-;12499:4;-1:-1:-1;;;;;12524:6:102;12521:30;12518:56;;;12554:18;;:::i;:::-;-1:-1:-1;12599:1:102;12595:14;12611:4;12591:25;;12428:194::o;12627:766::-;12692:5;12745:3;12738:4;12730:6;12726:17;12722:27;12712:55;;12763:1;12760;12753:12;12712:55;12803:6;12790:20;12830:75;12846:58;12897:6;12846:58;:::i;:::-;12830:75;:::i;:::-;12929:3;12953:6;12948:3;12941:19;12985:4;12980:3;12976:14;12969:21;;13046:4;13036:6;13033:1;13029:14;13021:6;13017:27;13013:38;12999:52;;13074:3;13066:6;13063:15;13060:35;;;13091:1;13088;13081:12;13060:35;13127:4;13119:6;13115:17;13141:221;13157:6;13152:3;13149:15;13141:221;;;13239:3;13226:17;13256:31;13281:5;13256:31;:::i;:::-;13300:18;;13347:4;13338:14;;;;13174;13141:221;;;-1:-1:-1;13380:7:102;12627:766;-1:-1:-1;;;;;12627:766:102:o;13398:734::-;13452:5;13505:3;13498:4;13490:6;13486:17;13482:27;13472:55;;13523:1;13520;13513:12;13472:55;13563:6;13550:20;13590:75;13606:58;13657:6;13606:58;:::i;13590:75::-;13689:3;13713:6;13708:3;13701:19;13745:4;13740:3;13736:14;13729:21;;13806:4;13796:6;13793:1;13789:14;13781:6;13777:27;13773:38;13759:52;;13834:3;13826:6;13823:15;13820:35;;;13851:1;13848;13841:12;13820:35;13887:4;13879:6;13875:17;13901:200;13917:6;13912:3;13909:15;13901:200;;;14009:17;;14039:18;;14086:4;14077:14;;;;13934;13901:200;;14137:986;14194:5;14242:4;14230:9;14225:3;14221:19;14217:30;14214:50;;;14260:1;14257;14250:12;14214:50;14282:22;;:::i;:::-;14273:31;;14327:29;14346:9;14327:29;:::i;:::-;14320:5;14313:44;14389:38;14423:2;14412:9;14408:18;14389:38;:::i;:::-;14384:2;14377:5;14373:14;14366:62;14460:38;14494:2;14483:9;14479:18;14460:38;:::i;:::-;14455:2;14444:14;;14437:62;14572:2;14557:18;;;14544:32;14592:14;;;14585:31;14649:38;14682:3;14667:19;;14649:38;:::i;:::-;14643:3;14636:5;14632:15;14625:63;14739:3;14728:9;14724:19;14711:33;-1:-1:-1;;;;;14759:6:102;14756:30;14753:50;;;14799:1;14796;14789:12;14753:50;14836:68;14900:3;14891:6;14880:9;14876:22;14836:68;:::i;:::-;14830:3;14823:5;14819:15;14812:93;;14958:3;14947:9;14943:19;14930:33;-1:-1:-1;;;;;14978:8:102;14975:32;14972:52;;;15020:1;15017;15010:12;14972:52;15057:59;15112:3;15101:8;15090:9;15086:24;15057:59;:::i;:::-;15051:3;15044:5;15040:15;15033:84;;14137:986;;;;:::o;15128:351::-;15215:6;15268:2;15256:9;15247:7;15243:23;15239:32;15236:52;;;15284:1;15281;15274:12;15236:52;15324:9;15311:23;-1:-1:-1;;;;;15349:6:102;15346:30;15343:50;;;15389:1;15386;15379:12;15343:50;15412:61;15465:7;15456:6;15445:9;15441:22;15412:61;:::i;:::-;15402:71;15128:351;-1:-1:-1;;;;15128:351:102:o;15484:269::-;15541:6;15594:2;15582:9;15573:7;15569:23;15565:32;15562:52;;;15610:1;15607;15600:12;15562:52;15649:9;15636:23;15699:4;15692:5;15688:16;15681:5;15678:27;15668:55;;15719:1;15716;15709:12;15758:504;15840:5;15888:4;15876:9;15871:3;15867:19;15863:30;15860:50;;;15906:1;15903;15896:12;15860:50;15928:22;;:::i;:::-;15919:31;;15987:9;15974:23;16006:33;16031:7;16006:33;:::i;:::-;16048:22;;16122:2;16107:18;;16094:32;16170:26;16157:40;;16145:53;;16135:81;;16212:1;16209;16202:12;16135:81;16243:2;16232:14;;16225:31;16236:5;15758:504;-1:-1:-1;;15758:504:102:o;16267:1987::-;16403:6;16456:2;16444:9;16435:7;16431:23;16427:32;16424:52;;;16472:1;16469;16462:12;16424:52;16512:9;16499:23;-1:-1:-1;;;;;16537:6:102;16534:30;16531:50;;;16577:1;16574;16567:12;16531:50;16600:22;;16653:4;16645:13;;16641:27;-1:-1:-1;16631:55:102;;16682:1;16679;16672:12;16631:55;16722:2;16709:16;16745:75;16761:58;16812:6;16761:58;:::i;16745:75::-;16842:3;16866:6;16861:3;16854:19;16898:2;16893:3;16889:12;16882:19;;16953:2;16943:6;16940:1;16936:14;16932:2;16928:23;16924:32;16910:46;;16979:7;16971:6;16968:19;16965:39;;;17000:1;16997;16990:12;16965:39;17032:2;17028;17024:11;17044:1180;17060:6;17055:3;17052:15;17044:1180;;;17146:3;17133:17;-1:-1:-1;;;;;17169:11:102;17166:35;17163:55;;;17214:1;17211;17204:12;17163:55;17241:20;;17313:4;17285:16;;;-1:-1:-1;;17281:30:102;17277:41;17274:61;;;17331:1;17328;17321:12;17274:61;17361:22;;:::i;:::-;17433:2;17429;17425:11;17412:25;-1:-1:-1;;;;;17456:8:102;17453:32;17450:52;;;17498:1;17495;17488:12;17450:52;17529:76;17597:7;17592:2;17581:8;17577:2;17573:17;17569:26;17529:76;:::i;:::-;17522:5;17515:91;;17656:2;17652;17648:11;17635:25;-1:-1:-1;;;;;17679:8:102;17676:32;17673:52;;;17721:1;17718;17711:12;17673:52;17761:65;17818:7;17813:2;17802:8;17798:2;17794:17;17790:26;17761:65;:::i;:::-;17756:2;17749:5;17745:14;17738:89;;17863:31;17890:2;17886;17882:11;17863:31;:::i;:::-;17858:2;17851:5;17847:14;17840:55;17931:77;18000:7;17993:4;17989:2;17985:13;17931:77;:::i;:::-;17926:2;17919:5;17915:14;17908:101;18047:32;18073:4;18069:2;18065:13;18047:32;:::i;:::-;18040:4;18033:5;18029:16;18022:58;18117:33;18144:4;18140:2;18136:13;18117:33;:::i;:::-;18111:3;18100:15;;18093:58;18164:18;;-1:-1:-1;18211:2:102;18202:12;;;;17077;17044:1180;;;-1:-1:-1;18243:5:102;16267:1987;-1:-1:-1;;;;;;16267:1987:102:o;18259:118::-;18345:5;18338:13;18331:21;18324:5;18321:32;18311:60;;18367:1;18364;18357:12;18382:997;18537:6;18545;18553;18561;18569;18622:3;18610:9;18601:7;18597:23;18593:33;18590:53;;;18639:1;18636;18629:12;18590:53;18679:9;18666:23;-1:-1:-1;;;;;18704:6:102;18701:30;18698:50;;;18744:1;18741;18734:12;18698:50;18767:22;;18823:3;18805:16;;;18801:26;18798:46;;;18840:1;18837;18830:12;18798:46;18863:2;-1:-1:-1;18918:2:102;18903:18;;18890:32;-1:-1:-1;;;;;18934:32:102;;18931:52;;;18979:1;18976;18969:12;18931:52;19018:83;19093:7;19082:8;19071:9;19067:24;19018:83;:::i;:::-;19120:8;;-1:-1:-1;18992:109:102;-1:-1:-1;;19224:2:102;19209:18;;19196:32;;-1:-1:-1;19304:2:102;19289:18;;19276:32;19317:30;19276:32;19317:30;:::i;:::-;19366:7;19356:17;;;18382:997;;;;;;;;:::o;19384:407::-;19471:6;19479;19532:2;19520:9;19511:7;19507:23;19503:32;19500:52;;;19548:1;19545;19538:12;19500:52;19587:9;19574:23;19606:31;19631:5;19606:31;:::i;:::-;19656:5;-1:-1:-1;19713:2:102;19698:18;;19685:32;19726:33;19685:32;19726:33;:::i;:::-;19778:7;19768:17;;;19384:407;;;;;:::o;19796:928::-;19862:5;19910:4;19898:9;19893:3;19889:19;19885:30;19882:50;;;19928:1;19925;19918:12;19882:50;19950:22;;:::i;:::-;19941:31;;20008:9;19995:23;-1:-1:-1;;;;;20033:6:102;20030:30;20027:50;;;20073:1;20070;20063:12;20027:50;20096:22;;20149:4;20141:13;;20137:23;-1:-1:-1;20127:51:102;;20174:1;20171;20164:12;20127:51;20214:2;20201:16;-1:-1:-1;;;;;20232:6:102;20229:30;20226:56;;;20262:18;;:::i;:::-;20304:59;20351:2;20328:17;;-1:-1:-1;;20324:31:102;20357:4;20320:42;20304:59;:::i;:::-;20386:6;20379:5;20372:21;20436:3;20429:4;20420:6;20416:2;20412:15;20408:26;20405:35;20402:55;;;20453:1;20450;20443:12;20402:55;20512:6;20505:4;20501:2;20497:13;20490:4;20483:5;20479:16;20466:53;20566:1;20559:4;20539:18;;;20535:29;;20528:40;20577:20;;20655;;;20642:34;20692:16;;;20685:33;;;;20577:20;20584:5;-1:-1:-1;;19796:928:102:o;20729:1032::-;20900:6;20908;20916;20924;20932;20985:3;20973:9;20964:7;20960:23;20956:33;20953:53;;;21002:1;20999;20992:12;20953:53;21041:9;21028:23;21060:31;21085:5;21060:31;:::i;:::-;21110:5;-1:-1:-1;21167:2:102;21152:18;;21139:32;21180:33;21139:32;21180:33;:::i;:::-;21232:7;-1:-1:-1;21290:2:102;21275:18;;21262:32;-1:-1:-1;;;;;21306:30:102;;21303:50;;;21349:1;21346;21339:12;21303:50;21372:70;21434:7;21425:6;21414:9;21410:22;21372:70;:::i;:::-;21362:80;;;21495:2;21484:9;21480:18;21467:32;-1:-1:-1;;;;;21514:8:102;21511:32;21508:52;;;21556:1;21553;21546:12;21508:52;21579:72;21643:7;21632:8;21621:9;21617:24;21579:72;:::i;:::-;20729:1032;;;;-1:-1:-1;20729:1032:102;;21724:3;21709:19;21696:33;;20729:1032;-1:-1:-1;;;20729:1032:102:o;21998:513::-;22110:6;22118;22171:2;22159:9;22150:7;22146:23;22142:32;22139:52;;;22187:1;22184;22177:12;22139:52;22226:9;22213:23;22245:31;22270:5;22245:31;:::i;:::-;22295:5;-1:-1:-1;22351:2:102;22336:18;;22323:32;-1:-1:-1;;;;;22367:30:102;;22364:50;;;22410:1;22407;22400:12;22364:50;22433:72;22497:7;22488:6;22477:9;22473:22;22433:72;:::i;:::-;22423:82;;;21998:513;;;;;:::o;22516:420::-;22569:3;22607:5;22601:12;22634:6;22629:3;22622:19;22666:4;22661:3;22657:14;22650:21;;22705:4;22698:5;22694:16;22728:1;22738:173;22752:6;22749:1;22746:13;22738:173;;;22813:13;;22801:26;;22856:4;22847:14;;;;22884:17;;;;22774:1;22767:9;22738:173;;;-1:-1:-1;22927:3:102;;22516:420;-1:-1:-1;;;;22516:420:102:o;22941:261::-;23120:2;23109:9;23102:21;23083:4;23140:56;23192:2;23181:9;23177:18;23169:6;23140:56;:::i;23434:411::-;23505:6;23513;23566:2;23554:9;23545:7;23541:23;23537:32;23534:52;;;23582:1;23579;23572:12;23534:52;23622:9;23609:23;-1:-1:-1;;;;;23647:6:102;23644:30;23641:50;;;23687:1;23684;23677:12;23641:50;23726:59;23777:7;23768:6;23757:9;23753:22;23726:59;:::i;24307:367::-;24375:6;24383;24436:2;24424:9;24415:7;24411:23;24407:32;24404:52;;;24452:1;24449;24442:12;24404:52;24491:9;24478:23;24510:31;24535:5;24510:31;:::i;:::-;24560:5;24638:2;24623:18;;;;24610:32;;-1:-1:-1;;;24307:367:102:o;25499:629::-;25585:6;25593;25601;25609;25662:3;25650:9;25641:7;25637:23;25633:33;25630:53;;;25679:1;25676;25669:12;25630:53;25718:9;25705:23;25737:31;25762:5;25737:31;:::i;:::-;25787:5;-1:-1:-1;25865:2:102;25850:18;;25837:32;;-1:-1:-1;25947:2:102;25932:18;;25919:32;25960:33;25919:32;25960:33;:::i;:::-;25499:629;;;;-1:-1:-1;26012:7:102;;26092:2;26077:18;26064:32;;-1:-1:-1;;25499:629:102:o;26133:551::-;26197:3;26235:5;26229:12;26262:6;26257:3;26250:19;26294:4;26289:3;26285:14;26278:21;;26333:4;26326:5;26322:16;26356:1;26366:293;26380:6;26377:1;26374:13;26366:293;;;26439:13;;-1:-1:-1;;;;;26509:28:102;26497:41;;26574:4;26565:14;;;;26632:17;;;;26534:1;26395:9;26366:293;;26689:495;26965:2;26954:9;26947:21;26928:4;26991:67;27054:2;27043:9;27039:18;27031:6;26991:67;:::i;:::-;27106:9;27098:6;27094:22;27089:2;27078:9;27074:18;27067:50;27134:44;27171:6;27163;27134:44;:::i;27189:625::-;27304:6;27312;27320;27373:2;27361:9;27352:7;27348:23;27344:32;27341:52;;;27389:1;27386;27379:12;27341:52;27428:9;27415:23;27447:31;27472:5;27447:31;:::i;:::-;27497:5;-1:-1:-1;27553:2:102;27538:18;;27525:32;-1:-1:-1;;;;;27569:30:102;;27566:50;;;27612:1;27609;27602:12;27566:50;27635:70;27697:7;27688:6;27677:9;27673:22;27635:70;:::i;:::-;27189:625;;27625:80;;-1:-1:-1;;;;27778:2:102;27763:18;;;;27750:32;;27189:625::o;27819:254::-;27913:6;27966:2;27954:9;27945:7;27941:23;27937:32;27934:52;;;27982:1;27979;27972:12;27934:52;28005:62;28059:7;28048:9;28005:62;:::i;28078:127::-;28139:10;28134:3;28130:20;28127:1;28120:31;28170:4;28167:1;28160:15;28194:4;28191:1;28184:15;29225:349;29427:2;29409:21;;;29466:2;29446:18;;;29439:30;29505:27;29500:2;29485:18;;29478:55;29565:2;29550:18;;29225:349::o;29579:339::-;29687:4;29745:11;29732:25;29839:2;29835:7;29824:8;29808:14;29804:29;29800:43;29780:18;29776:68;29766:96;;29858:1;29855;29848:12;29766:96;29879:33;;;;;29579:339;-1:-1:-1;;29579:339:102:o;29923:545::-;30016:4;30022:6;30082:11;30069:25;30176:2;30172:7;30161:8;30145:14;30141:29;30137:43;30117:18;30113:68;30103:96;;30195:1;30192;30185:12;30103:96;30222:33;;30274:20;;;-1:-1:-1;;;;;;30306:30:102;;30303:50;;;30349:1;30346;30339:12;30303:50;30382:4;30370:17;;-1:-1:-1;30433:1:102;30429:14;;;30413;30409:35;30399:46;;30396:66;;;30458:1;30455;30448:12;32374:680;32576:2;32561:18;;32601:20;;32630:31;32601:20;32630:31;:::i;:::-;-1:-1:-1;;;;;32688:31:102;32670:50;;32769:4;32757:17;;32744:31;32784:33;32744:31;32784:33;:::i;:::-;-1:-1:-1;;;;;32855:33:102;32848:4;32833:20;;32826:63;32938:4;32926:17;;32913:31;32953:32;32913:31;32953:32;:::i;:::-;33036:10;33027:7;33023:24;33016:4;33005:9;33001:20;32994:54;;32374:680;;;;:::o;33059:390::-;33218:2;33207:9;33200:21;33257:6;33252:2;33241:9;33237:18;33230:34;33314:6;33306;33301:2;33290:9;33286:18;33273:48;33370:1;33341:22;;;33365:2;33337:31;;;33330:42;;;;33433:2;33412:15;;;-1:-1:-1;;33408:29:102;33393:45;33389:54;;33059:390;-1:-1:-1;33059:390:102:o;33454:251::-;33524:6;33577:2;33565:9;33556:7;33552:23;33548:32;33545:52;;;33593:1;33590;33583:12;33545:52;33625:9;33619:16;33644:31;33669:5;33644:31;:::i;33710:406::-;33912:2;33894:21;;;33951:2;33931:18;;;33924:30;33990:34;33985:2;33970:18;;33963:62;-1:-1:-1;;;34056:2:102;34041:18;;34034:40;34106:3;34091:19;;33710:406::o;34121:419::-;34323:2;34305:21;;;34362:2;34342:18;;;34335:30;34401:34;34396:2;34381:18;;34374:62;34472:25;34467:2;34452:18;;34445:53;34530:3;34515:19;;34121:419::o;34545:245::-;34612:6;34665:2;34653:9;34644:7;34640:23;34636:32;34633:52;;;34681:1;34678;34671:12;34633:52;34713:9;34707:16;34732:28;34754:5;34732:28;:::i;34795:404::-;34997:2;34979:21;;;35036:2;35016:18;;;35009:30;35075:34;35070:2;35055:18;;35048:62;-1:-1:-1;;;35141:2:102;35126:18;;35119:38;35189:3;35174:19;;34795:404::o;36603:328::-;36699:4;36757:11;36744:25;36851:3;36847:8;36836;36820:14;36816:29;36812:44;36792:18;36788:69;36778:97;;36871:1;36868;36861:12;37501:241;37557:6;37610:2;37598:9;37589:7;37585:23;37581:32;37578:52;;;37626:1;37623;37616:12;37578:52;37665:9;37652:23;37684:28;37706:5;37684:28;:::i;37747:806::-;37834:12;;-1:-1:-1;;;;;37830:38:102;;;37818:51;;37922:4;37911:16;;;37905:23;37901:49;;37885:14;;;37878:73;38004:4;37993:16;;;37987:23;37983:49;;;37967:14;;;37960:73;38082:4;38071:16;;;38065:23;38049:14;;;38042:47;38135:4;38124:16;;;38118:23;-1:-1:-1;;38150:47:102;;38182:14;;38118:23;25026:10;25015:22;25003:35;;24950:94;38150:47;;38245:4;38238:5;38234:16;38228:23;38283:4;38276;38271:3;38267:14;38260:28;38309:71;38374:4;38369:3;38365:14;38349;38309:71;:::i;:::-;38297:83;;38428:4;38421:5;38417:16;38411:23;38476:3;38470:4;38466:14;38459:4;38454:3;38450:14;38443:38;38497:50;38542:4;38526:14;38497:50;:::i;38558:267::-;38743:2;38732:9;38725:21;38706:4;38763:56;38815:2;38804:9;38800:18;38792:6;38763:56;:::i;38830:1206::-;39063:2;39052:9;39045:21;39026:4;39101:6;39095:13;39144:4;39139:2;39128:9;39124:18;39117:32;39172:74;39241:3;39230:9;39226:19;39212:12;39172:74;:::i;:::-;39158:88;;39295:2;39287:6;39283:15;39277:22;39367:2;39363:7;39351:9;39343:6;39339:22;39335:36;39330:2;39319:9;39315:18;39308:64;39395:52;39440:6;39424:14;39395:52;:::i;:::-;39381:66;;;39528:1;39524;39519:3;39515:11;39511:19;39505:2;39497:6;39493:15;39487:22;39483:48;39478:2;39467:9;39463:18;39456:76;39581:2;39573:6;39569:15;39563:22;39666:1;39662;39657:3;39653:11;39649:19;39632:14;39626:21;39622:47;39616:3;39605:9;39601:19;39594:76;39743:26;39737:2;39721:14;39717:23;39711:30;39707:63;39701:3;39690:9;39686:19;39679:92;;39820:3;39812:6;39808:16;39802:23;39834:54;39883:3;39872:9;39868:19;39852:14;25026:10;25015:22;25003:35;;24950:94;39834:54;-1:-1:-1;39937:3:102;39925:16;;39919:23;-1:-1:-1;;;;;10299:31:102;;40001:4;39986:20;;10287:44;39951:56;10233:104;40041:306;40117:6;40125;40178:2;40166:9;40157:7;40153:23;40149:32;40146:52;;;40194:1;40191;40184:12;40146:52;40226:9;40220:16;40245:28;40267:5;40245:28;:::i;:::-;40337:2;40322:18;;;;40316:25;40292:5;;40316:25;;-1:-1:-1;;;40041:306:102:o;40352:127::-;40413:10;40408:3;40404:20;40401:1;40394:31;40444:4;40441:1;40434:15;40468:4;40465:1;40458:15;40484:135;40523:3;40544:17;;;40541:43;;40564:18;;:::i;:::-;-1:-1:-1;40611:1:102;40600:13;;40484:135::o;41102:338::-;41315:6;41304:9;41297:25;41358:2;41353;41342:9;41338:18;41331:30;41278:4;41378:56;41430:2;41419:9;41415:18;41407:6;41378:56;:::i;43172:183::-;43241:6;43294:2;43282:9;43273:7;43269:23;43265:32;43262:52;;;43310:1;43307;43300:12;43262:52;-1:-1:-1;43333:16:102;;43172:183;-1:-1:-1;43172:183:102:o;43360:731::-;43425:5;43478:3;43471:4;43463:6;43459:17;43455:27;43445:55;;43496:1;43493;43486:12;43445:55;43529:6;43523:13;43556:75;43572:58;43623:6;43572:58;:::i;43556:75::-;43655:3;43679:6;43674:3;43667:19;43711:4;43706:3;43702:14;43695:21;;43772:4;43762:6;43759:1;43755:14;43747:6;43743:27;43739:38;43725:52;;43800:3;43792:6;43789:15;43786:35;;;43817:1;43814;43807:12;43786:35;43853:4;43845:6;43841:17;43867:193;43883:6;43878:3;43875:15;43867:193;;;43975:10;;43998:18;;44045:4;44036:14;;;;43900;43867:193;;44096:1239;44244:6;44252;44305:2;44293:9;44284:7;44280:23;44276:32;44273:52;;;44321:1;44318;44311:12;44273:52;44354:9;44348:16;-1:-1:-1;;;;;44379:6:102;44376:30;44373:50;;;44419:1;44416;44409:12;44373:50;44442:22;;44495:4;44487:13;;44483:27;-1:-1:-1;44473:55:102;;44524:1;44521;44514:12;44473:55;44557:2;44551:9;44580:75;44596:58;44647:6;44596:58;:::i;44580:75::-;44677:3;44701:6;44696:3;44689:19;44733:4;44728:3;44724:14;44717:21;;44790:4;44780:6;44777:1;44773:14;44769:2;44765:23;44761:34;44747:48;;44818:7;44810:6;44807:19;44804:39;;;44839:1;44836;44829:12;44804:39;44871:4;44867:2;44863:13;44852:24;;44885:214;44901:6;44896:3;44893:15;44885:214;;;44976:3;44970:10;44993:31;45018:5;44993:31;:::i;:::-;45037:18;;45084:4;44918:14;;;;45075;;;;44885:214;;;45118:5;45108:15;;;;;;45169:4;45158:9;45154:20;45148:27;-1:-1:-1;;;;;45190:8:102;45187:32;45184:52;;;45232:1;45229;45222:12;45184:52;45255:74;45321:7;45310:8;45299:9;45295:24;45255:74;:::i;45340:125::-;45405:9;;;45426:10;;;45423:36;;;45439:18;;:::i;45470:128::-;45537:9;;;45558:11;;;45555:37;;;45572:18;;:::i;50553:390::-;-1:-1:-1;;;;;50792:32:102;;;50774:51;;50861:32;;;;50856:2;50841:18;;50834:60;50925:2;50910:18;;50903:34;;;;50762:2;50747:18;;50553:390::o;51441:245::-;51499:6;51552:2;51540:9;51531:7;51527:23;51523:32;51520:52;;;51568:1;51565;51558:12;51520:52;51607:9;51594:23;51626:30;51650:5;51626:30;:::i;52741:195::-;52845:11;;-1:-1:-1;;;;;;52841:54:102;-1:-1:-1;;;;;52897:31:102;;;;52838:91;;;;52825:105;;52741:195::o;52941:758::-;53122:5;53109:19;53137:33;53162:7;53137:33;:::i;:::-;53179:62;53233:7;53227:4;53179:62;:::i;:::-;;53278:1;53272:4;53268:12;53328:2;53321:5;53317:14;53304:28;53341:33;53366:7;53341:33;:::i;:::-;53383:68;53443:7;53431:10;53383:68;:::i;:::-;;53499:2;53492:5;53488:14;53475:28;53512:32;53536:7;53512:32;:::i;:::-;53563:17;;-1:-1:-1;;;;53611:34:102;53674:3;53651:17;;;;-1:-1:-1;;;53647:44:102;53608:84;53589:104;;-1:-1:-1;;52941:758:102:o;59835:202::-;59943:9;59980:51;60016:14;60009:5;59980:51;:::i;61986:555::-;62188:2;62170:21;;;62227:3;62207:18;;;62200:31;-1:-1:-1;;;;;;;;;;;62262:2:102;62247:18;;62240:62;62338:34;62333:2;62318:18;;62311:62;62410:34;62404:3;62389:19;;62382:63;-1:-1:-1;;;62476:3:102;62461:19;;62454:45;62531:3;62516:19;;61986:555::o;63556:596::-;63731:6;63720:9;63713:25;63774:2;63769;63758:9;63754:18;63747:30;63694:4;63806:6;63800:13;63849:6;63844:2;63833:9;63829:18;63822:34;63874:1;63884:140;63898:6;63895:1;63892:13;63884:140;;;64009:2;63993:14;;;63989:23;;63983:30;63978:2;63959:17;;;63955:26;63948:66;63913:10;63884:140;;;63888:3;64073:1;64068:2;64059:6;64048:9;64044:22;64040:31;64033:42;64143:2;64136;64132:7;64127:2;64119:6;64115:15;64111:29;64100:9;64096:45;64092:54;64084:62;;;63556:596;;;;;:::o;64157:290::-;64226:6;64279:2;64267:9;64258:7;64254:23;64250:32;64247:52;;;64295:1;64292;64285:12;64247:52;64321:16;;-1:-1:-1;;;;;;64366:32:102;;64356:43;;64346:71;;64413:1;64410;64403:12;66308:127;66369:10;66364:3;66360:20;66357:1;66350:31;66400:4;66397:1;66390:15;66424:4;66421:1;66414:15",
        "linkReferences": {},
        "immutableReferences": {
            "6218": [
                {
                    "start": 10056,
                    "length": 32
                }
            ],
            "8476": [
                {
                    "start": 1327,
                    "length": 32
                },
                {
                    "start": 4203,
                    "length": 32
                },
                {
                    "start": 5095,
                    "length": 32
                },
                {
                    "start": 5893,
                    "length": 32
                },
                {
                    "start": 7804,
                    "length": 32
                },
                {
                    "start": 11119,
                    "length": 32
                },
                {
                    "start": 11506,
                    "length": 32
                },
                {
                    "start": 16934,
                    "length": 32
                },
                {
                    "start": 18066,
                    "length": 32
                }
            ],
            "8480": [
                {
                    "start": 2007,
                    "length": 32
                }
            ],
            "8484": [
                {
                    "start": 1511,
                    "length": 32
                },
                {
                    "start": 4253,
                    "length": 32
                },
                {
                    "start": 5145,
                    "length": 32
                },
                {
                    "start": 7656,
                    "length": 32
                },
                {
                    "start": 10914,
                    "length": 32
                },
                {
                    "start": 16640,
                    "length": 32
                },
                {
                    "start": 17900,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "DELEGATION_APPROVAL_TYPEHASH()": "04a4f979",
        "DOMAIN_TYPEHASH()": "20606b70",
        "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS()": "4fc40b61",
        "MAX_WITHDRAWAL_DELAY_BLOCKS()": "ca661c04",
        "STAKER_DELEGATION_TYPEHASH()": "43377382",
        "beaconChainETHStrategy()": "9104c319",
        "calculateCurrentStakerDelegationDigestHash(address,address,uint256)": "1bbce091",
        "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": "0b9f487a",
        "calculateStakerDelegationDigestHash(address,uint256,address,uint256)": "c94b5111",
        "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))": "597b36da",
        "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)": "60d7faed",
        "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])": "33404396",
        "cumulativeWithdrawalsQueued(address)": "a1788484",
        "decreaseDelegatedShares(address,address,uint256)": "132d4967",
        "delegateTo(address,(bytes,uint256),bytes32)": "eea9064b",
        "delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)": "7f548071",
        "delegatedTo(address)": "65da1264",
        "delegationApprover(address)": "3cdeb5e0",
        "delegationApproverSaltIsSpent(address,bytes32)": "bb45fef2",
        "domainSeparator()": "f698da25",
        "earningsReceiver(address)": "5f966f14",
        "eigenPodManager()": "4665bcda",
        "getDelegatableShares(address)": "cf80873e",
        "getOperatorShares(address,address[])": "90041347",
        "getWithdrawalDelay(address[])": "0449ca39",
        "increaseDelegatedShares(address,address,uint256)": "28a573ae",
        "initialize(address,address,uint256,uint256,address[],uint256[])": "22bf40e4",
        "isDelegated(address)": "3e28391d",
        "isOperator(address)": "6d70f7ae",
        "migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])": "5cfe8d2c",
        "minWithdrawalDelayBlocks()": "c448feb8",
        "modifyOperatorDetails((address,address,uint32))": "f16172b0",
        "operatorDetails(address)": "c5e480db",
        "operatorShares(address,address)": "778e55f3",
        "owner()": "8da5cb5b",
        "pause(uint256)": "136439dd",
        "pauseAll()": "595c6a67",
        "paused()": "5c975abb",
        "paused(uint8)": "5ac86ab7",
        "pauserRegistry()": "886f1195",
        "pendingWithdrawals(bytes32)": "b7f06ebe",
        "queueWithdrawals((address[],uint256[],address)[])": "0dd8dd02",
        "registerAsOperator((address,address,uint32),string)": "0f589e59",
        "renounceOwnership()": "715018a6",
        "setMinWithdrawalDelayBlocks(uint256)": "635bbd10",
        "setPauserRegistry(address)": "10d67a2f",
        "setStrategyWithdrawalDelayBlocks(address[],uint256[])": "1522bf02",
        "slasher()": "b1344271",
        "stakerNonce(address)": "29c77d4f",
        "stakerOptOutWindowBlocks(address)": "16928365",
        "strategyManager()": "39b70e38",
        "strategyWithdrawalDelayBlocks(address)": "c488375a",
        "transferOwnership(address)": "f2fde38b",
        "undelegate(address)": "da8be864",
        "unpause(uint256)": "fabc1cbc",
        "updateOperatorMetadataURI(string)": "99be81c8"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"_strategyManager\",\"type\":\"address\"},{\"internalType\":\"contract ISlasher\",\"name\":\"_slasher\",\"type\":\"address\"},{\"internalType\":\"contract IEigenPodManager\",\"name\":\"_eigenPodManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MinWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorDetailsModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"OperatorMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"operatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerForceUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"StrategyWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"WithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"oldWithdrawalRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newWithdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"WithdrawalMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"WithdrawalQueued\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_APPROVAL_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STAKER_OPT_OUT_WINDOW_BLOCKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAWAL_DELAY_BLOCKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKER_DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateCurrentStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegationApprover\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateDelegationApprovalDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakerNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"calculateWithdrawalRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"middlewareTimesIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAsTokens\",\"type\":\"bool\"}],\"name\":\"completeQueuedWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[][]\",\"name\":\"tokens\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"middlewareTimesIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"receiveAsTokens\",\"type\":\"bool[]\"}],\"name\":\"completeQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cumulativeWithdrawalsQueued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"decreaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"stakerSignatureAndExpiry\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateToBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatedTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"delegationApprover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"delegationApproverSaltIsSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"earningsReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getDelegatableShares\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getOperatorShares\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getWithdrawalDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"increaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minWithdrawalDelayBlocks\",\"type\":\"uint256\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"_strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_withdrawalDelayBlocks\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]\",\"name\":\"withdrawalsToMigrate\",\"type\":\"tuple[]\"}],\"name\":\"migrateQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"modifyOperatorDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"operatorDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct IDelegationManager.QueuedWithdrawalParams[]\",\"name\":\"queuedWithdrawalParams\",\"type\":\"tuple[]\"}],\"name\":\"queueWithdrawals\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"registeringOperatorDetails\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"registerAsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinWithdrawalDelayBlocks\",\"type\":\"uint256\"}],\"name\":\"setMinWithdrawalDelayBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawalDelayBlocks\",\"type\":\"uint256[]\"}],\"name\":\"setStrategyWithdrawalDelayBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contract ISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"stakerOptOutWindowBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategyWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"withdrawalRoots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateOperatorMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OperatorMetadataURIUpdated(address,string)\":{\"details\":\"Note that these strings are *never stored in storage* and are instead purely emitted in events for off-chain indexing\"},\"WithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]))\":{\"params\":{\"withdrawal\":\"Is the withdrawal itself.\",\"withdrawalRoot\":\"Is the hash of the `withdrawal`.\"}}},\"kind\":\"dev\",\"methods\":{\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"params\":{\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"params\":{\"_delegationApprover\":\"the operator's `delegationApprover` who will be signing the delegationHash (in general)\",\"approverSalt\":\"A unique and single use value associated with the approver signature.\",\"expiry\":\"Time after which the approver's signature becomes invalid\",\"operator\":\"The account receiving delegated stake\",\"staker\":\"The account delegating their stake\"}},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"params\":{\"_stakerNonce\":\"The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`\",\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"details\":\"middlewareTimesIndex is unused, but will be used in the Slasher eventuallybeaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.\",\"params\":{\"middlewareTimesIndex\":\"is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\",\"receiveAsTokens\":\"If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.\",\"tokens\":\"Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)\",\"withdrawal\":\"The Withdrawal to complete.\"}},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"details\":\"See `completeQueuedWithdrawal` for relevant dev tags\",\"params\":{\"middlewareTimesIndexes\":\"One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.\",\"receiveAsTokens\":\"Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.\",\"tokens\":\"Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.\",\"withdrawals\":\"The Withdrawals to complete.\"}},\"constructor\":{\"details\":\"Initializes the immutable addresses of the strategy mananger and slasher.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to decrease.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to decrease the delegated shares.\"}},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"details\":\"The approverSignatureAndExpiry is used in the event that:          1) the operator's `delegationApprover` address is set to a non-zero value.                  AND          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator             or their delegationApprover is the `msg.sender`, then approval is assumed.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"A unique single use value tied to an individual signature.\",\"approverSignatureAndExpiry\":\"Verifies the operator approves of this delegation\",\"operator\":\"The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer.\"}},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"details\":\"If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.the operator's `delegationApprover` address is set to a non-zero value.neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover is the `msg.sender`, then approval is assumed.This function will revert if the current `block.timestamp` is equal to or exceeds the expiryIn the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.\",\"approverSignatureAndExpiry\":\"is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:\",\"operator\":\"The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.\",\"staker\":\"The account delegating stake to an `operator` account\",\"stakerSignatureAndExpiry\":\"Signed data from the staker authorizing delegating stake to an operator\"}},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.\"},\"getDelegatableShares(address)\":{\"details\":\"Returns two empty arrays in the case that the Staker has no actively-delegateable shares.\"},\"getWithdrawalDelay(address[])\":{\"params\":{\"strategies\":\"The strategies to check withdrawal delays for\"}},\"increaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to increase.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to increase the delegated shares.\"}},\"initialize(address,address,uint256,uint256,address[],uint256[])\":{\"details\":\"Initializes the addresses of the initial owner, pauser registry, and paused status. minWithdrawalDelayBlocks is set only once here\"},\"migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])\":{\"details\":\"This function is expected to be removed in the next upgrade, after all queued withdrawals have been migrated.\"},\"modifyOperatorDetails((address,address,uint32))\":{\"details\":\"The caller must have previously registered as an operator in EigenLayer.This function will revert if the caller attempts to set their `earningsReceiver` to address(0).\",\"params\":{\"newOperatorDetails\":\"is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerAsOperator((address,address,uint32),string)\":{\"details\":\"Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \\\"delegated to themself\\\".This function will revert if the caller attempts to set their `earningsReceiver` to address(0).Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"is a URI for the operator's metadata, i.e. a link providing more details on the operator.\",\"registeringOperatorDetails\":\"is the `OperatorDetails` for the operator.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMinWithdrawalDelayBlocks(uint256)\":{\"params\":{\"newMinWithdrawalDelayBlocks\":\"new value of `minWithdrawalDelayBlocks`.\"}},\"setStrategyWithdrawalDelayBlocks(address[],uint256[])\":{\"params\":{\"strategies\":\"The strategies to set the minimum withdrawal delay blocks for\",\"withdrawalDelayBlocks\":\"The minimum withdrawal delay blocks to set for each strategy\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateOperatorMetadataURI(string)\":{\"params\":{\"metadataURI\":\"The URI for metadata associated with an operator\"}}},\"title\":\"DelegationManager\",\"version\":1},\"userdoc\":{\"events\":{\"MinWithdrawalDelayBlocksSet(uint256,uint256)\":{\"notice\":\"Emitted when the `minWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"OperatorDetailsModified(address,(address,address,uint32))\":{\"notice\":\"Emitted when an operator updates their OperatorDetails to @param newOperatorDetails\"},\"OperatorMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when @param operator indicates that they are updating their MetadataURI string\"},\"OperatorSharesDecreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are decreased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"OperatorSharesIncreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are increased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"StakerDelegated(address,address)\":{\"notice\":\"Emitted when @param staker delegates to @param operator.\"},\"StakerForceUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker is undelegated via a call not originating from the staker themself\"},\"StakerUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker undelegates from @param operator.\"},\"StrategyWithdrawalDelayBlocksSet(address,uint256,uint256)\":{\"notice\":\"Emitted when the `strategyWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"},\"WithdrawalCompleted(bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is completed\"},\"WithdrawalMigrated(bytes32,bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is *migrated* from the StrategyManager to the DelegationManager\"},\"WithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Emitted when a new withdrawal is queued.\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_APPROVAL_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `DelegationApproval` struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"STAKER_DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `StakerDelegation` struct used by the contract\"},\"beaconChainETHStrategy()\":{\"notice\":\"Canonical, virtual beacon chain ETH strategy\"},\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"notice\":\"Calculates the digestHash for a `staker` to sign to delegate to an `operator`\"},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"notice\":\"Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions.\"},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"notice\":\"Calculates the digest hash to be signed and used in the `delegateToBySignature` function\"},\"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Returns the keccak256 hash of `withdrawal`.\"},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"notice\":\"Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`\"},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"notice\":\"Array-ified version of `completeQueuedWithdrawal`. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`\"},\"cumulativeWithdrawalsQueued(address)\":{\"notice\":\"Mapping: staker => cumulative number of queued withdrawals they have ever initiated.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Decreases a staker's delegated share balance in a strategy.\"},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates their stake to an operator.\"},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates a staker's stake to an operator with valid signatures from both parties.\"},\"delegatedTo(address)\":{\"notice\":\"Mapping: staker => operator whom the staker is currently delegated to.\"},\"delegationApprover(address)\":{\"notice\":\"Returns the delegationApprover account for an operator\"},\"delegationApproverSaltIsSpent(address,bytes32)\":{\"notice\":\"Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover.\"},\"domainSeparator()\":{\"notice\":\"Getter function for the current EIP-712 domain separator for this contract.\"},\"eigenPodManager()\":{\"notice\":\"The EigenPodManager contract for EigenLayer\"},\"getDelegatableShares(address)\":{\"notice\":\"Returns the number of actively-delegatable shares a staker has across all strategies.\"},\"getOperatorShares(address,address[])\":{\"notice\":\"Given array of strategies, returns array of shares for the operator\"},\"getWithdrawalDelay(address[])\":{\"notice\":\"Given a list of strategies, return the minimum number of blocks that must pass to withdraw from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay.\"},\"increaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Increases a staker's delegated share balance in a strategy.\"},\"isDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise.\"},\"isOperator(address)\":{\"notice\":\"Returns true is an operator has previously registered for delegation.\"},\"migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])\":{\"notice\":\"Migrates an array of queued withdrawals from the StrategyManager contract to this contract.\"},\"minWithdrawalDelayBlocks()\":{\"notice\":\"Global minimum withdrawal delay for all strategy withdrawals. In a prior Goerli release, we only had a global min withdrawal delay across all strategies. In addition, we now also configure withdrawal delays on a per-strategy basis. To withdraw from a strategy, max(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy]) number of blocks must have passed.  See mapping strategyWithdrawalDelayBlocks below for per-strategy withdrawal delays.\"},\"modifyOperatorDetails((address,address,uint32))\":{\"notice\":\"Updates an operator's stored `OperatorDetails`.\"},\"operatorDetails(address)\":{\"notice\":\"Returns the OperatorDetails struct associated with an `operator`.\"},\"operatorShares(address,address)\":{\"notice\":\"returns the total number of shares in `strategy` that are delegated to `operator`.Mapping: operator => strategy => total number of shares in the strategy delegated to the operator.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"pendingWithdrawals(bytes32)\":{\"notice\":\"Mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending\"},\"queueWithdrawals((address[],uint256[],address)[])\":{\"notice\":\"Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay.\"},\"registerAsOperator((address,address,uint32),string)\":{\"notice\":\"Registers the caller as an operator in EigenLayer.\"},\"setMinWithdrawalDelayBlocks(uint256)\":{\"notice\":\"Owner-only function for modifying the value of the `minWithdrawalDelayBlocks` variable.\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"setStrategyWithdrawalDelayBlocks(address[],uint256[])\":{\"notice\":\"Called by owner to set the minimum withdrawal delay blocks for each passed in strategy Note that the min number of blocks to complete a withdrawal of a strategy is  MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])\"},\"slasher()\":{\"notice\":\"The Slasher contract for EigenLayer\"},\"stakerNonce(address)\":{\"notice\":\"Mapping: staker => number of signed messages (used in `delegateToBySignature`) from the staker that this contract has already checked.\"},\"stakerOptOutWindowBlocks(address)\":{\"notice\":\"Returns the stakerOptOutWindowBlocks for an operator\"},\"strategyManager()\":{\"notice\":\"The StrategyManager contract for EigenLayer\"},\"strategyWithdrawalDelayBlocks(address)\":{\"notice\":\"Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced).\"},\"undelegate(address)\":{\"notice\":\"Allows the staker, the staker's operator, or that operator's delegationApprover to undelegate a staker from their operator. Undelegation immediately removes ALL active shares/strategies from both the staker and operator, and places the shares and strategies in the withdrawal queue\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateOperatorMetadataURI(string)\":{\"notice\":\"Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThis is the contract for delegation in EigenLayer. The main functionalities of this contract are - enabling anyone to register as an operator in EigenLayer - allowing operators to specify parameters related to stakers who delegate to them - enabling any staker to delegate its stake to the operator of its choice (a given staker can only delegate to a single operator at a time) - enabling a staker to undelegate its assets from the operator it is delegated to (performed as part of the withdrawal process, initiated through the StrategyManager)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol\":\"DelegationManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/\"]},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol\":{\"keccak256\":\"0xb772a65de86f4cad2ec7f98d4e395d60620c85a7d7ef3106de4ca627e715f0a4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1c4f2cd8a588726f3fbcae142aab5478837577b7f228d4b6113d6faa9a4c4f57\",\"dweb:/ipfs/QmRJsz7nnqkRoEKx9rzf3AWrSN2DxHWhGDe6qtMgP8Wym6\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManagerStorage.sol\":{\"keccak256\":\"0xd834e9bc2f4d03545102004ffa9651e5bf9b559d43e4102bf2955314ef2d94f5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c7670995b7ca634f94848f426b36278f98389c120b177b737ef325bd457ca00\",\"dweb:/ipfs/QmRtLyA4Kq5TrhhhXQAp2jAH7bJ5gqbjrr1JesD6wRbqqV\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe1626408822f552043f945d9aea18c5cbf878ef160da55e6f98706ed3a2acc07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://426f6dddc040f2040f48dd4236c4201a3c978b4417ec3b4bd1004f8a48b29aaa\",\"dweb:/ipfs/QmWgY46nZiw1KQYNYMrJDTz7S9Y4KhyUoM9zVD92Mkf51S\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xd8a64dbed03d3a5cdbefe1af75968f2dde07f973749c2ef5197bf7187c3e448c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://27ccc7c1fd9352e9f9b357c9063d255dc0ed9583f43db09f786ac7497d7846b8\",\"dweb:/ipfs/QmeJzuJkE9m2NUNwZSp4tGZEZmih1LeucePup8hzMVDRbG\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xccd308b0996295c92058b70c3b83563c009c074cb6815329c5f35e1b1a0571f4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cd1050445ff7aeb588b3b037aab53e2d92c3abd4620e94dfc95aca870e71b821\",\"dweb:/ipfs/QmUC96Ctwn3KQr6VSqHPpAVJ5qEUSVnugaxiZ8gfXygW92\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x70d89b05c1c5f47b74a07fbb5a2c05e606fed494e749ea98a9915b7be73df377\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://db1d3bfaee69aef53c8b12b492a17584e6d1ac94610cb8b38aad33e1cdd81af7\",\"dweb:/ipfs/QmfVsMTj1hcf9fMEm5RzvtcBN4dMcAKFBgUUDsNDr5XFpq\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol\":{\"keccak256\":\"0xe92d584c47c5828e026a8082af3da38a853e3942c4da7deb705d6470a41afab3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1c436c578781fd7d3dffdb24e906819422819f5e9a71d39ee63166a3d5cb3373\",\"dweb:/ipfs/QmP7bJhYqLpwqk2Xq4tqDCUMi2nFAhxxW3Pz36ctE1sbdD\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x9095fc29b96d102b10c02d44b3a6fbfa25593ef6ae4a810363ab885b9e6b0f71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0945132d482d56278edddb1d32209903c4d3839c87ba4317aadd97dc23610d0f\",\"dweb:/ipfs/QmVuM2aLRHxitx4rPx3GTYTBCVNcjYn6sHBRr1biUjLBP5\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xce8ee0ab28f2bce9e94aa19fffe55bebef080327632ac98ff3ab14994b369bc0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5c7e2be97a8840fa2a0434077a36136553a84efd9bff4b46712ce9fddb813a6a\",\"dweb:/ipfs/QmZKvgPxLAbGo1CqTA4AX6MCDPFLSSNt43ZKWRjvvzFp7S\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IStrategyManager",
                            "name": "_strategyManager",
                            "type": "address"
                        },
                        {
                            "internalType": "contract ISlasher",
                            "name": "_slasher",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IEigenPodManager",
                            "name": "_eigenPodManager",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint8",
                            "name": "version",
                            "type": "uint8",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Initialized",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "previousValue",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newValue",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MinWithdrawalDelayBlocksSet",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "struct IDelegationManager.OperatorDetails",
                            "name": "newOperatorDetails",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "earningsReceiver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegationApprover",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "stakerOptOutWindowBlocks",
                                    "type": "uint32"
                                }
                            ],
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "OperatorDetailsModified",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "string",
                            "name": "metadataURI",
                            "type": "string",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "OperatorMetadataURIUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "struct IDelegationManager.OperatorDetails",
                            "name": "operatorDetails",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "earningsReceiver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegationApprover",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "stakerOptOutWindowBlocks",
                                    "type": "uint32"
                                }
                            ],
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "OperatorRegistered",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "contract IStrategy",
                            "name": "strategy",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "shares",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "OperatorSharesDecreased",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "contract IStrategy",
                            "name": "strategy",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "shares",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "OperatorSharesIncreased",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OwnershipTransferred",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "newPausedStatus",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Paused",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "contract IPauserRegistry",
                            "name": "pauserRegistry",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "contract IPauserRegistry",
                            "name": "newPauserRegistry",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "PauserRegistrySet",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "StakerDelegated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "StakerForceUndelegated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "StakerUndelegated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "contract IStrategy",
                            "name": "strategy",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "previousValue",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newValue",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "StrategyWithdrawalDelayBlocksSet",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "newPausedStatus",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Unpaused",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "withdrawalRoot",
                            "type": "bytes32",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "WithdrawalCompleted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "oldWithdrawalRoot",
                            "type": "bytes32",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes32",
                            "name": "newWithdrawalRoot",
                            "type": "bytes32",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "WithdrawalMigrated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "withdrawalRoot",
                            "type": "bytes32",
                            "indexed": false
                        },
                        {
                            "internalType": "struct IDelegationManager.Withdrawal",
                            "name": "withdrawal",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "staker",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatedTo",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "withdrawer",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "nonce",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "startBlock",
                                    "type": "uint32"
                                },
                                {
                                    "internalType": "contract IStrategy[]",
                                    "name": "strategies",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "shares",
                                    "type": "uint256[]"
                                }
                            ],
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "WithdrawalQueued",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "DELEGATION_APPROVAL_TYPEHASH",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "DOMAIN_TYPEHASH",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MAX_WITHDRAWAL_DELAY_BLOCKS",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "STAKER_DELEGATION_TYPEHASH",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "beaconChainETHStrategy",
                    "outputs": [
                        {
                            "internalType": "contract IStrategy",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "expiry",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "calculateCurrentStakerDelegationDigestHash",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_delegationApprover",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "approverSalt",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "expiry",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "calculateDelegationApprovalDigestHash",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_stakerNonce",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "expiry",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "calculateStakerDelegationDigestHash",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IDelegationManager.Withdrawal",
                            "name": "withdrawal",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "staker",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatedTo",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "withdrawer",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "nonce",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "startBlock",
                                    "type": "uint32"
                                },
                                {
                                    "internalType": "contract IStrategy[]",
                                    "name": "strategies",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "shares",
                                    "type": "uint256[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "calculateWithdrawalRoot",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IDelegationManager.Withdrawal",
                            "name": "withdrawal",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "staker",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatedTo",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "withdrawer",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "nonce",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "startBlock",
                                    "type": "uint32"
                                },
                                {
                                    "internalType": "contract IStrategy[]",
                                    "name": "strategies",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "shares",
                                    "type": "uint256[]"
                                }
                            ]
                        },
                        {
                            "internalType": "contract IERC20[]",
                            "name": "tokens",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256",
                            "name": "middlewareTimesIndex",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bool",
                            "name": "receiveAsTokens",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "completeQueuedWithdrawal"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IDelegationManager.Withdrawal[]",
                            "name": "withdrawals",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "staker",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatedTo",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "withdrawer",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "nonce",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "startBlock",
                                    "type": "uint32"
                                },
                                {
                                    "internalType": "contract IStrategy[]",
                                    "name": "strategies",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "shares",
                                    "type": "uint256[]"
                                }
                            ]
                        },
                        {
                            "internalType": "contract IERC20[][]",
                            "name": "tokens",
                            "type": "address[][]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "middlewareTimesIndexes",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "bool[]",
                            "name": "receiveAsTokens",
                            "type": "bool[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "completeQueuedWithdrawals"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "cumulativeWithdrawalsQueued",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IStrategy",
                            "name": "strategy",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "shares",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "decreaseDelegatedShares"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "struct ISignatureUtils.SignatureWithExpiry",
                            "name": "approverSignatureAndExpiry",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes",
                                    "name": "signature",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "expiry",
                                    "type": "uint256"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes32",
                            "name": "approverSalt",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "delegateTo"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "struct ISignatureUtils.SignatureWithExpiry",
                            "name": "stakerSignatureAndExpiry",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes",
                                    "name": "signature",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "expiry",
                                    "type": "uint256"
                                }
                            ]
                        },
                        {
                            "internalType": "struct ISignatureUtils.SignatureWithExpiry",
                            "name": "approverSignatureAndExpiry",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes",
                                    "name": "signature",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "expiry",
                                    "type": "uint256"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes32",
                            "name": "approverSalt",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "delegateToBySignature"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "delegatedTo",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "delegationApprover",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "delegationApproverSaltIsSpent",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "domainSeparator",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "earningsReceiver",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "eigenPodManager",
                    "outputs": [
                        {
                            "internalType": "contract IEigenPodManager",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getDelegatableShares",
                    "outputs": [
                        {
                            "internalType": "contract IStrategy[]",
                            "name": "",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IStrategy[]",
                            "name": "strategies",
                            "type": "address[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getOperatorShares",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "contract IStrategy[]",
                            "name": "strategies",
                            "type": "address[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getWithdrawalDelay",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IStrategy",
                            "name": "strategy",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "shares",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "increaseDelegatedShares"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "initialOwner",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IPauserRegistry",
                            "name": "_pauserRegistry",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "initialPausedStatus",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_minWithdrawalDelayBlocks",
                            "type": "uint256"
                        },
                        {
                            "internalType": "contract IStrategy[]",
                            "name": "_strategies",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "_withdrawalDelayBlocks",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initialize"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isDelegated",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isOperator",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]",
                            "name": "withdrawalsToMigrate",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "contract IStrategy[]",
                                    "name": "strategies",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "shares",
                                    "type": "uint256[]"
                                },
                                {
                                    "internalType": "address",
                                    "name": "staker",
                                    "type": "address"
                                },
                                {
                                    "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
                                    "name": "withdrawerAndNonce",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "address",
                                            "name": "withdrawer",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "uint96",
                                            "name": "nonce",
                                            "type": "uint96"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "withdrawalStartBlock",
                                    "type": "uint32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatedAddress",
                                    "type": "address"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "migrateQueuedWithdrawals"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "minWithdrawalDelayBlocks",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IDelegationManager.OperatorDetails",
                            "name": "newOperatorDetails",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "earningsReceiver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegationApprover",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "stakerOptOutWindowBlocks",
                                    "type": "uint32"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "modifyOperatorDetails"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "operatorDetails",
                    "outputs": [
                        {
                            "internalType": "struct IDelegationManager.OperatorDetails",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "earningsReceiver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegationApprover",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "stakerOptOutWindowBlocks",
                                    "type": "uint32"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IStrategy",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "operatorShares",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "newPausedStatus",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "pause"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "pauseAll"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint8",
                            "name": "index",
                            "type": "uint8"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "paused",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "paused",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "pauserRegistry",
                    "outputs": [
                        {
                            "internalType": "contract IPauserRegistry",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "pendingWithdrawals",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IDelegationManager.QueuedWithdrawalParams[]",
                            "name": "queuedWithdrawalParams",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "contract IStrategy[]",
                                    "name": "strategies",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "shares",
                                    "type": "uint256[]"
                                },
                                {
                                    "internalType": "address",
                                    "name": "withdrawer",
                                    "type": "address"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "queueWithdrawals",
                    "outputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "",
                            "type": "bytes32[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IDelegationManager.OperatorDetails",
                            "name": "registeringOperatorDetails",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "earningsReceiver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegationApprover",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "stakerOptOutWindowBlocks",
                                    "type": "uint32"
                                }
                            ]
                        },
                        {
                            "internalType": "string",
                            "name": "metadataURI",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "registerAsOperator"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "renounceOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "newMinWithdrawalDelayBlocks",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setMinWithdrawalDelayBlocks"
                },
                {
                    "inputs": [
                        {
                            "internalType": "contract IPauserRegistry",
                            "name": "newPauserRegistry",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setPauserRegistry"
                },
                {
                    "inputs": [
                        {
                            "internalType": "contract IStrategy[]",
                            "name": "strategies",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "withdrawalDelayBlocks",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setStrategyWithdrawalDelayBlocks"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "slasher",
                    "outputs": [
                        {
                            "internalType": "contract ISlasher",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "stakerNonce",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "stakerOptOutWindowBlocks",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "strategyManager",
                    "outputs": [
                        {
                            "internalType": "contract IStrategyManager",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "contract IStrategy",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "strategyWithdrawalDelayBlocks",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "undelegate",
                    "outputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "withdrawalRoots",
                            "type": "bytes32[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "newPausedStatus",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unpause"
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "metadataURI",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateOperatorMetadataURI"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "calculateCurrentStakerDelegationDigestHash(address,address,uint256)": {
                        "params": {
                            "expiry": "The desired expiry time of the staker's signature",
                            "operator": "The operator who is being delegated to",
                            "staker": "The signing staker"
                        }
                    },
                    "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": {
                        "params": {
                            "_delegationApprover": "the operator's `delegationApprover` who will be signing the delegationHash (in general)",
                            "approverSalt": "A unique and single use value associated with the approver signature.",
                            "expiry": "Time after which the approver's signature becomes invalid",
                            "operator": "The account receiving delegated stake",
                            "staker": "The account delegating their stake"
                        }
                    },
                    "calculateStakerDelegationDigestHash(address,uint256,address,uint256)": {
                        "params": {
                            "_stakerNonce": "The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`",
                            "expiry": "The desired expiry time of the staker's signature",
                            "operator": "The operator who is being delegated to",
                            "staker": "The signing staker"
                        }
                    },
                    "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)": {
                        "details": "middlewareTimesIndex is unused, but will be used in the Slasher eventuallybeaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.",
                        "params": {
                            "middlewareTimesIndex": "is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array",
                            "receiveAsTokens": "If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.",
                            "tokens": "Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)",
                            "withdrawal": "The Withdrawal to complete."
                        }
                    },
                    "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])": {
                        "details": "See `completeQueuedWithdrawal` for relevant dev tags",
                        "params": {
                            "middlewareTimesIndexes": "One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.",
                            "receiveAsTokens": "Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.",
                            "tokens": "Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.",
                            "withdrawals": "The Withdrawals to complete."
                        }
                    },
                    "constructor": {
                        "details": "Initializes the immutable addresses of the strategy mananger and slasher."
                    },
                    "decreaseDelegatedShares(address,address,uint256)": {
                        "details": "*If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.",
                        "params": {
                            "shares": "The number of shares to decrease.",
                            "staker": "The address to increase the delegated shares for their operator.",
                            "strategy": "The strategy in which to decrease the delegated shares."
                        }
                    },
                    "delegateTo(address,(bytes,uint256),bytes32)": {
                        "details": "The approverSignatureAndExpiry is used in the event that:          1) the operator's `delegationApprover` address is set to a non-zero value.                  AND          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator             or their delegationApprover is the `msg.sender`, then approval is assumed.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs",
                        "params": {
                            "approverSalt": "A unique single use value tied to an individual signature.",
                            "approverSignatureAndExpiry": "Verifies the operator approves of this delegation",
                            "operator": "The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer."
                        }
                    },
                    "delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)": {
                        "details": "If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.the operator's `delegationApprover` address is set to a non-zero value.neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover is the `msg.sender`, then approval is assumed.This function will revert if the current `block.timestamp` is equal to or exceeds the expiryIn the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs",
                        "params": {
                            "approverSalt": "Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.",
                            "approverSignatureAndExpiry": "is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:",
                            "operator": "The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.",
                            "staker": "The account delegating stake to an `operator` account",
                            "stakerSignatureAndExpiry": "Signed data from the staker authorizing delegating stake to an operator"
                        }
                    },
                    "domainSeparator()": {
                        "details": "The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712."
                    },
                    "getDelegatableShares(address)": {
                        "details": "Returns two empty arrays in the case that the Staker has no actively-delegateable shares."
                    },
                    "getWithdrawalDelay(address[])": {
                        "params": {
                            "strategies": "The strategies to check withdrawal delays for"
                        }
                    },
                    "increaseDelegatedShares(address,address,uint256)": {
                        "details": "*If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.",
                        "params": {
                            "shares": "The number of shares to increase.",
                            "staker": "The address to increase the delegated shares for their operator.",
                            "strategy": "The strategy in which to increase the delegated shares."
                        }
                    },
                    "initialize(address,address,uint256,uint256,address[],uint256[])": {
                        "details": "Initializes the addresses of the initial owner, pauser registry, and paused status. minWithdrawalDelayBlocks is set only once here"
                    },
                    "migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])": {
                        "details": "This function is expected to be removed in the next upgrade, after all queued withdrawals have been migrated."
                    },
                    "modifyOperatorDetails((address,address,uint32))": {
                        "details": "The caller must have previously registered as an operator in EigenLayer.This function will revert if the caller attempts to set their `earningsReceiver` to address(0).",
                        "params": {
                            "newOperatorDetails": "is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`."
                        }
                    },
                    "owner()": {
                        "details": "Returns the address of the current owner."
                    },
                    "pause(uint256)": {
                        "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
                        "params": {
                            "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
                        }
                    },
                    "registerAsOperator((address,address,uint32),string)": {
                        "details": "Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \"delegated to themself\".This function will revert if the caller attempts to set their `earningsReceiver` to address(0).Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event",
                        "params": {
                            "metadataURI": "is a URI for the operator's metadata, i.e. a link providing more details on the operator.",
                            "registeringOperatorDetails": "is the `OperatorDetails` for the operator."
                        }
                    },
                    "renounceOwnership()": {
                        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
                    },
                    "setMinWithdrawalDelayBlocks(uint256)": {
                        "params": {
                            "newMinWithdrawalDelayBlocks": "new value of `minWithdrawalDelayBlocks`."
                        }
                    },
                    "setStrategyWithdrawalDelayBlocks(address[],uint256[])": {
                        "params": {
                            "strategies": "The strategies to set the minimum withdrawal delay blocks for",
                            "withdrawalDelayBlocks": "The minimum withdrawal delay blocks to set for each strategy"
                        }
                    },
                    "transferOwnership(address)": {
                        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
                    },
                    "unpause(uint256)": {
                        "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
                        "params": {
                            "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
                        }
                    },
                    "updateOperatorMetadataURI(string)": {
                        "params": {
                            "metadataURI": "The URI for metadata associated with an operator"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "DELEGATION_APPROVAL_TYPEHASH()": {
                        "notice": "The EIP-712 typehash for the `DelegationApproval` struct used by the contract"
                    },
                    "DOMAIN_TYPEHASH()": {
                        "notice": "The EIP-712 typehash for the contract's domain"
                    },
                    "STAKER_DELEGATION_TYPEHASH()": {
                        "notice": "The EIP-712 typehash for the `StakerDelegation` struct used by the contract"
                    },
                    "beaconChainETHStrategy()": {
                        "notice": "Canonical, virtual beacon chain ETH strategy"
                    },
                    "calculateCurrentStakerDelegationDigestHash(address,address,uint256)": {
                        "notice": "Calculates the digestHash for a `staker` to sign to delegate to an `operator`"
                    },
                    "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": {
                        "notice": "Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions."
                    },
                    "calculateStakerDelegationDigestHash(address,uint256,address,uint256)": {
                        "notice": "Calculates the digest hash to be signed and used in the `delegateToBySignature` function"
                    },
                    "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))": {
                        "notice": "Returns the keccak256 hash of `withdrawal`."
                    },
                    "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)": {
                        "notice": "Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`"
                    },
                    "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])": {
                        "notice": "Array-ified version of `completeQueuedWithdrawal`. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`"
                    },
                    "cumulativeWithdrawalsQueued(address)": {
                        "notice": "Mapping: staker => cumulative number of queued withdrawals they have ever initiated."
                    },
                    "decreaseDelegatedShares(address,address,uint256)": {
                        "notice": "Decreases a staker's delegated share balance in a strategy."
                    },
                    "delegateTo(address,(bytes,uint256),bytes32)": {
                        "notice": "Caller delegates their stake to an operator."
                    },
                    "delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)": {
                        "notice": "Caller delegates a staker's stake to an operator with valid signatures from both parties."
                    },
                    "delegatedTo(address)": {
                        "notice": "Mapping: staker => operator whom the staker is currently delegated to."
                    },
                    "delegationApprover(address)": {
                        "notice": "Returns the delegationApprover account for an operator"
                    },
                    "delegationApproverSaltIsSpent(address,bytes32)": {
                        "notice": "Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover."
                    },
                    "domainSeparator()": {
                        "notice": "Getter function for the current EIP-712 domain separator for this contract."
                    },
                    "eigenPodManager()": {
                        "notice": "The EigenPodManager contract for EigenLayer"
                    },
                    "getDelegatableShares(address)": {
                        "notice": "Returns the number of actively-delegatable shares a staker has across all strategies."
                    },
                    "getOperatorShares(address,address[])": {
                        "notice": "Given array of strategies, returns array of shares for the operator"
                    },
                    "getWithdrawalDelay(address[])": {
                        "notice": "Given a list of strategies, return the minimum number of blocks that must pass to withdraw from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay."
                    },
                    "increaseDelegatedShares(address,address,uint256)": {
                        "notice": "Increases a staker's delegated share balance in a strategy."
                    },
                    "isDelegated(address)": {
                        "notice": "Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
                    },
                    "isOperator(address)": {
                        "notice": "Returns true is an operator has previously registered for delegation."
                    },
                    "migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])": {
                        "notice": "Migrates an array of queued withdrawals from the StrategyManager contract to this contract."
                    },
                    "minWithdrawalDelayBlocks()": {
                        "notice": "Global minimum withdrawal delay for all strategy withdrawals. In a prior Goerli release, we only had a global min withdrawal delay across all strategies. In addition, we now also configure withdrawal delays on a per-strategy basis. To withdraw from a strategy, max(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy]) number of blocks must have passed.  See mapping strategyWithdrawalDelayBlocks below for per-strategy withdrawal delays."
                    },
                    "modifyOperatorDetails((address,address,uint32))": {
                        "notice": "Updates an operator's stored `OperatorDetails`."
                    },
                    "operatorDetails(address)": {
                        "notice": "Returns the OperatorDetails struct associated with an `operator`."
                    },
                    "operatorShares(address,address)": {
                        "notice": "returns the total number of shares in `strategy` that are delegated to `operator`.Mapping: operator => strategy => total number of shares in the strategy delegated to the operator."
                    },
                    "pause(uint256)": {
                        "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
                    },
                    "pauseAll()": {
                        "notice": "Alias for `pause(type(uint256).max)`."
                    },
                    "paused()": {
                        "notice": "Returns the current paused status as a uint256."
                    },
                    "paused(uint8)": {
                        "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
                    },
                    "pauserRegistry()": {
                        "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
                    },
                    "pendingWithdrawals(bytes32)": {
                        "notice": "Mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending"
                    },
                    "queueWithdrawals((address[],uint256[],address)[])": {
                        "notice": "Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay."
                    },
                    "registerAsOperator((address,address,uint32),string)": {
                        "notice": "Registers the caller as an operator in EigenLayer."
                    },
                    "setMinWithdrawalDelayBlocks(uint256)": {
                        "notice": "Owner-only function for modifying the value of the `minWithdrawalDelayBlocks` variable."
                    },
                    "setPauserRegistry(address)": {
                        "notice": "Allows the unpauser to set a new pauser registry"
                    },
                    "setStrategyWithdrawalDelayBlocks(address[],uint256[])": {
                        "notice": "Called by owner to set the minimum withdrawal delay blocks for each passed in strategy Note that the min number of blocks to complete a withdrawal of a strategy is  MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])"
                    },
                    "slasher()": {
                        "notice": "The Slasher contract for EigenLayer"
                    },
                    "stakerNonce(address)": {
                        "notice": "Mapping: staker => number of signed messages (used in `delegateToBySignature`) from the staker that this contract has already checked."
                    },
                    "stakerOptOutWindowBlocks(address)": {
                        "notice": "Returns the stakerOptOutWindowBlocks for an operator"
                    },
                    "strategyManager()": {
                        "notice": "The StrategyManager contract for EigenLayer"
                    },
                    "strategyWithdrawalDelayBlocks(address)": {
                        "notice": "Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced)."
                    },
                    "undelegate(address)": {
                        "notice": "Allows the staker, the staker's operator, or that operator's delegationApprover to undelegate a staker from their operator. Undelegation immediately removes ALL active shares/strategies from both the staker and operator, and places the shares and strategies in the withdrawal queue"
                    },
                    "unpause(uint256)": {
                        "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
                    },
                    "updateOperatorMetadataURI(string)": {
                        "notice": "Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@eigenlayer-middleware/=lib/eigenlayer-middleware/",
                "@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/",
                "@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/",
                "@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/",
                "@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/",
                "@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/",
                "@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/",
                "ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/",
                "eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/",
                "eigenlayer-middleware/=lib/eigenlayer-middleware/",
                "erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/",
                "openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol": "DelegationManager"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
                "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
                "urls": [
                    "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
                    "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
                "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
                "urls": [
                    "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
                    "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
                "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
                "urls": [
                    "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
                    "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
                "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
                "urls": [
                    "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
                    "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
                "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
                "urls": [
                    "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
                    "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
                "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
                "urls": [
                    "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
                    "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
                "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
                "urls": [
                    "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
                    "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
                "urls": [
                    "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
                    "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
                "urls": [
                    "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
                    "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
                "urls": [
                    "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
                    "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
                "keccak256": "0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481",
                "urls": [
                    "bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f",
                    "dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol": {
                "keccak256": "0xb772a65de86f4cad2ec7f98d4e395d60620c85a7d7ef3106de4ca627e715f0a4",
                "urls": [
                    "bzz-raw://1c4f2cd8a588726f3fbcae142aab5478837577b7f228d4b6113d6faa9a4c4f57",
                    "dweb:/ipfs/QmRJsz7nnqkRoEKx9rzf3AWrSN2DxHWhGDe6qtMgP8Wym6"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManagerStorage.sol": {
                "keccak256": "0xd834e9bc2f4d03545102004ffa9651e5bf9b559d43e4102bf2955314ef2d94f5",
                "urls": [
                    "bzz-raw://9c7670995b7ca634f94848f426b36278f98389c120b177b737ef325bd457ca00",
                    "dweb:/ipfs/QmRtLyA4Kq5TrhhhXQAp2jAH7bJ5gqbjrr1JesD6wRbqqV"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
                "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
                "urls": [
                    "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
                    "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
                "keccak256": "0xe1626408822f552043f945d9aea18c5cbf878ef160da55e6f98706ed3a2acc07",
                "urls": [
                    "bzz-raw://426f6dddc040f2040f48dd4236c4201a3c978b4417ec3b4bd1004f8a48b29aaa",
                    "dweb:/ipfs/QmWgY46nZiw1KQYNYMrJDTz7S9Y4KhyUoM9zVD92Mkf51S"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
                "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
                "urls": [
                    "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
                    "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
                ],
                "license": "CC0-1.0"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
                "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
                "urls": [
                    "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
                    "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
                "keccak256": "0xd8a64dbed03d3a5cdbefe1af75968f2dde07f973749c2ef5197bf7187c3e448c",
                "urls": [
                    "bzz-raw://27ccc7c1fd9352e9f9b357c9063d255dc0ed9583f43db09f786ac7497d7846b8",
                    "dweb:/ipfs/QmeJzuJkE9m2NUNwZSp4tGZEZmih1LeucePup8hzMVDRbG"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
                "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
                "urls": [
                    "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
                    "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
                "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
                "urls": [
                    "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
                    "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
                "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
                "urls": [
                    "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
                    "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
                "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
                "urls": [
                    "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
                    "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
                "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
                "urls": [
                    "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
                    "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
                "keccak256": "0xccd308b0996295c92058b70c3b83563c009c074cb6815329c5f35e1b1a0571f4",
                "urls": [
                    "bzz-raw://cd1050445ff7aeb588b3b037aab53e2d92c3abd4620e94dfc95aca870e71b821",
                    "dweb:/ipfs/QmUC96Ctwn3KQr6VSqHPpAVJ5qEUSVnugaxiZ8gfXygW92"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
                "keccak256": "0x70d89b05c1c5f47b74a07fbb5a2c05e606fed494e749ea98a9915b7be73df377",
                "urls": [
                    "bzz-raw://db1d3bfaee69aef53c8b12b492a17584e6d1ac94610cb8b38aad33e1cdd81af7",
                    "dweb:/ipfs/QmfVsMTj1hcf9fMEm5RzvtcBN4dMcAKFBgUUDsNDr5XFpq"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol": {
                "keccak256": "0xe92d584c47c5828e026a8082af3da38a853e3942c4da7deb705d6470a41afab3",
                "urls": [
                    "bzz-raw://1c436c578781fd7d3dffdb24e906819422819f5e9a71d39ee63166a3d5cb3373",
                    "dweb:/ipfs/QmP7bJhYqLpwqk2Xq4tqDCUMi2nFAhxxW3Pz36ctE1sbdD"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
                "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
                "urls": [
                    "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
                    "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
                ],
                "license": "BUSL-1.1"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
                "keccak256": "0x9095fc29b96d102b10c02d44b3a6fbfa25593ef6ae4a810363ab885b9e6b0f71",
                "urls": [
                    "bzz-raw://0945132d482d56278edddb1d32209903c4d3839c87ba4317aadd97dc23610d0f",
                    "dweb:/ipfs/QmVuM2aLRHxitx4rPx3GTYTBCVNcjYn6sHBRr1biUjLBP5"
                ],
                "license": "MIT"
            },
            "lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol": {
                "keccak256": "0xce8ee0ab28f2bce9e94aa19fffe55bebef080327632ac98ff3ab14994b369bc0",
                "urls": [
                    "bzz-raw://5c7e2be97a8840fa2a0434077a36136553a84efd9bff4b46712ce9fddb813a6a",
                    "dweb:/ipfs/QmZKvgPxLAbGo1CqTA4AX6MCDPFLSSNt43ZKWRjvvzFp7S"
                ],
                "license": "BUSL-1.1"
            }
        },
        "version": 1
    },
    "id": 30
}